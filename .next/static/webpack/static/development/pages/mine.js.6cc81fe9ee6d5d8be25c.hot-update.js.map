{"version":3,"file":"static/webpack/static/development/pages/mine.js.6cc81fe9ee6d5d8be25c.hot-update.js","sources":["webpack:///./components/tables/order-detail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Flex, Text, Box, Button, Row, Column } from \"rebass\"\nimport Table, { TableLine, ProductInfo } from \"./base-table\"\nimport StyleItem from \"../commons/min-style-item\"\n// import InputNumber from \"../number-input\"\n// import request from \"../../utils/request\"\n\nexport default props => {\n\tconst { OrderDetail } = props\n\tconst line = props.OrderDetail.orderData.length\n\t// const {orderData} = OrderDetail\n\tconsole.log(OrderDetail)\n\tconst [orderData, setOrderData] = useState(OrderDetail.orderData)\n\tconst [packageCount, setPackageCount] = useState(OrderDetail.packageCount)\n\tconst handleChangePackageCount = num => {\n\t\tif (num < 1) return\n\t\tsetPackageCount(num)\n\t\torderData.map((order, index) => {\n\t\t\torder.total = getItemsTotal(index) * num\n\t\t})\n\t\tsetOrderData([].concat(orderData))\n\t}\n\tconst handleChangeOrder = (styleIndex, sizeIndex, num) => {\n\t\tconsole.log(num)\n\t\tif (num < 0) return\n\t\torderData[styleIndex].sizeInfo[sizeIndex].num = parseInt(num, 10)\n\t\tlet allNumSum = getItemsTotal(styleIndex)\n\t\torderData[styleIndex].total = allNumSum * packageCount\n\t\tlet temp = new Number(\n\t\t\tallNumSum * packageCount * orderData[styleIndex].signalPrice\n\t\t)\n\t\torderData[styleIndex].totalPrice = temp.toFixed(2)\n\t\tsetOrderData([].concat(orderData))\n\t\t// console.log(\"orderData\", orderData)\n\t}\n\tconst getItemsTotal = index => {\n\t\tif (index < orderData.length) {\n\t\t\tlet count = 0\n\t\t\torderData[index].sizeInfo.map(size => {\n\t\t\t\tcount += size.num\n\t\t\t})\n\t\t\treturn count\n\t\t}\n\t}\n\n\treturn (\n\t\t<Flex\n\t\t\tflexDirection=\"column\"\n\t\t\tjustifyContent=\"space-between\"\n\t\t\tsx={{\n\t\t\t\tcursor: \"pointer\",\n\t\t\t\theight: \"100%\"\n\t\t\t}}\n\t\t>\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\tpadding: \"0 18px 18px 18px\",\n\t\t\t\t\theight: \"max-content\",\n\t\t\t\t\twidth: \"800px\",\n\t\t\t\t\tdisplay: \"table\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Table\n\t\t\t\t\thaveBorder\n\t\t\t\t\tsx={{ margin: \"0\", marginRight: \"1px\", width: \"100%\" }}\n\t\t\t\t\ttitles={[\n\t\t\t\t\t\t{ name: \"00\", width: \"2/22\", isHide: true },\n\t\t\t\t\t\t{ name: \"SECTION NUMBER\", width: \"2/22\" },\n\t\t\t\t\t\t{ name: \"COLOUR\", width: \"4/22\" },\n\t\t\t\t\t\t{ name: \"IMAGE\", width: \"1/22\" },\n\t\t\t\t\t\t{ name: \"SIZE\", width: \"2/22\" },\n\t\t\t\t\t\t{ name: \"PACKAGES\", width: \"2/22\" },\n\t\t\t\t\t\t{ name: \"QUANTITY\", width: \"2/22\" },\n\t\t\t\t\t\t{ name: \"PRICE\", width: \"4/22\" },\n\t\t\t\t\t\t{ name: \"TOTAL AMOUN\", width: \"1/22\" }\n\t\t\t\t\t]}\n\t\t\t\t>\n\t\t\t\t\t{orderData.map((item, index) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<TableLine noEdit key={`selectline-${item._id}`}>\n\t\t\t\t\t\t\t\t<Text rowspan={2} hasBorder={\"1px solid\"}>\n\t\t\t\t\t\t\t\t\t{index}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t<ProductInfo\n\t\t\t\t\t\t\t\t\trowspan={2}\n\t\t\t\t\t\t\t\t\tstyleNum=\"XSJHFH00928\"\n\t\t\t\t\t\t\t\t\thasBorder={\"1px solid\"}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\t\t\trowspan={2}\n\t\t\t\t\t\t\t\t\tflexDirection=\"column\"\n\t\t\t\t\t\t\t\t\thasBorder={\"1px solid\"}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ProductInfo made=\"2110 YE GREEN\" />\n\t\t\t\t\t\t\t\t\t<ProductInfo made=\"2110 YE GREEN\" />\n\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t<StyleItem\n\t\t\t\t\t\t\t\t\trowspan={2}\n\t\t\t\t\t\t\t\t\thasBorder={\"1px solid\"}\n\t\t\t\t\t\t\t\t\tmargin={\"1px\"}\n\t\t\t\t\t\t\t\t\tkey={`${index}-style-img`}\n\t\t\t\t\t\t\t\t\tstyleList={item.favorite.styleAndColor.map(x => {\n\t\t\t\t\t\t\t\t\t\t// styleList.push({ style: x.style, colors: x.colorIds })\n\t\t\t\t\t\t\t\t\t\treturn { style: x.styleId, colors: x.colorIds }\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\ttool={false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\t\t\trowspan={1}\n\t\t\t\t\t\t\t\t\tcolspan={item.sizeInfo.length}\n\t\t\t\t\t\t\t\t\tjustifyContent=\"space-between\"\n\t\t\t\t\t\t\t\t\thasBorder={\"1px solid\"}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{item.sizeInfo.map((size, sizeIndex) => (\n\t\t\t\t\t\t\t\t\t\t<Flex flexDirection=\"column\">\n\t\t\t\t\t\t\t\t\t\t\t<Text>{size.name}</Text>\n\t\t\t\t\t\t\t\t\t\t\t{/* <Text>{item.sizeInfo[sizeIndex].num}</Text> */}\n\t\t\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t{index > 0 ? null : (\n\t\t\t\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\t\t\t\trowspan={line * 2}\n\t\t\t\t\t\t\t\t\t\thasBorder={\"1px solid\"}\n\t\t\t\t\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\t\t\t\t\tsx={{ width: \"100%\", height: \"100%\" }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Text>{packageCount}</Text>\n\t\t\t\t\t\t\t\t\t\t{/* <InputNumber value={packageCount} /> */}\n\t\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t<Text rowspan={2} hasBorder={\"1px solid\"}>\n\t\t\t\t\t\t\t\t\t{item.total}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\t\t\trowspan={2}\n\t\t\t\t\t\t\t\t\thasBorder={\"1px solid\"}\n\t\t\t\t\t\t\t\t\tflexDirection=\"column\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{item.signalPrice}\n\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t<Text rowspan={2} hasBorder={\"1px solid\"}>\n\t\t\t\t\t\t\t\t\t{item.totalPrice}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</TableLine>\n\t\t\t\t\t\t\t<tr noEdit key={`selectline-1-${item._id}`}>\n\t\t\t\t\t\t\t\t<Flex justifyContent=\"space-between\" hasBorder={\"1px solid\"}>\n\t\t\t\t\t\t\t\t\t{item.sizeInfo.map(size => (\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<Text>{size.num}</Text>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</>\n\t\t\t\t\t))}\n\t\t\t\t</Table>\n\t\t\t</Box>\n\t\t</Flex>\n\t)\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AALA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAzEA;AAsFA;;;;A","sourceRoot":""}