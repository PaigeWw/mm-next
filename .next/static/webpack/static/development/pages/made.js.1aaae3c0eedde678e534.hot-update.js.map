{"version":3,"file":"static/webpack/static/development/pages/made.js.1aaae3c0eedde678e534.hot-update.js","sources":["webpack:///./components/commons/style-img.js"],"sourcesContent":["import React, { useEffect, useMemo } from \"react\"\nimport { ReactSVG } from \"react-svg\"\nimport { Image } from \"rebass\"\nimport { baseUrl } from \"../../utils/helper\"\n\nexport default props => {\n\tconst { width, svgUrl, shadowUrl, key, colors, svgId } = props\n\tconsole.log(colors)\n\tlet svgElement = false\n\tuseEffect(() => {\n\t\t// if()\n\t\t;`url(${colors[0]._id})`\n\t}, [])\n\n\tuseEffect(() => {\n\t\t// if()\n\t\tif (!svgElement || !colors) return\n\t\tfor (let i = 0; i < svgElement.children.length; i++) {\n\t\t\tif (\n\t\t\t\tsvgElement.children[i].tagName === \"g\" ||\n\t\t\t\tsvgElement.children[i].tagName === \"path\"\n\t\t\t) {\n\t\t\t\tsvgElement.children[i].style.fill = colors[0].type\n\t\t\t\t\t? `url(\"#${colors[0]._id}\")`\n\t\t\t\t\t: colors[0].value\n\t\t\t}\n\t\t}\n\t}, [colors])\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tposition: \"relative\",\n\t\t\t\twidth: width\n\t\t\t}}\n\t\t>\n\t\t\t<Image\n\t\t\t\tsrc={baseUrl + shadowUrl}\n\t\t\t\tsx={{\n\t\t\t\t\twidth: width,\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\tleft: 0\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<ReactSVG\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: width,\n\t\t\t\t\tminWidth: \"14px\"\n\t\t\t\t}}\n\t\t\t\tafterInjection={(error, svg) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tconsole.error(error)\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif (colors && colors.length > 0) {\n\t\t\t\t\t\tfor (let i = 0; i < svg.children.length; i++) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tsvg.children[i].tagName === \"g\" ||\n\t\t\t\t\t\t\t\tsvg.children[i].tagName === \"path\"\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tsvg.children[i].style.fill = colors[0].type\n\t\t\t\t\t\t\t\t\t? `url(\"#${colors[0]._id}\")`\n\t\t\t\t\t\t\t\t\t: colors[0].value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\trenumerateIRIElements={false}\n\t\t\t\tloading={() => {\n\t\t\t\t\tconsole.log(\"loading\")\n\t\t\t\t\treturn \"loading\"\n\t\t\t\t}}\n\t\t\t\tbeforeInjection={svg => {\n\t\t\t\t\tsvg.setAttribute(\"id\", svgId || key)\n\t\t\t\t\tlet svgDefs = document.createElementNS(\n\t\t\t\t\t\t\"http://www.w3.org/2000/svg\",\n\t\t\t\t\t\t\"defs\"\n\t\t\t\t\t)\n\t\t\t\t\tsvg.appendChild(svgDefs)\n\t\t\t\t\tsvg.setAttribute(\"style\", `width: ${width}; height: 100%`)\n\n\t\t\t\t\tfor (let i = 0; i < colors.length; i++) {\n\t\t\t\t\t\tlet color = colors[i]\n\t\t\t\t\t\tif (color.type) {\n\t\t\t\t\t\t\tlet svgPattern = document.createElementNS(\n\t\t\t\t\t\t\t\t\"http://www.w3.org/2000/svg\",\n\t\t\t\t\t\t\t\t\"pattern\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tsvgPattern.setAttribute(\"id\", color._id)\n\t\t\t\t\t\t\t// editPatterns[color._id] = svgPattern\n\t\t\t\t\t\t\tsvgPattern.setAttribute(\"patternUnits\", \"userSpaceOnUse\")\n\t\t\t\t\t\t\tsvgPattern.setAttribute(\"patternContentUnits\", \"userSpaceOnUse\")\n\t\t\t\t\t\t\tconst imgVals = { scale: 1 }\n\n\t\t\t\t\t\t\tlet W =\n\t\t\t\t\t\t\t\t((color.size * svg.width.baseVal.value) / 20) * imgVals.scale\n\t\t\t\t\t\t\tlet H = (W * color.height) / color.width\n\n\t\t\t\t\t\t\tsvgPattern.setAttribute(\"width\", `${W}px`)\n\t\t\t\t\t\t\tsvgPattern.setAttribute(\"height\", `${H}px`)\n\t\t\t\t\t\t\tsvgDefs.appendChild(svgPattern)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tevalScripts=\"always\"\n\t\t\t\tsrc={baseUrl + svgUrl}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAIA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiEA;;;;A","sourceRoot":""}