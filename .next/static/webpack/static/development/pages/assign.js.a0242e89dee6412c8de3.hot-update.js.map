{"version":3,"file":"static/webpack/static/development/pages/assign.js.a0242e89dee6412c8de3.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray.js","webpack:///./pages/assign.js"],"sourcesContent":["import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","import _Array$from from \"../../core-js/array/from\";\nimport _isIterable from \"../../core-js/is-iterable\";\nexport default function _iterableToArray(iter) {\n  if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return _Array$from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","import React, { useEffect, useState } from \"react\"\nimport { Flex, Text, Box, Button, Image, Select } from \"rebass\"\nimport useUserInfo from \"../hooks/getUserInfo\"\nimport Head from \"../components/nav\"\nimport AssginItem from \"../components/assign-item\"\n\nimport request from \"../utils/request.js\"\n\n// 'channel/assignGoods'  channelId goodsId\n// 'channel/getAssignGoods'  channelId goodsId\nexport default () => {\n\tconst info = useUserInfo()\n\tconst [goodsList, setGoodsList] = useState([])\n\tconst [channelList, setChannelList] = useState([])\n\tconst [assignCategoryList, setAssignCategoryList] = useState([])\n\tconst [currentChannel, setCurrentChannel] = useState({})\n\tconst [showChannels, setShowChannels] = useState(false)\n\tuseEffect(() => {\n\t\tconst getGoodsList = async () => {\n\t\t\tconst req = await request(\"goods/getList\")\n\t\t\tsetGoodsList(req)\n\t\t\tconsole.log(req)\n\t\t}\n\t\tgetGoodsList()\n\t\tconst getChannels = async () => {\n\t\t\tconst req = await request(\"user/getUserChannels\")\n\t\t\tsetChannelList(req.channels)\n\t\t\tif (req.channels.length > 0) {\n\t\t\t\tsetCurrentChannel(req.channels[0])\n\t\t\t}\n\t\t}\n\t\tgetChannels()\n\t}, [])\n\tuseEffect(() => {\n\t\tif (!currentChannel._id) return\n\t\tconst getAssignCategoryList = async () => {\n\t\t\tconst req = await request(\"channel/getAssignCategory\", {\n\t\t\t\tchannelId: currentChannel._id\n\t\t\t})\n\t\t\tif (req) {\n\t\t\t\tsetAssignCategoryList(req.categories)\n\t\t\t}\n\n\t\t\tconsole.log(req)\n\t\t}\n\t\tgetAssignCategoryList()\n\t}, [currentChannel])\n\n\thandleAssignCategory = async (categoryId, toggle) => {\n\t\tconst res = await request(\n\t\t\t\"channel/assignCategory\",\n\t\t\t{\n\t\t\t\tchannelId: currentChannel._id,\n\t\t\t\tcategoryId\n\t\t\t},\n\t\t\t\"post\"\n\t\t)\n\t\tif (res) {\n\t\t\tif (toggle) {\n\t\t\t\tlet index = assignCategoryList.indexOf(categoryId)\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tassignCategoryList.splice(index, 1)\n\t\t\t\t\tsetAssignCategoryList([...assignCategoryList])\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetAssignCategoryList([...assignCategoryList, categoryId])\n\t\t\t}\n\t\t}\n\t}\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Flex\n\t\t\t\theight=\"100vh\"\n\t\t\t\t// justifyContent=\"space-between\"\n\t\t\t\tflexDirection=\"column\"\n\t\t\t>\n\t\t\t\t<Head></Head>\n\t\t\t\t<Box width={[1]}>\n\t\t\t\t\t{channelList.length > 0 ? (\n\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\tbg=\"#000000\"\n\t\t\t\t\t\t\twidth={[1]}\n\t\t\t\t\t\t\tpl=\"1.1rem\"\n\t\t\t\t\t\t\tlineHeight=\"1.14rem\"\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\theight: \"1.14rem\",\n\t\t\t\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\t\t\t\tcursor: \"pointer\"\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tcolor=\"#fff\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetShowChannels(true)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{/* {console.log(channelList)} */}\n\t\t\t\t\t\t\t{`${currentChannel.code}(${currentChannel.name})`}\n\t\t\t\t\t\t\t{showChannels ? (\n\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\t\t\tborder: \"1px solid #000\",\n\t\t\t\t\t\t\t\t\t\ttop: \"calc(0.507rem + 20px)\"\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tcolor=\"#000\"\n\t\t\t\t\t\t\t\t\tbg=\"#fff\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{channelList.map(channel => (\n\t\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\t\twidth=\"160px\"\n\t\t\t\t\t\t\t\t\t\t\tlineHeight=\"32px\"\n\t\t\t\t\t\t\t\t\t\t\tpl=\"12px\"\n\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\tbackground: \"#cccccc\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#fff\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\t\t\t\t\t\te.nativeEvent.preventDefault()\n\t\t\t\t\t\t\t\t\t\t\t\te.nativeEvent.stopPropagation()\n\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentChannel(channel)\n\t\t\t\t\t\t\t\t\t\t\t\tsetShowChannels(false)\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>{`${channel.code}(${channel.name})`}</Text>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t) : null}\n\n\t\t\t\t\t<AssginItem\n\t\t\t\t\t\tgoodsList={goodsList}\n\t\t\t\t\t\tassignCategoryList={assignCategoryList || []}\n\t\t\t\t\t></AssginItem>\n\t\t\t\t</Box>\n\t\t\t</Flex>\n\t\t</React.Fragment>\n\t)\n}\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AACA;AAFA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AACA;AAJA;AACA;AACA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAoBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAGA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAyBA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;A","sourceRoot":""}