{"version":3,"file":"static/webpack/static/development/pages/mine.js.a8dbe15b5006fa92da07.hot-update.js","sources":["webpack:///./components/tables/send-table.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Flex, Text, Box, Button, Row, Column } from \"rebass\"\nimport Table, { TableLine } from \"./base-table\"\n\nimport request from \"../../utils/request\"\nimport Modal from \"../modal\"\nimport OrderDetail from \"./order-detail\"\nimport StyleItem from \"../commons/min-style-item\"\n\nexport default props => {\n\tconst [orderDetailMode, setOrderDetailMode] = useState({\n\t\tvisible: false,\n\t\tdetail: {}\n\t})\n\tconst [orderList, setOrderList] = useState([])\n\tconst [orderDetailList, setOrderDetailList] = useState([])\n\tconst [selectList, setSelectList] = useState([])\n\tconst getOrderList = async () => {\n\t\tconst res = await request(\"/order/getMyList\", { isSend: 0 })\n\t\t// console.log(\"----res----\", res)\n\t\tif (!res) return\n\t\tsetOrderDetailList(res)\n\t\tconst data = res.map(order => {\n\t\t\tlet orderData = order.orderData\n\t\t\tlet styleListArr = []\n\t\t\tlet styleList = []\n\t\t\tlet quantity = 0\n\t\t\tlet price = 0\n\t\t\torderData.map(item => {\n\t\t\t\tstyleList = item.favorite.styleAndColor.map(x => {\n\t\t\t\t\t// styleList.push({ style: x.style, colors: x.colorIds })\n\t\t\t\t\treturn { style: x.styleId, colors: x.colorIds }\n\t\t\t\t})\n\t\t\t\tquantity += item.total\n\t\t\t\tprice += item.totalPrice\n\t\t\t\tstyleListArr.push(styleList)\n\t\t\t})\n\n\t\t\treturn {\n\t\t\t\tquantity,\n\t\t\t\tprice,\n\t\t\t\tstyleListArr,\n\t\t\t\tdate: order.updateTime,\n\t\t\t\tid: order._id\n\t\t\t}\n\t\t})\n\t\tsetOrderList(data)\n\t}\n\tuseEffect(() => {\n\t\tgetOrderList()\n\t}, [])\n\tconst handleSelect = (index, item) => {\n\t\tconst pos = selectList.findIndex(x => x.index === index)\n\t\tif (pos < 0) {\n\t\t\tselectList.push({ index, ...item })\n\t\t} else {\n\t\t\tselectList.splice(pos, 1)\n\t\t}\n\t\tsetSelectList([].concat(selectList))\n\t}\n\tconst handleSendOrder = async () => {\n\t\tconsole.log(selectList)\n\n\t\tconst res = await request(\n\t\t\t\"/order/send\",\n\t\t\t{ list: selectList.map(s => s.id) },\n\t\t\t\"post\"\n\t\t)\n\t\tif (res) {\n\t\t\tprops.nextStep()\n\t\t}\n\t}\n\tconst handleDel = async index => {\n\t\tconsole.log(orderList[index])\n\t\tconst res = await request(\n\t\t\t\"/order/delete\",\n\t\t\t{ _id: orderList[index].id },\n\t\t\t\"post\"\n\t\t)\n\t}\n\tconst handleCheckDetail = index => {\n\t\tsetOrderDetailMode({ visible: true, detail: orderDetailList[index] })\n\t}\n\treturn (\n\t\t<Flex\n\t\t\tflexDirection=\"column\"\n\t\t\tjustifyContent=\"space-between\"\n\t\t\talignItems=\"stretch\"\n\t\t\theight=\"100%\"\n\t\t\tsx={{\n\t\t\t\tcursor: \"pointer\",\n\t\t\t\tbackground: \"#FFF0E5\"\n\t\t\t}}\n\t\t>\n\t\t\t{orderDetailMode.visible ? (\n\t\t\t\t<Modal\n\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\tsetOrderDetailMode({ visible: false, detail: {} })\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<OrderDetail OrderDetail={orderDetailMode.detail} />\n\t\t\t\t</Modal>\n\t\t\t) : null}\n\t\t\t<Table\n\t\t\t\ttitles={[\n\t\t\t\t\t{ name: \"00\", width: \"2/22\", isHide: true },\n\t\t\t\t\t{ name: \"DATE\", width: \"2/22\" },\n\t\t\t\t\t{ name: \"STYLE PREVIEW\", width: \"2/22\" },\n\t\t\t\t\t{ name: \"QUANTITY\", width: \"4/22\" },\n\t\t\t\t\t{ name: \"PRICE\", width: \"1/22\" },\n\t\t\t\t\t{ name: \"ACTION\", width: \"5/22\" }\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t{orderList.map((order, index) => (\n\t\t\t\t\t<TableLine\n\t\t\t\t\t\tkey={`order-${index}`}\n\t\t\t\t\t\tisSelect={selectList.findIndex(x => index === x.index) >= 0}\n\t\t\t\t\t\thaveSelect\n\t\t\t\t\t\tonSelect={() => {\n\t\t\t\t\t\t\thandleSelect(index, order)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\thaveDel\n\t\t\t\t\t\tonDel={() => {\n\t\t\t\t\t\t\thandleDel(index, {})\n\t\t\t\t\t\t}}\n\t\t\t\t\t\thaveEdit\n\t\t\t\t\t\tonEdit={() => {\n\t\t\t\t\t\t\t// setEditIndex(index)\n\t\t\t\t\t\t\t// setShowEditBox(true)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tBigger\n\t\t\t\t\t\tonBiger={() => {\n\t\t\t\t\t\t\thandleCheckDetail(index)\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text style={{ position: \"absolute\" }}>{index + 1}</Text>\n\t\t\t\t\t\t<Text>{order.date}</Text>\n\t\t\t\t\t\t<Flex justifyContent=\"flex-start\">\n\t\t\t\t\t\t\t{order.styleListArr.map(item => (\n\t\t\t\t\t\t\t\t<StyleItem\n\t\t\t\t\t\t\t\t\tmargin={\"1px\"}\n\t\t\t\t\t\t\t\t\tkey={`${index}-style-img`}\n\t\t\t\t\t\t\t\t\tstyleList={item}\n\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\ttool={false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t<Text textAlign=\"center\">{order.quantity}</Text>\n\t\t\t\t\t\t<Text textAlign=\"center\">{order.price}</Text>\n\t\t\t\t\t</TableLine>\n\t\t\t\t))}\n\t\t\t</Table>\n\t\t\t<Flex>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\theight=\"1.5rem\"\n\t\t\t\t\twidth=\"19.2rem\"\n\t\t\t\t\tbg=\"#000\"\n\t\t\t\t\tcolor=\"#fff\"\n\t\t\t\t\tpadding=\"0\"\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tborderRadius: 0,\n\t\t\t\t\t\tfontSize: \"0.27rem\",\n\t\t\t\t\t\tcursor: \"pointer\"\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={handleSendOrder}\n\t\t\t\t>\n\t\t\t\t\tSEND ORDERS\n\t\t\t\t</Button>\n\t\t\t</Flex>\n\t\t</Flex>\n\t)\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AAFA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AA9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA8BA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AANA;AAGA;AACA;AAIA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AALA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApCA;AAwCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;;;;A","sourceRoot":""}