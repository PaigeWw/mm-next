{"version":3,"file":"static/webpack/static/development/pages/select.js.a0386482cae45edf62c3.hot-update.js","sources":["webpack:///./components/select-assign-tool/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Flex, Text, Box, Button, Image } from \"rebass\"\nimport AisleButton, { Title } from \"./aisle-button\"\nimport request from \"../../utils/request.js\"\nimport { baseUrl } from \"../../utils/helper\"\nconst PagerButton = props => (\n\t<Button\n\t\twidth=\"0.26rem\"\n\t\theight=\"0.26rem\"\n\t\tbg=\"#000\"\n\t\tp=\"0\"\n\t\tsx={{ borderRadius: 0 }}\n\t>\n\t\t{props.children}\n\t</Button>\n)\nconst Pager = props => (\n\t<Flex>\n\t\t<PagerButton>{\"<\"}</PagerButton>\n\t\t<Text bg=\"#EEEEEE\" lineHeight=\"0.26rem\" width=\"0.53rem\" textAlign=\"center\">\n\t\t\t{props.current}\n\t\t</Text>\n\t\t<PagerButton>{\">\"}</PagerButton>\n\t</Flex>\n)\n\nexport default props => {\n\tconst { sid, top, col, styleItem } = props.currentSeleted\n\tconst [showScroll, setShowScroll] = useState(false)\n\tconst [channelList, setChannelList] = useState(false)\n\tconst [colorList, setColorList] = useState([])\n\tconst [paintList, setPaintList] = useState([])\n\tuseEffect(() => {\n\t\tconst getChannels = async () => {\n\t\t\tconst req = await request(\"channel/getList\", {}, \"get\")\n\t\t\tsetChannelList(req)\n\t\t\tconsole.log(req)\n\t\t}\n\t\tgetChannels()\n\t\t// const getColors = async () => {\n\t\t// \tconst req = await request(\"color/getList\", { type: \"0\" }, \"get\")\n\t\t// \tif (!req) return\n\t\t// \tsetColorList(req)\n\t\t// \tconsole.log(req)\n\t\t// }\n\t\t// getColors()\n\n\t\t// const getPaints = async () => {\n\t\t// \tconst req = await request(\"color/getList\", { type: \"1\" }, \"get\")\n\t\t// \tif (!req) return\n\t\t// \tsetPaintList(req)\n\t\t// }\n\t\t// getPaints()\n\t}, [])\n\tuseEffect(() => {\n\t\tif (props.currentSeleted) {\n\t\t\tconst getStyle = async () => {\n\t\t\t\tconst req = await request(\"style/detail\", { _id: sid }, \"get\")\n\t\t\t\tif (!req) return\n\t\t\t\tconsole.log(\"getStyle\", req)\n\t\t\t\tsetPaintList(req.flowerColors)\n\t\t\t\tsetColorList(req.plainColors)\n\t\t\t}\n\t\t\tgetStyle()\n\t\t}\n\t}, [props.currentSeleted])\n\tlet left = (col + 2) * 3.2\n\tif (left > 19.2 - 6.4) {\n\t\tleft = (col - 1) * 3.2\n\t}\n\n\tconst handleSelect = item => {\n\t\tconst index = colorList.findIndex(x => x._id === item._id)\n\t\tcolorList[index].selected = true\n\t\t// colorList.splice(index, 1, item.selected=true)\n\t\tsetColorList([].concat(colorList))\n\t}\n\treturn (\n\t\t<Flex\n\t\t\twidth=\"6.4rem\"\n\t\t\tbg=\"#fff\"\n\t\t\tflexDirection=\"column\"\n\t\t\tfontSize=\"0.18rem\"\n\t\t\tcolor=\"#000\"\n\t\t\tp=\"0.5rem 0.7rem 0 0.7rem\"\n\t\t\tsx={{\n\t\t\t\tposition: \"absolute\",\n\t\t\t\ttop: `${top}px`,\n\t\t\t\tleft: `${left}rem`\n\t\t\t}}\n\t\t>\n\t\t\t<Title\n\t\t\t\tstyleNo={styleItem.styleNo}\n\t\t\t\tchannelList={channelList}\n\t\t\t\tonClose={props.onClose}\n\t\t\t/>\n\t\t\t<Flex flexDirection=\"column\">\n\t\t\t\t<Box width=\"100%\" mb=\"0.4rem\">\n\t\t\t\t\t<Text mb=\"0.26rem\">SIZE「CUP」</Text>\n\t\t\t\t\t<Box width=\"100%\" lineHeight=\"0.36rem\">\n\t\t\t\t\t\t<Flex width=\"100%\" justifyContent=\"space-between\">\n\t\t\t\t\t\t\t<Text>85B</Text>\n\t\t\t\t\t\t\t<Text>90B</Text>\n\t\t\t\t\t\t\t<Text>85B</Text>\n\t\t\t\t\t\t\t<Text>85B</Text>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t<Flex width=\"100%\" justifyContent=\"space-between\">\n\t\t\t\t\t\t\t<Text>85C</Text>\n\t\t\t\t\t\t\t<Text>90B</Text>\n\t\t\t\t\t\t\t<Text>85B</Text>\n\t\t\t\t\t\t\t<Text>85B</Text>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t\t<Box width=\"100%\" mb=\"0.4rem\">\n\t\t\t\t\t<Flex justifyContent=\"space-between\" alignItems=\"center\">\n\t\t\t\t\t\t<Text>COLOUR</Text> <Pager current=\"01\" />\n\t\t\t\t\t</Flex>\n\t\t\t\t\t<Flex>\n\t\t\t\t\t\t{colorList.map(item => (\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\t\t\t\tboxSizing: \"content-box\",\n\t\t\t\t\t\t\t\t\tbackgroundClip: \"content-box\",\n\t\t\t\t\t\t\t\t\tborder: `1px ${item.selected ? \"#000\" : \"#fff\"} solid`\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\thandleSelect(item)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tbg={item.value}\n\t\t\t\t\t\t\t\tmt=\"0.2rem\"\n\t\t\t\t\t\t\t\tmr=\"0.2rem\"\n\t\t\t\t\t\t\t\tp=\"0.08rem\"\n\t\t\t\t\t\t\t\twidth=\"0.3rem\"\n\t\t\t\t\t\t\t\theight=\"0.3rem\"\n\t\t\t\t\t\t\t></Box>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Flex>\n\t\t\t\t</Box>\n\t\t\t\t<Box width=\"100%\" mb=\"0.4rem\">\n\t\t\t\t\t<Flex justifyContent=\"space-between\" alignItems=\"center\">\n\t\t\t\t\t\t<Text>PRINT</Text> <Pager current=\"01\" />\n\t\t\t\t\t</Flex>\n\t\t\t\t\t<Flex>\n\t\t\t\t\t\t{paintList.map(item => (\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\tbackgroundClip: \"content-box\",\n\t\t\t\t\t\t\t\t\tboxSizing: \"content-box\",\n\t\t\t\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\t\t\t\tbackground: `url(${baseUrl + item.value})`,\n\t\t\t\t\t\t\t\t\tbackgroundSize: \"100% 100% \"\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tbg={`url(${baseUrl + item.value})`}\n\t\t\t\t\t\t\t\tmt=\"0.3rem\"\n\t\t\t\t\t\t\t\tmr=\"0.2rem\"\n\t\t\t\t\t\t\t\twidth=\"0.3rem\"\n\t\t\t\t\t\t\t\theight=\"0.3rem\"\n\t\t\t\t\t\t\t></Box>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Flex>\n\t\t\t\t</Box>\n\t\t\t</Flex>\n\t\t\t<Button\n\t\t\t\tvariant=\"primary\"\n\t\t\t\theight=\"0.7rem\"\n\t\t\t\twidth=\"6.4rem\"\n\t\t\t\tbg=\"#1B1B1B\"\n\t\t\t\tcolor=\"#fff\"\n\t\t\t\tpadding=\"0\"\n\t\t\t\tml=\"-0.7rem\"\n\t\t\t\tsx={{\n\t\t\t\t\tborderRadius: 0,\n\t\t\t\t\tfontSize: \"0.14rem\",\n\t\t\t\t\tcursor: \"pointer\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tFINISH\n\t\t\t</Button>\n\t\t</Flex>\n\t)\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAGA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcfA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;;;;A","sourceRoot":""}