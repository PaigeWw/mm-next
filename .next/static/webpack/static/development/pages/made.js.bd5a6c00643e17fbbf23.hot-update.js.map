{"version":3,"file":"static/webpack/static/development/pages/made.js.bd5a6c00643e17fbbf23.hot-update.js","sources":["webpack:///./components/commons/style-img.js"],"sourcesContent":["import React, { useEffect, useMemo } from \"react\"\nimport { ReactSVG } from \"react-svg\"\nimport { Image } from \"rebass\"\nimport { baseUrl } from \"../../utils/helper\"\n\n// import React, { useEffect, useMemo } from 'react';\n// import { ReactSVG } from 'react-svg';\n// // import { Image } from 'rebass';\n\n// import { api } from '@/utils/apiconfig';\n\nexport default props => {\n\tconst {\n\t\twidth,\n\t\tsvgUrl,\n\t\tshadowUrl,\n\t\tkey,\n\t\tcolors,\n\t\tsvgId,\n\t\tstyleId,\n\t\timgValsAttrs,\n\t\tonSetEditSvgGroupIndex\n\t} = props\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tposition: \"relative\",\n\t\t\t\twidth: width\n\t\t\t}}\n\t\t>\n\t\t\t<img\n\t\t\t\tsrc={`${baseUrl}${shadowUrl}`}\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: width,\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tpointerEvents: \"none\"\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<ReactSVG\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: width,\n\t\t\t\t\tminWidth: \"14px\"\n\t\t\t\t}}\n\t\t\t\tafterInjection={(error, svg) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tconsole.error(error)\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif (colors && colors.length > 0) {\n\t\t\t\t\t\tlet j = 0\n\t\t\t\t\t\tfor (let i = 0; i < svg.children.length; i++) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tsvg.children[i].tagName === \"g\" ||\n\t\t\t\t\t\t\t\tsvg.children[i].tagName === \"path\"\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tif (onSetEditSvgGroupIndex) {\n\t\t\t\t\t\t\t\t\tlet jj = j\n\t\t\t\t\t\t\t\t\tsvg.children[i].onclick = e => {\n\t\t\t\t\t\t\t\t\t\t// console.log(e.target)\n\t\t\t\t\t\t\t\t\t\tonSetEditSvgGroupIndex(jj)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// svg.children[i].setAttribute('index', j);\n\t\t\t\t\t\t\t\tif (j < colors.length && colors[j]) {\n\t\t\t\t\t\t\t\t\tsvg.children[i].style.fill = colors[j].type\n\t\t\t\t\t\t\t\t\t\t? `url(\"#${styleId}-${colors[j]._id}-${j}\")`\n\t\t\t\t\t\t\t\t\t\t: colors[j].value\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tj++\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\trenumerateIRIElements={false}\n\t\t\t\tloading={() => {\n\t\t\t\t\tconsole.log(\"loading\")\n\t\t\t\t\treturn \"loading\"\n\t\t\t\t}}\n\t\t\t\tbeforeInjection={svg => {\n\t\t\t\t\tsvg.setAttribute(\"id\", svgId || key)\n\t\t\t\t\tlet svgDefs = document.createElementNS(\n\t\t\t\t\t\t\"http://www.w3.org/2000/svg\",\n\t\t\t\t\t\t\"defs\"\n\t\t\t\t\t)\n\t\t\t\t\tsvg.appendChild(svgDefs)\n\t\t\t\t\tsvg.setAttribute(\"style\", `width: ${width}; height: 100%`)\n\n\t\t\t\t\tfor (let i = 0; i < colors.length; i++) {\n\t\t\t\t\t\tlet color = colors[i]\n\t\t\t\t\t\tif (color && color.type) {\n\t\t\t\t\t\t\tlet imgVals = imgValsAttrs.find(x => x.colorId === color._id)\n\t\t\t\t\t\t\tconsole.log(\"imgVals\", imgVals)\n\t\t\t\t\t\t\tlet svgPattern = document.createElementNS(\n\t\t\t\t\t\t\t\t\"http://www.w3.org/2000/svg\",\n\t\t\t\t\t\t\t\t\"pattern\"\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\tsvgPattern.setAttribute(\"id\", `${styleId}-${color._id}-${i}`)\n\t\t\t\t\t\t\t// editPatterns[color._id] = svgPattern\n\t\t\t\t\t\t\tsvgPattern.setAttribute(\"patternUnits\", \"userSpaceOnUse\")\n\t\t\t\t\t\t\tsvgPattern.setAttribute(\"patternContentUnits\", \"userSpaceOnUse\")\n\t\t\t\t\t\t\tif (svg.width.baseVal.unitType === 2) {\n\t\t\t\t\t\t\t\tsvg.setAttribute(\"width\", `${svg.viewBox.baseVal.width}px`)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet W =\n\t\t\t\t\t\t\t\t((color.size * svg.width.baseVal.value) / 20) * imgVals.scale\n\t\t\t\t\t\t\tlet H = (W * color.height) / color.width\n\n\t\t\t\t\t\t\tsvgPattern.setAttribute(\"width\", `${W}px`)\n\t\t\t\t\t\t\tsvgPattern.setAttribute(\"height\", `${H}px`)\n\t\t\t\t\t\t\tsvgPattern.x.baseVal.value = imgVals.x\n\t\t\t\t\t\t\tsvgPattern.y.baseVal.value = imgVals.y\n\n\t\t\t\t\t\t\tlet svgPatternImage = document.createElementNS(\n\t\t\t\t\t\t\t\t\"http://www.w3.org/2000/svg\",\n\t\t\t\t\t\t\t\t\"image\"\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\tsvgPatternImage.setAttribute(\"width\", `${W}px`)\n\t\t\t\t\t\t\tsvgPatternImage.setAttribute(\"height\", `${H}px`)\n\t\t\t\t\t\t\tsvgPatternImage.href.baseVal = `${baseUrl}${color.value}`\n\n\t\t\t\t\t\t\t// editSvgs.svgDefs.appendChild(svgPattern)\n\t\t\t\t\t\t\tsvgPattern.appendChild(svgPatternImage)\n\t\t\t\t\t\t\tsvgDefs.appendChild(svgPattern)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tevalScripts=\"always\"\n\t\t\t\tsrc={`${baseUrl}${svgUrl}`}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\n// export default props => {\n// \tconst { width, svgUrl, shadowUrl, key, colors, svgId, styleId } = props\n// \tconsole.log(colors)\n// \tlet svgElement = false\n// \tuseEffect(() => {\n// \t\t// if()\n// \t\t// ;`url(${colors[0]._id})`\n// \t}, [])\n\n// \tuseEffect(() => {\n// \t\t// if()\n// \t\tif (!svgElement || !colors) return\n// \t\tlet j = 0\n// \t\tfor (let i = 0; i < svgElement.children.length; i++) {\n// \t\t\tif (\n// \t\t\t\tsvgElement.children[i].tagName === \"g\" ||\n// \t\t\t\t(svgElement.children[i].tagName === \"path\" && j < colors.length)\n// \t\t\t) {\n// \t\t\t\tsvgElement.children[i].style.fill = colors[i].type\n// \t\t\t\t\t? `url(\"#${styleId}-${colors[j]._id}-${i}\")`\n// \t\t\t\t\t: colors[j].value\n// \t\t\t\tj++\n// \t\t\t}\n// \t\t}\n// \t}, [colors])\n\n// \treturn (\n// \t\t<div\n// \t\t\tstyle={{\n// \t\t\t\tposition: \"relative\",\n// \t\t\t\twidth: width\n// \t\t\t}}\n// \t\t>\n// \t\t\t<Image\n// \t\t\t\tsrc={baseUrl + shadowUrl}\n// \t\t\t\tsx={{\n// \t\t\t\t\twidth: width,\n// \t\t\t\t\tposition: \"absolute\",\n// \t\t\t\t\tleft: 0\n// \t\t\t\t}}\n// \t\t\t/>\n// \t\t\t<ReactSVG\n// \t\t\t\tstyle={{\n// \t\t\t\t\twidth: width,\n// \t\t\t\t\tminWidth: \"14px\"\n// \t\t\t\t}}\n// \t\t\t\tafterInjection={(error, svg) => {\n// \t\t\t\t\tif (error) {\n// \t\t\t\t\t\tconsole.error(error)\n// \t\t\t\t\t\treturn\n// \t\t\t\t\t}\n// \t\t\t\t\tif (colors && colors.length > 0 && colors[0]) {\n// \t\t\t\t\t\tlet j = 0\n// \t\t\t\t\t\tfor (let i = 0; i < svg.children.length; i++) {\n// \t\t\t\t\t\t\tif (\n// \t\t\t\t\t\t\t\tsvg.children[i].tagName === \"g\" ||\n// \t\t\t\t\t\t\t\tsvg.children[i].tagName === \"path\"\n// \t\t\t\t\t\t\t) {\n// \t\t\t\t\t\t\t\tconsole.log(colors)\n// \t\t\t\t\t\t\t\tsvg.children[i].style.fill = colors[j].type\n// \t\t\t\t\t\t\t\t\t? `url(\"#${styleId}-${colors[j]._id}-${j}\")`\n// \t\t\t\t\t\t\t\t\t: colors[j].value\n// \t\t\t\t\t\t\t\tj++\n// \t\t\t\t\t\t\t}\n// \t\t\t\t\t\t}\n// \t\t\t\t\t}\n// \t\t\t\t}}\n// \t\t\t\trenumerateIRIElements={false}\n// \t\t\t\tloading={() => {\n// \t\t\t\t\tconsole.log(\"loading\")\n// \t\t\t\t\treturn \"loading\"\n// \t\t\t\t}}\n// \t\t\t\tbeforeInjection={svg => {\n// \t\t\t\t\tsvg.setAttribute(\"id\", svgId || key)\n// \t\t\t\t\tlet svgDefs = document.createElementNS(\n// \t\t\t\t\t\t\"http://www.w3.org/2000/svg\",\n// \t\t\t\t\t\t\"defs\"\n// \t\t\t\t\t)\n// \t\t\t\t\tsvg.appendChild(svgDefs)\n// \t\t\t\t\tsvg.setAttribute(\"style\", `width: ${width}; height: 100%`)\n\n// \t\t\t\t\tfor (let i = 0; i < colors.length; i++) {\n// \t\t\t\t\t\tlet color = colors[i]\n// \t\t\t\t\t\tif (color.type) {\n// \t\t\t\t\t\t\tlet svgPattern = document.createElementNS(\n// \t\t\t\t\t\t\t\t\"http://www.w3.org/2000/svg\",\n// \t\t\t\t\t\t\t\t\"pattern\"\n// \t\t\t\t\t\t\t)\n// \t\t\t\t\t\t\tsvgPattern.setAttribute(\"id\", `${styleId}-${color._id}-${i}`)\n// \t\t\t\t\t\t\t// editPatterns[color._id] = svgPattern\n// \t\t\t\t\t\t\tsvgPattern.setAttribute(\"patternUnits\", \"userSpaceOnUse\")\n// \t\t\t\t\t\t\tsvgPattern.setAttribute(\"patternContentUnits\", \"userSpaceOnUse\")\n// \t\t\t\t\t\t\tconst imgVals = { scale: 1 }\n\n// \t\t\t\t\t\t\tlet W =\n// \t\t\t\t\t\t\t\t((color.size * svg.width.baseVal.value) / 20) * imgVals.scale\n// \t\t\t\t\t\t\tlet H = (W * color.height) / color.width\n\n// \t\t\t\t\t\t\tsvgPattern.setAttribute(\"width\", `${W}px`)\n// \t\t\t\t\t\t\tsvgPattern.setAttribute(\"height\", `${H}px`)\n\n// \t\t\t\t\t\t\tlet svgPatternImage = document.createElementNS(\n// \t\t\t\t\t\t\t\t\"http://www.w3.org/2000/svg\",\n// \t\t\t\t\t\t\t\t\"image\"\n// \t\t\t\t\t\t\t)\n\n// \t\t\t\t\t\t\tsvgPatternImage.setAttribute(\"width\", `${W}px`)\n// \t\t\t\t\t\t\tsvgPatternImage.setAttribute(\"height\", `${H}px`)\n// \t\t\t\t\t\t\tsvgPatternImage.href.baseVal = `${baseUrl}${color.value}`\n\n// \t\t\t\t\t\t\t// editSvgs.svgDefs.appendChild(svgPattern)\n// \t\t\t\t\t\t\tsvgPattern.appendChild(svgPatternImage)\n// \t\t\t\t\t\t\tsvgDefs.appendChild(svgPattern)\n// \t\t\t\t\t\t}\n// \t\t\t\t\t}\n// \t\t\t\t}}\n// \t\t\t\tevalScripts=\"always\"\n// \t\t\t\tsrc={baseUrl + svgUrl}\n// \t\t\t/>\n// \t\t</div>\n// \t)\n// }\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAauCA;AACA;AACA;AACA;AA3FA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+FA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}