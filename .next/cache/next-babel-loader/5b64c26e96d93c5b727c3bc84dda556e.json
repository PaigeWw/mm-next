{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { Flex, Text, Box, Button, Image } from \"rebass\";\nimport Router from \"next/router\";\nimport Head from \"../components/nav\";\nimport SelectBar from \"../components/select-bar\";\nimport SelectLine from \"../components/select-line\";\nimport SelectAssignTool from \"../components/select-assign-tool\";\nimport useUserInfo from \"../hooks/getUserInfo\";\nimport request from \"../utils/request.js\";\nimport { getPageQuery } from \"../utils/helper\";\nexport default (function () {\n  var info = useUserInfo(); // console.log(info)\n\n  var _useState = useState([{\n    styles: []\n  }]),\n      categoryList = _useState[0],\n      setGategoryList = _useState[1];\n\n  var _useState2 = useState(false),\n      currentSeleted = _useState2[0],\n      setCurrentSeleted = _useState2[1];\n\n  var _useState3 = useState([]),\n      selectStyles = _useState3[0],\n      setSelectStyles = _useState3[1];\n\n  var _useState4 = useState([]),\n      selectStylesType = _useState4[0],\n      setSelectStylesType = _useState4[1];\n\n  var _useState5 = useState(false),\n      showToast = _useState5[0],\n      setShowToast = _useState5[1];\n\n  var _useState6 = useState({}),\n      toast = _useState6[0],\n      setToast = _useState6[1];\n\n  useEffect(function () {\n    var getGategoryList =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var query, req;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                query = getPageQuery();\n                _context.next = 3;\n                return request(\"goods/detail\", {\n                  _id: query.id\n                }, \"get\");\n\n              case 3:\n                req = _context.sent;\n\n                if (req) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 6:\n                setGategoryList(req.category);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getGategoryList() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getGategoryList();\n  }, []); // const info = useUserInfo()\n\n  var handleSelectStyle = function handleSelectStyle(sid, type, top, col, styleItem) {\n    var pos = selectStyles.indexOf(sid);\n\n    if (pos > -1) {\n      //已选中 则去除 选中\n      console.log(selectStyles);\n      console.log(selectStylesType);\n\n      if (selectStyles.length > 1) {\n        var savePos = (pos + 1) % 2;\n        setSelectStyles(selectStyles.slice(savePos, savePos + 1));\n        setSelectStylesType(selectStylesType.slice(savePos, savePos + 1));\n      } else {\n        setSelectStyles([]);\n        setSelectStylesType([]);\n      }\n\n      setCurrentSeleted(false);\n    } else {\n      //未选中 则 设置为选中\n      console.log(selectStyles, type);\n      setCurrentSeleted({\n        sid: sid,\n        type: type,\n        top: top,\n        col: col,\n        styleItem: styleItem\n      });\n      var topsPos = selectStylesType.indexOf(\"TOPS\");\n      var bottomsPos = selectStylesType.indexOf(\"BOTTOMS\");\n\n      if (topsPos > -1 && type == \"BOTTOMS\") {\n        var saveTemps = selectStyles.slice(topsPos, topsPos + 1);\n        saveTemps.push(sid);\n        setSelectStyles(saveTemps);\n        setSelectStylesType([\"TOPS\", type]);\n        return;\n      }\n\n      if (bottomsPos > -1 && type == \"TOPS\") {\n        var _saveTemps = selectStyles.slice(bottomsPos, bottomsPos + 1);\n\n        _saveTemps.push(sid);\n\n        setSelectStyles(_saveTemps);\n        setSelectStylesType([\"BOTTOMS\", type]);\n        return;\n      }\n\n      setSelectStyles([sid]);\n      setSelectStylesType([type]);\n    }\n  };\n\n  return __jsx(Flex, {\n    flexDirection: \"column\"\n  }, __jsx(Head, {\n    showToast: showToast,\n    toast: toast\n  }), __jsx(SelectBar, null), __jsx(Box, {\n    mt: \"40px\",\n    sx: {\n      position: \"relative\"\n    }\n  }, categoryList.map(function (item, index) {\n    return __jsx(SelectLine, {\n      key: index + item._id,\n      row: index,\n      kind: item.name,\n      styles: item.styles,\n      selectStyles: selectStyles,\n      onSelect: handleSelectStyle\n    });\n  }), currentSeleted && info.role === 1 ? __jsx(SelectAssignTool, {\n    currentSeleted: currentSeleted,\n    onClose: function onClose() {\n      setCurrentSeleted(false);\n    }\n  }) : null), __jsx(Button, {\n    variant: \"primary\",\n    height: \"1.13rem\",\n    width: \"19.2rem\",\n    bg: \"#FF8E6C\",\n    color: \"#000\",\n    padding: \"0\",\n    sx: {\n      borderRadius: 0,\n      fontSize: \"0.27rem\",\n      cursor: \"pointer\"\n    },\n    onClick: function onClick() {\n      // console.log('selectStylesselectStylesselectStyles')\n      if (selectStyles.length > 0) {\n        Router.push(\"/made?id=\".concat(selectStyles[0]).concat(selectStyles.length > 1 ? \"&id1=\" + selectStyles[1] : \"\"));\n      } else {\n        Router.push(\"/made\"); // setToast({ type: \"error\", info: \"Please Select Style.\" })\n      }\n    }\n  }, \"NEXT>\"));\n});","map":null,"metadata":{},"sourceType":"module"}