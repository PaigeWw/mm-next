{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Flex, Text, Box, Button, Image } from \"rebass\";\nimport { Input } from \"@rebass/forms\";\nimport Head from \"../components/head\";\nimport request from \"../utils/request.js\";\nimport useUserInfo from \"../hooks/getUserInfo\";\nimport Router from \"next/router\";\nimport Svg from \"../components/svg\";\nexport default (function () {\n  var _useState = useState(0),\n      modal = _useState[0],\n      setMadal = _useState[1]; // 0, 1, 2, 3\n\n\n  var _useState2 = useState(false),\n      svgColor = _useState2[0],\n      setSvgColor = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      account = _useState3[0],\n      setAccount = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var showInfoList = [{\n    signal: \"AT MRMISS WE LOVE . . .\",\n    leftColor: \"#E74C39\",\n    rightColor: \"#231815\",\n    imgUrl: \"./1/t-1.png\"\n  }, {\n    signal: \"EVERY DESIGN\",\n    leftColor: \"#FF8E6C\",\n    rightColor: \"#B6141E\",\n    imgUrl: \"./1/t2.png\"\n  }, {\n    signal: \"EVERY PROJECT\",\n    leftColor: \"#434343\",\n    rightColor: \"#784E38\",\n    imgUrl: \"./1/t3.png\"\n  }, {\n    signal: \"EVERY PRO\",\n    leftColor: \"#000000\",\n    rightColor: \"#374E4B\",\n    imgUrl: \"./1/t4.png\"\n  }];\n\n  var handleLogin =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var req;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return request(\"user/login\", {\n                account: account,\n                password: password\n              }, \"post\");\n\n            case 2:\n              req = _context.sent;\n              console.log(req);\n\n              if (req) {\n                Router.push(\"/main\");\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var userInfo = useUserInfo();\n  console.log(userInfo, \"userInfo\");\n  return __jsx(React.Fragment, null, __jsx(Head, null), __jsx(Box, {\n    height: \"100vh\"\n  }, __jsx(Flex, {\n    flexWrap: \"wrap\",\n    height: [\"100%\", \"62.5vh\"]\n  }, __jsx(Flex, {\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    width: [1, 722 / 1920],\n    height: [\"100%\", \"62.5vh\"],\n    bg: \"white\",\n    onMouseEnter: function onMouseEnter() {\n      setSvgColor(\"#FFF\");\n    }\n  }, __jsx(Box, {\n    width: \"1.8rem\",\n    height: \"0.53rem\",\n    sx: {\n      margin: \"10% 0 0 10%\",\n      backgroundImage: 'url(\"/1/LOGO.png\")',\n      backgroundRepeat: \"no-repeat\",\n      backgroundSize: \"100% 100%\"\n    }\n  }), __jsx(Box, {\n    padding: \"0 0 10% 10%\"\n  }, __jsx(Flex, {\n    alignItems: \"center\",\n    mb: \"2%\"\n  }, __jsx(Image, {\n    src: \"./1/user-icon.png\",\n    mr: \"10px\",\n    sx: {\n      width: \"0.18rem\",\n      minWidth: \"14px\",\n      height: \"0.18rem\",\n      minHeight: \"14px\"\n    }\n  }), __jsx(Text, {\n    fontSize: \"0.14rem\"\n  }, \"ACCOUNT NUMBER\")), __jsx(Input, {\n    width: \"3rem\",\n    height: \"0.38rem\",\n    id: \"username\",\n    value: account,\n    onChange: function onChange(e) {\n      return setAccount(e.target.value);\n    },\n    name: \"username\",\n    type: \"text\"\n  }), __jsx(Flex, {\n    alignItems: \"center\",\n    mt: \"4%\",\n    mb: \"2%\"\n  }, __jsx(Image, {\n    src: \"./1/password-icon.png\",\n    mr: \"10px\",\n    sx: {\n      width: \"0.18rem\",\n      minWidth: \"14px\",\n      height: \"0.18rem\",\n      minHeight: \"14px\"\n    }\n  }), __jsx(Text, {\n    fontSize: \"0.14rem\"\n  }, \"PASSWORD\")), __jsx(Input, {\n    width: \"3rem\",\n    height: \"0.38rem\",\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    }\n  }), __jsx(Button, {\n    variant: \"primary\",\n    width: \"1.34rem\",\n    height: \"0.38rem\",\n    bg: \"#000000\",\n    color: \"#ffffff\",\n    mt: \"5.8%\",\n    onClick: function onClick() {\n      return handleLogin();\n    },\n    padding: \"0\",\n    sx: {\n      borderRadius: 0,\n      fontSize: \"0.14rem\"\n    }\n  }, \"LOADING\"))), __jsx(Box, {\n    width: [1, 718 / 1920],\n    bg: \"gray\"\n  }, __jsx(Image, {\n    minHeight: \"100%\",\n    src: showInfoList[modal].imgUrl,\n    mr: \"10px\"\n  })), __jsx(Box, {\n    onMouseEnter: function onMouseEnter() {\n      setSvgColor(showInfoList[modal].rightColor);\n    },\n    width: [1, 480 / 1920],\n    bg: showInfoList[modal].rightColor\n  })), __jsx(Flex, {\n    flexWrap: \"wrap\",\n    height: [0, \"37.5vh\"]\n  }, __jsx(Box, {\n    width: [1, 722 / 1920],\n    bg: showInfoList[modal].leftColor,\n    onMouseEnter: function onMouseEnter() {\n      setSvgColor(showInfoList[modal].leftColor);\n    }\n  }), __jsx(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: [1, 718 / 1920],\n    bg: \"white\",\n    fontSize: \"0.38rem\"\n  }, __jsx(Flex, {\n    flexDirection: \"column\"\n  }, showInfoList.map(function (info, index) {\n    return __jsx(Text, {\n      sx: {\n        cursor: \"pointer\",\n        textDecoration: index === modal ? \"underline\" : \"none\"\n      },\n      onMouseEnter: function onMouseEnter() {\n        setSvgColor(false);\n        setMadal(index);\n      }\n    }, info.signal);\n  }))), __jsx(Flex, {\n    width: [1, 480 / 1920],\n    bg: \"#DCDCDC\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, __jsx(Svg, {\n    color: svgColor ? svgColor : showInfoList[modal].rightColor\n  })))));\n});","map":null,"metadata":{},"sourceType":"module"}