{"ast":null,"code":"var _jsxFileName = \"/Users/paige/Desktop/workspace/mm-next/components/commons/style-img.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { ReactSVG } from \"react-svg\";\nimport { Image } from \"rebass\";\nimport { baseUrl } from \"../../utils/helper\";\nexport default (function (props) {\n  var width = props.width,\n      svgUrl = props.svgUrl,\n      shadowUrl = props.shadowUrl,\n      key = props.key,\n      color = props.color;\n  var svgElement = false;\n  useEffect(function () {\n    for (var i = 0; i < svgElement.children.length; i++) {\n      if (svgElement.children[i].tagName === \"g\" || svgElement.children[i].tagName === \"path\") {\n        svgElement.children[i].style.fill = color.type ? \"url(\\\"#\".concat(color._id, \"\\\")\") : color.value;\n      }\n    }\n  }, [color]);\n  return __jsx(\"div\", {\n    style: {\n      position: \"relative\",\n      width: width\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(Image, {\n    src: baseUrl + shadowUrl,\n    sx: {\n      width: width,\n      position: \"absolute\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), __jsx(ReactSVG, {\n    style: {\n      width: width,\n      minWidth: \"14px\"\n    },\n    afterInjection: function afterInjection(error, svg) {\n      if (error) {\n        console.error(error);\n        return;\n      }\n\n      svgElement = svg; // for (let i = 0; i < svg.children.length; i++) {\n      // \tif (\n      // \t\tsvg.children[i].tagName === \"g\" ||\n      // \t\tsvg.children[i].tagName === \"path\"\n      // \t) {\n      // \t\tsvg.children[i].style.fill = type ? `url(\"#${color._id}\")` : item.value\n      // \t}\n      // }\n    },\n    renumerateIRIElements: false,\n    loading: function loading() {\n      console.log(\"loading\");\n      return \"loading\";\n    },\n    beforeInjection: function beforeInjection(svg) {\n      svg.setAttribute(\"id\", key);\n      svg.setAttribute(\"style\", \"width: \".concat(width, \"; height: 100%\"));\n    },\n    evalScripts: \"always\",\n    src: baseUrl + svgUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/paige/Desktop/workspace/mm-next/components/commons/style-img.js"],"names":["React","useEffect","ReactSVG","Image","baseUrl","props","width","svgUrl","shadowUrl","key","color","svgElement","i","children","length","tagName","style","fill","type","_id","value","position","minWidth","error","svg","console","log","setAttribute"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,gBAAe,UAAAC,KAAK,EAAI;AAAA,MACfC,KADe,GAC0BD,KAD1B,CACfC,KADe;AAAA,MACRC,MADQ,GAC0BF,KAD1B,CACRE,MADQ;AAAA,MACAC,SADA,GAC0BH,KAD1B,CACAG,SADA;AAAA,MACWC,GADX,GAC0BJ,KAD1B,CACWI,GADX;AAAA,MACgBC,KADhB,GAC0BL,KAD1B,CACgBK,KADhB;AAEvB,MAAIC,UAAU,GAAG,KAAjB;AACAV,EAAAA,SAAS,CAAC,YAAM;AACf,SAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAAU,CAACE,QAAX,CAAoBC,MAAxC,EAAgDF,CAAC,EAAjD,EAAqD;AACpD,UACCD,UAAU,CAACE,QAAX,CAAoBD,CAApB,EAAuBG,OAAvB,KAAmC,GAAnC,IACAJ,UAAU,CAACE,QAAX,CAAoBD,CAApB,EAAuBG,OAAvB,KAAmC,MAFpC,EAGE;AACDJ,QAAAA,UAAU,CAACE,QAAX,CAAoBD,CAApB,EAAuBI,KAAvB,CAA6BC,IAA7B,GAAoCP,KAAK,CAACQ,IAAN,oBACxBR,KAAK,CAACS,GADkB,WAEjCT,KAAK,CAACU,KAFT;AAGA;AACD;AACD,GAXQ,EAWN,CAACV,KAAD,CAXM,CAAT;AAYA,SACC;AACC,IAAA,KAAK,EAAE;AACNW,MAAAA,QAAQ,EAAE,UADJ;AAENf,MAAAA,KAAK,EAAEA;AAFD,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMC,MAAC,KAAD;AACC,IAAA,GAAG,EAAEF,OAAO,GAAGI,SADhB;AAEC,IAAA,EAAE,EAAE;AACHF,MAAAA,KAAK,EAAEA,KADJ;AAEHe,MAAAA,QAAQ,EAAE;AAFP,KAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,EAaC,MAAC,QAAD;AACC,IAAA,KAAK,EAAE;AACNf,MAAAA,KAAK,EAAEA,KADD;AAENgB,MAAAA,QAAQ,EAAE;AAFJ,KADR;AAKC,IAAA,cAAc,EAAE,wBAACC,KAAD,EAAQC,GAAR,EAAgB;AAC/B,UAAID,KAAJ,EAAW;AACVE,QAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACA;AACA;;AACDZ,MAAAA,UAAU,GAAGa,GAAb,CAL+B,CAM/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAnBF;AAoBC,IAAA,qBAAqB,EAAE,KApBxB;AAqBC,IAAA,OAAO,EAAE,mBAAM;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,aAAO,SAAP;AACA,KAxBF;AAyBC,IAAA,eAAe,EAAE,yBAAAF,GAAG,EAAI;AACvBA,MAAAA,GAAG,CAACG,YAAJ,CAAiB,IAAjB,EAAuBlB,GAAvB;AACAe,MAAAA,GAAG,CAACG,YAAJ,CAAiB,OAAjB,mBAAoCrB,KAApC;AACA,KA5BF;AA6BC,IAAA,WAAW,EAAC,QA7Bb;AA8BC,IAAA,GAAG,EAAEF,OAAO,GAAGG,MA9BhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbD,CADD;AAgDA,CA/DD","sourcesContent":["import React, { useEffect } from \"react\"\nimport { ReactSVG } from \"react-svg\"\nimport { Image } from \"rebass\"\nimport { baseUrl } from \"../../utils/helper\"\n\nexport default props => {\n\tconst { width, svgUrl, shadowUrl, key, color } = props\n\tlet svgElement = false\n\tuseEffect(() => {\n\t\tfor (let i = 0; i < svgElement.children.length; i++) {\n\t\t\tif (\n\t\t\t\tsvgElement.children[i].tagName === \"g\" ||\n\t\t\t\tsvgElement.children[i].tagName === \"path\"\n\t\t\t) {\n\t\t\t\tsvgElement.children[i].style.fill = color.type\n\t\t\t\t\t? `url(\"#${color._id}\")`\n\t\t\t\t\t: color.value\n\t\t\t}\n\t\t}\n\t}, [color])\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tposition: \"relative\",\n\t\t\t\twidth: width\n\t\t\t}}\n\t\t>\n\t\t\t<Image\n\t\t\t\tsrc={baseUrl + shadowUrl}\n\t\t\t\tsx={{\n\t\t\t\t\twidth: width,\n\t\t\t\t\tposition: \"absolute\"\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<ReactSVG\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: width,\n\t\t\t\t\tminWidth: \"14px\"\n\t\t\t\t}}\n\t\t\t\tafterInjection={(error, svg) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tconsole.error(error)\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tsvgElement = svg\n\t\t\t\t\t// for (let i = 0; i < svg.children.length; i++) {\n\t\t\t\t\t// \tif (\n\t\t\t\t\t// \t\tsvg.children[i].tagName === \"g\" ||\n\t\t\t\t\t// \t\tsvg.children[i].tagName === \"path\"\n\t\t\t\t\t// \t) {\n\t\t\t\t\t// \t\tsvg.children[i].style.fill = type ? `url(\"#${color._id}\")` : item.value\n\t\t\t\t\t// \t}\n\t\t\t\t\t// }\n\t\t\t\t}}\n\t\t\t\trenumerateIRIElements={false}\n\t\t\t\tloading={() => {\n\t\t\t\t\tconsole.log(\"loading\")\n\t\t\t\t\treturn \"loading\"\n\t\t\t\t}}\n\t\t\t\tbeforeInjection={svg => {\n\t\t\t\t\tsvg.setAttribute(\"id\", key)\n\t\t\t\t\tsvg.setAttribute(\"style\", `width: ${width}; height: 100%`)\n\t\t\t\t}}\n\t\t\t\tevalScripts=\"always\"\n\t\t\t\tsrc={baseUrl + svgUrl}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}