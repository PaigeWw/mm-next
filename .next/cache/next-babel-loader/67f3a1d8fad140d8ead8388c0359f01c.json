{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nvar _jsxFileName = \"/Users/paige/Desktop/workspace/mm-next/components/made-edit-box.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\"; // import ReactSVG from \"../components/commons/react-svg\"\n\nimport StyleImg from \"../components/commons/style-img\";\nimport { Flex, Text, Box, Image, Button } from \"rebass\";\nimport Modal from \"./modal\";\nimport { ColorList, PaintList } from \"./color-and-paint\";\nimport request from \"../utils/request.js\";\nimport { baseUrl } from \"../utils/helper\";\nexport default (props => {\n  const {\n    styleDetails,\n    curStyle,\n    userInfo\n  } = props;\n  let editSvgs = {};\n  let editPatterns = {};\n  let tempSelectedIds = [curStyle[0].colors]; // let tempSelectedImgs = [curStyle[0].imgUrl]\n\n  if (curStyle.length > 1) {\n    tempSelectedIds.push(curStyle[1].colors); // tempSelectedImgs.push(curStyle[1].imgUrl)\n  } else {\n    tempSelectedIds.push([]); // tempSelectedImgs.push(false)\n  }\n\n  const {\n    0: curSelectedColors,\n    1: setCurSelectedColors\n  } = useState(tempSelectedIds);\n  const {\n    0: curStyleIndex,\n    1: setCurStyleIndex\n  } = useState(0);\n  const {\n    0: curStylesEditGroupIndex,\n    1: setCurStylesEditGroupIndex\n  } = useState([0, 0]);\n  const {\n    0: plainColors,\n    1: setPlainColors\n  } = useState({\n    docs: []\n  });\n  const {\n    0: flowerColors,\n    1: setFlowerColors\n  } = useState({\n    docs: []\n  }); // const [colorList, setColorList] = useState(styleDetails[0].plainColors)\n\n  const getColorList = async page => {\n    const req = await request(\"color/getList\", {\n      type: 0,\n      page,\n      limit: 14\n    }, \"get\");\n    setPlainColors(req); // console.log(\"getChannels\", req)\n  };\n\n  const getPaintList = async page => {\n    const req = await request(\"color/getList\", {\n      type: 1,\n      page,\n      limit: 14\n    }, \"get\");\n    setFlowerColors(req); // console.log(\"getChannels\", req)\n  };\n\n  const getEditSvgById = id => {\n    if (!editSvgs[id]) {\n      let svg = document.getElementById(id);\n      editSvgs[id] = svg;\n    }\n\n    return editSvgs[id];\n  };\n\n  const createSvgPattern = (svg, color) => {\n    if (!editSvgs.svgDefs) {\n      editSvgs.svgDefs = document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\");\n      document.getElementById(\"mm-defs-svg\").appendChild(editSvgs.svgDefs);\n    }\n\n    if (!editPatterns[color._id]) {\n      let svgPattern = document.createElementNS(\"http://www.w3.org/2000/svg\", \"pattern\"); // this.svgPatternImage = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n\n      svgPattern.setAttribute(\"id\", color._id);\n      editPatterns[color._id] = svgPattern;\n      svgPattern.setAttribute(\"patternUnits\", \"userSpaceOnUse\");\n      svgPattern.setAttribute(\"patternContentUnits\", \"userSpaceOnUse\");\n      const imgVals = {\n        scale: 1\n      };\n      let W = color.size * svg.width.baseVal.value / 20 * imgVals.scale;\n      let H = W * color.height / color.width;\n      svgPattern.setAttribute(\"width\", `${W}px`);\n      svgPattern.setAttribute(\"height\", `${H}px`); // this.getSvgPatternAndImage().svgPatternImage.href.baseval = `${api}/${color.value}`\n\n      let svgPatternImage = document.createElementNS(\"http://www.w3.org/2000/svg\", \"image\");\n      svgPatternImage.setAttribute(\"width\", `${W}px`);\n      svgPatternImage.setAttribute(\"height\", `${H}px`);\n      svgPatternImage.href.baseVal = `${baseUrl}${color.value}`;\n      editSvgs.svgDefs.appendChild(svgPattern);\n      svgPattern.appendChild(svgPatternImage);\n    }\n  };\n\n  const selectFlowerColor = (color, svgId) => {\n    let svg = getEditSvgById(svgId);\n\n    if (!editPatterns[color._id]) {\n      createSvgPattern(svg, color);\n    }\n  };\n\n  const handleChangeColorPage = (page, type) => {\n    console.log(page, type);\n\n    if (type === 0) {\n      getColorList(page);\n    } else {\n      getPaintList(page);\n    }\n  };\n\n  const handleSelect = (item, type) => {\n    console.log(curSelectedColors);\n\n    if (curSelectedColors[curStyleIndex][curStylesEditGroupIndex] && item._id === curSelectedColors[curStyleIndex][curStylesEditGroupIndex]._id) {// curSelectedColors[curStyleIndex] = false\n      // setCurSelectedColors([].concat(curSelectedColors))\n      // curStyleImgs.splice(curStyleIndex, 1, false)\n      // setCurStyleImgs([].concat(curStyleImgs))\n      // console.log(curSelectedColors)\n    } else {\n      curSelectedColors[curStyleIndex].splice(curStylesEditGroupIndex, 1, item);\n      console.log(curSelectedColors[curStyleIndex]);\n      setCurSelectedColors([].concat(curSelectedColors)); // setCurSelectedColorId()\n\n      switch (type) {\n        case \"color\":\n          // const cIndex = styleDetails[curStyleIndex]._id\n          // let svg = getEditSvgById(cIndex)\n          // // let section = document.getElementById(\"section\")\n          // // section.innerHTML = \"hhhhhh\"\n          // for (let i = 0; i < svg.children.length; i++) {\n          // \tif (\n          // \t\tsvg.children[i].tagName === \"g\" ||\n          // \t\tsvg.children[i].tagName === \"path\"\n          // \t) {\n          // \t\tsvg.children[i].style.fill = item.value\n          // \t\tconsole.log(svg.children[i])\n          // \t\t// svg.removeChild(svg.children[i])\n          // \t}\n          // }\n          break;\n\n        case \"paint\":\n          const pIndex = styleDetails[curStyleIndex]._id;\n          selectFlowerColor(item, pIndex);\n          break;\n\n        default:\n          break;\n      }\n    }\n  };\n\n  useEffect(() => {\n    const getChannelsAssign = async (styleId, channelId) => {\n      const req = await request(\"channel/getAssign\", {\n        styleId,\n        channelId\n      }, \"get\");\n\n      if (!req) {\n        setPlainColors({\n          docs: [],\n          page: 1\n        });\n        setFlowerColors({\n          docs: [],\n          page: 1\n        });\n      } else {\n        setPlainColors({\n          docs: req.plainColors,\n          page: 1\n        });\n        setFlowerColors({\n          docs: req.flowerColors,\n          page: 1\n        });\n      }\n    };\n\n    if (userInfo.role === 0) {\n      // 客户\n      getChannelsAssign(sid, userInfo.channels[0]);\n    } else {\n      // 产品经理\n      getColorList(1);\n      getPaintList(1);\n    }\n  }, []);\n  useEffect(() => {}, []);\n  return __jsx(Modal, {\n    onClose: props.onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, __jsx(Box, {\n    width: \"14rem\",\n    fontSize: \"0.18rem\",\n    color: \"#000\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, __jsx(Flex, {\n    justifyContent: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, __jsx(Flex, {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\",\n    width: \"6.75rem\",\n    sx: {\n      cursor: \"pointer\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, _Array$isArray(styleDetails) && styleDetails.map((style, index) => __jsx(Flex, {\n    width: \"6.75rem\",\n    padding: \"1rem 0\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    sx: {\n      position: \"relative\",\n      border: curStyleIndex === index ? \"1px solid #000\" : \"1px solid #A0A0A0\"\n    },\n    onClick: () => {\n      setCurStyleIndex(index);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, __jsx(StyleImg, {\n    width: \"3.79rem\",\n    color: curSelectedColors[index],\n    svgId: style._id,\n    shadowUrl: style.shadowUrl,\n    svgUrl: style.svgUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  })))), __jsx(Flex, {\n    flexDirection: \"column\",\n    flexGrow: 1,\n    pl: \"0.6rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, __jsx(Box, {\n    width: [1],\n    mb: \"0.6rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, __jsx(Text, {\n    id: \"section\",\n    fontSize: \"0.18rem\",\n    fontWeight: \"bolder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, \"SECTION NUMBER\"), __jsx(Text, {\n    fontSize: \"0.1rem\",\n    m: \"0.16rem 0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, styleDetails[curStyleIndex].styleNo)), __jsx(ColorList, {\n    colorList: plainColors.docs || [],\n    handleSelect: handleSelect,\n    curChannelId: 0,\n    selectedList: [curSelectedColors[curStyleIndex] || {}],\n    page: plainColors.page,\n    onChangePage: handleChangeColorPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }), __jsx(Box, {\n    height: \"0.3rem\",\n    width: [1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }), __jsx(PaintList, {\n    paintList: flowerColors.docs || [],\n    handleSelect: handleSelect,\n    curChannelId: 0,\n    selectedList: [curSelectedColors[curStyleIndex] || {}],\n    page: flowerColors.page,\n    onChangePage: handleChangeColorPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }), __jsx(Button, {\n    variant: \"primary\",\n    height: \"0.7rem\",\n    width: \"100%\",\n    bg: \"#1B1B1B\",\n    color: \"#fff\",\n    padding: \"0\",\n    mt: \"0.7rem\",\n    sx: {\n      borderRadius: 0,\n      fontSize: \"0.14rem\",\n      cursor: \"pointer\"\n    },\n    onClick: () => {\n      if (!curSelectedColors[0]) return;\n      if (styleDetails.length > 1 && !curSelectedColors[1]) return;\n      props.confirmMade(curSelectedColors);\n      props.onClose();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, \"FINISH\")))));\n});","map":{"version":3,"sources":["/Users/paige/Desktop/workspace/mm-next/components/made-edit-box.js"],"names":["React","useEffect","useState","StyleImg","Flex","Text","Box","Image","Button","Modal","ColorList","PaintList","request","baseUrl","props","styleDetails","curStyle","userInfo","editSvgs","editPatterns","tempSelectedIds","colors","length","push","curSelectedColors","setCurSelectedColors","curStyleIndex","setCurStyleIndex","curStylesEditGroupIndex","setCurStylesEditGroupIndex","plainColors","setPlainColors","docs","flowerColors","setFlowerColors","getColorList","page","req","type","limit","getPaintList","getEditSvgById","id","svg","document","getElementById","createSvgPattern","color","svgDefs","createElementNS","appendChild","_id","svgPattern","setAttribute","imgVals","scale","W","size","width","baseVal","value","H","height","svgPatternImage","href","selectFlowerColor","svgId","handleChangeColorPage","console","log","handleSelect","item","splice","concat","pIndex","getChannelsAssign","styleId","channelId","role","sid","channels","onClose","cursor","map","style","index","position","border","shadowUrl","svgUrl","styleNo","borderRadius","fontSize","confirmMade"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\n// import ReactSVG from \"../components/commons/react-svg\"\nimport StyleImg from \"../components/commons/style-img\"\nimport { Flex, Text, Box, Image, Button } from \"rebass\"\n\nimport Modal from \"./modal\"\nimport { ColorList, PaintList } from \"./color-and-paint\"\n\nimport request from \"../utils/request.js\"\nimport { baseUrl } from \"../utils/helper\"\nexport default props => {\n\tconst { styleDetails, curStyle, userInfo } = props\n\tlet editSvgs = {}\n\tlet editPatterns = {}\n\tlet tempSelectedIds = [curStyle[0].colors]\n\t// let tempSelectedImgs = [curStyle[0].imgUrl]\n\tif (curStyle.length > 1) {\n\t\ttempSelectedIds.push(curStyle[1].colors)\n\t\t// tempSelectedImgs.push(curStyle[1].imgUrl)\n\t} else {\n\t\ttempSelectedIds.push([])\n\t\t// tempSelectedImgs.push(false)\n\t}\n\tconst [curSelectedColors, setCurSelectedColors] = useState(tempSelectedIds)\n\tconst [curStyleIndex, setCurStyleIndex] = useState(0)\n\tconst [curStylesEditGroupIndex, setCurStylesEditGroupIndex] = useState([0, 0])\n\tconst [plainColors, setPlainColors] = useState({ docs: [] })\n\tconst [flowerColors, setFlowerColors] = useState({ docs: [] })\n\t// const [colorList, setColorList] = useState(styleDetails[0].plainColors)\n\tconst getColorList = async page => {\n\t\tconst req = await request(\n\t\t\t\"color/getList\",\n\t\t\t{ type: 0, page, limit: 14 },\n\t\t\t\"get\"\n\t\t)\n\t\tsetPlainColors(req)\n\t\t// console.log(\"getChannels\", req)\n\t}\n\tconst getPaintList = async page => {\n\t\tconst req = await request(\n\t\t\t\"color/getList\",\n\t\t\t{ type: 1, page, limit: 14 },\n\t\t\t\"get\"\n\t\t)\n\t\tsetFlowerColors(req)\n\t\t// console.log(\"getChannels\", req)\n\t}\n\tconst getEditSvgById = id => {\n\t\tif (!editSvgs[id]) {\n\t\t\tlet svg = document.getElementById(id)\n\t\t\teditSvgs[id] = svg\n\t\t}\n\t\treturn editSvgs[id]\n\t}\n\n\tconst createSvgPattern = (svg, color) => {\n\t\tif (!editSvgs.svgDefs) {\n\t\t\teditSvgs.svgDefs = document.createElementNS(\n\t\t\t\t\"http://www.w3.org/2000/svg\",\n\t\t\t\t\"defs\"\n\t\t\t)\n\t\t\tdocument.getElementById(\"mm-defs-svg\").appendChild(editSvgs.svgDefs)\n\t\t}\n\t\tif (!editPatterns[color._id]) {\n\t\t\tlet svgPattern = document.createElementNS(\n\t\t\t\t\"http://www.w3.org/2000/svg\",\n\t\t\t\t\"pattern\"\n\t\t\t)\n\n\t\t\t// this.svgPatternImage = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n\t\t\tsvgPattern.setAttribute(\"id\", color._id)\n\t\t\teditPatterns[color._id] = svgPattern\n\t\t\tsvgPattern.setAttribute(\"patternUnits\", \"userSpaceOnUse\")\n\t\t\tsvgPattern.setAttribute(\"patternContentUnits\", \"userSpaceOnUse\")\n\t\t\tconst imgVals = { scale: 1 }\n\n\t\t\tlet W = ((color.size * svg.width.baseVal.value) / 20) * imgVals.scale\n\t\t\tlet H = (W * color.height) / color.width\n\n\t\t\tsvgPattern.setAttribute(\"width\", `${W}px`)\n\t\t\tsvgPattern.setAttribute(\"height\", `${H}px`)\n\t\t\t// this.getSvgPatternAndImage().svgPatternImage.href.baseval = `${api}/${color.value}`\n\t\t\tlet svgPatternImage = document.createElementNS(\n\t\t\t\t\"http://www.w3.org/2000/svg\",\n\t\t\t\t\"image\"\n\t\t\t)\n\n\t\t\tsvgPatternImage.setAttribute(\"width\", `${W}px`)\n\t\t\tsvgPatternImage.setAttribute(\"height\", `${H}px`)\n\t\t\tsvgPatternImage.href.baseVal = `${baseUrl}${color.value}`\n\n\t\t\teditSvgs.svgDefs.appendChild(svgPattern)\n\t\t\tsvgPattern.appendChild(svgPatternImage)\n\t\t}\n\t}\n\n\tconst selectFlowerColor = (color, svgId) => {\n\t\tlet svg = getEditSvgById(svgId)\n\n\t\tif (!editPatterns[color._id]) {\n\t\t\tcreateSvgPattern(svg, color)\n\t\t}\n\t}\n\tconst handleChangeColorPage = (page, type) => {\n\t\tconsole.log(page, type)\n\t\tif (type === 0) {\n\t\t\tgetColorList(page)\n\t\t} else {\n\t\t\tgetPaintList(page)\n\t\t}\n\t}\n\tconst handleSelect = (item, type) => {\n\t\tconsole.log(curSelectedColors)\n\t\tif (\n\t\t\tcurSelectedColors[curStyleIndex][curStylesEditGroupIndex] &&\n\t\t\titem._id === curSelectedColors[curStyleIndex][curStylesEditGroupIndex]._id\n\t\t) {\n\t\t\t// curSelectedColors[curStyleIndex] = false\n\t\t\t// setCurSelectedColors([].concat(curSelectedColors))\n\t\t\t// curStyleImgs.splice(curStyleIndex, 1, false)\n\t\t\t// setCurStyleImgs([].concat(curStyleImgs))\n\t\t\t// console.log(curSelectedColors)\n\t\t} else {\n\t\t\tcurSelectedColors[curStyleIndex].splice(curStylesEditGroupIndex, 1, item)\n\t\t\tconsole.log(curSelectedColors[curStyleIndex])\n\t\t\tsetCurSelectedColors([].concat(curSelectedColors))\n\t\t\t// setCurSelectedColorId()\n\t\t\tswitch (type) {\n\t\t\t\tcase \"color\":\n\t\t\t\t\t// const cIndex = styleDetails[curStyleIndex]._id\n\t\t\t\t\t// let svg = getEditSvgById(cIndex)\n\t\t\t\t\t// // let section = document.getElementById(\"section\")\n\t\t\t\t\t// // section.innerHTML = \"hhhhhh\"\n\t\t\t\t\t// for (let i = 0; i < svg.children.length; i++) {\n\t\t\t\t\t// \tif (\n\t\t\t\t\t// \t\tsvg.children[i].tagName === \"g\" ||\n\t\t\t\t\t// \t\tsvg.children[i].tagName === \"path\"\n\t\t\t\t\t// \t) {\n\t\t\t\t\t// \t\tsvg.children[i].style.fill = item.value\n\t\t\t\t\t// \t\tconsole.log(svg.children[i])\n\t\t\t\t\t// \t\t// svg.removeChild(svg.children[i])\n\t\t\t\t\t// \t}\n\t\t\t\t\t// }\n\n\t\t\t\t\tbreak\n\t\t\t\tcase \"paint\":\n\t\t\t\t\tconst pIndex = styleDetails[curStyleIndex]._id\n\t\t\t\t\tselectFlowerColor(item, pIndex)\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tconst getChannelsAssign = async (styleId, channelId) => {\n\t\t\tconst req = await request(\n\t\t\t\t\"channel/getAssign\",\n\t\t\t\t{\n\t\t\t\t\tstyleId,\n\t\t\t\t\tchannelId\n\t\t\t\t},\n\t\t\t\t\"get\"\n\t\t\t)\n\t\t\tif (!req) {\n\t\t\t\tsetPlainColors({\n\t\t\t\t\tdocs: [],\n\t\t\t\t\tpage: 1\n\t\t\t\t})\n\t\t\t\tsetFlowerColors({\n\t\t\t\t\tdocs: [],\n\t\t\t\t\tpage: 1\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tsetPlainColors({\n\t\t\t\t\tdocs: req.plainColors,\n\t\t\t\t\tpage: 1\n\t\t\t\t})\n\t\t\t\tsetFlowerColors({\n\t\t\t\t\tdocs: req.flowerColors,\n\t\t\t\t\tpage: 1\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tif (userInfo.role === 0) {\n\t\t\t// 客户\n\t\t\tgetChannelsAssign(sid, userInfo.channels[0])\n\t\t} else {\n\t\t\t// 产品经理\n\t\t\tgetColorList(1)\n\t\t\tgetPaintList(1)\n\t\t}\n\t}, [])\n\n\tuseEffect(() => {}, [])\n\treturn (\n\t\t<Modal onClose={props.onClose}>\n\t\t\t<Box width=\"14rem\" fontSize=\"0.18rem\" color=\"#000\">\n\t\t\t\t<Flex justifyContent=\"space-between\">\n\t\t\t\t\t<Flex\n\t\t\t\t\t\tflexDirection=\"column\"\n\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\tjustifyContent=\"space-evenly\"\n\t\t\t\t\t\twidth=\"6.75rem\"\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tcursor: \"pointer\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{Array.isArray(styleDetails) &&\n\t\t\t\t\t\t\tstyleDetails.map((style, index) => (\n\t\t\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\t\t\twidth=\"6.75rem\"\n\t\t\t\t\t\t\t\t\tpadding=\"1rem 0\"\n\t\t\t\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\t\t\t\t\t\tborder:\n\t\t\t\t\t\t\t\t\t\t\tcurStyleIndex === index\n\t\t\t\t\t\t\t\t\t\t\t\t? \"1px solid #000\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"1px solid #A0A0A0\"\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tsetCurStyleIndex(index)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<StyleImg\n\t\t\t\t\t\t\t\t\t\twidth=\"3.79rem\"\n\t\t\t\t\t\t\t\t\t\tcolor={curSelectedColors[index]}\n\t\t\t\t\t\t\t\t\t\tsvgId={style._id}\n\t\t\t\t\t\t\t\t\t\tshadowUrl={style.shadowUrl}\n\t\t\t\t\t\t\t\t\t\tsvgUrl={style.svgUrl}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{/* <div\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tposition: \"relative\"\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\t\t\tsrc={baseUrl + style.shadowUrl}\n\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: \"3.79rem\",\n\t\t\t\t\t\t\t\t\t\t\t\tminWidth: \"14px\",\n\t\t\t\t\t\t\t\t\t\t\t\tminHeight: \"14px\",\n\t\t\t\t\t\t\t\t\t\t\t\tposition: \"absolute\"\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<ReactSVG\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: \"3.79rem\",\n\t\t\t\t\t\t\t\t\t\t\t\tminWidth: \"14px\",\n\t\t\t\t\t\t\t\t\t\t\t\tminHeight: \"14px\"\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tbeforeInjection={svg => {\n\t\t\t\t\t\t\t\t\t\t\t\tsvg.setAttribute(\"id\", style._id)\n\t\t\t\t\t\t\t\t\t\t\t\tsvg.setAttribute(\"style\", \"width: 100%; height: 100%\")\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\trenumerateIRIElements={false}\n\t\t\t\t\t\t\t\t\t\t\tloading={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"loading\")\n\t\t\t\t\t\t\t\t\t\t\t\treturn \"loading\"\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tevalScripts=\"always\"\n\t\t\t\t\t\t\t\t\t\t\tsrc={baseUrl + style.svgUrl}\n\t\t\t\t\t\t\t\t\t\t></ReactSVG>\n\t\t\t\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</Flex>\n\n\t\t\t\t\t<Flex flexDirection=\"column\" flexGrow={1} pl=\"0.6rem\">\n\t\t\t\t\t\t<Box width={[1]} mb=\"0.6rem\">\n\t\t\t\t\t\t\t<Text id=\"section\" fontSize=\"0.18rem\" fontWeight=\"bolder\">\n\t\t\t\t\t\t\t\tSECTION NUMBER\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<Text fontSize=\"0.1rem\" m=\"0.16rem 0\">\n\t\t\t\t\t\t\t\t{styleDetails[curStyleIndex].styleNo}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<ColorList\n\t\t\t\t\t\t\tcolorList={plainColors.docs || []}\n\t\t\t\t\t\t\thandleSelect={handleSelect}\n\t\t\t\t\t\t\tcurChannelId={0}\n\t\t\t\t\t\t\tselectedList={[curSelectedColors[curStyleIndex] || {}]}\n\t\t\t\t\t\t\tpage={plainColors.page}\n\t\t\t\t\t\t\tonChangePage={handleChangeColorPage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Box height=\"0.3rem\" width={[1]} />\n\t\t\t\t\t\t<PaintList\n\t\t\t\t\t\t\tpaintList={flowerColors.docs || []}\n\t\t\t\t\t\t\thandleSelect={handleSelect}\n\t\t\t\t\t\t\tcurChannelId={0}\n\t\t\t\t\t\t\tselectedList={[curSelectedColors[curStyleIndex] || {}]}\n\t\t\t\t\t\t\tpage={flowerColors.page}\n\t\t\t\t\t\t\tonChangePage={handleChangeColorPage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\theight=\"0.7rem\"\n\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\tbg=\"#1B1B1B\"\n\t\t\t\t\t\t\tcolor=\"#fff\"\n\t\t\t\t\t\t\tpadding=\"0\"\n\t\t\t\t\t\t\tmt=\"0.7rem\"\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tborderRadius: 0,\n\t\t\t\t\t\t\t\tfontSize: \"0.14rem\",\n\t\t\t\t\t\t\t\tcursor: \"pointer\"\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tif (!curSelectedColors[0]) return\n\t\t\t\t\t\t\t\tif (styleDetails.length > 1 && !curSelectedColors[1]) return\n\t\t\t\t\t\t\t\tprops.confirmMade(curSelectedColors)\n\t\t\t\t\t\t\t\tprops.onClose()\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tFINISH\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Flex>\n\t\t\t\t</Flex>\n\t\t\t</Box>\n\t\t</Modal>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}