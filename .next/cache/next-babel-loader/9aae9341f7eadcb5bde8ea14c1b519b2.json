{"ast":null,"code":"var _jsxFileName = \"/Users/paige/Desktop/workspace/mm-next/components/color-and-paint.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { Flex, Text, Box, Button, Image } from \"rebass\";\nimport { baseUrl } from \"../utils/helper\";\n\nvar PagerButton = function PagerButton(props) {\n  return __jsx(Button, {\n    width: \"0.26rem\",\n    height: \"0.26rem\",\n    bg: \"#000\",\n    p: \"0\",\n    sx: {\n      borderRadius: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, props.children);\n};\n\nvar Pager = function Pager(props) {\n  return __jsx(Flex, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(PagerButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"<\"), __jsx(Text, {\n    bg: \"#EEEEEE\",\n    lineHeight: \"0.26rem\",\n    width: \"0.53rem\",\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.current), __jsx(PagerButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \">\"));\n};\n\nexport var PaintList = function PaintList(props) {\n  var paintList = props.paintList,\n      handleSelect = props.handleSelect,\n      channelInfoList = props.channelInfoList,\n      curChannelId = props.curChannelId; // let curChannelId = channelList[curChannelId]._id\n\n  var pIndex = channelInfoList.findIndex(function (x) {\n    return x.channelId === curChannelId;\n  });\n  console.log(pIndex);\n  console.log(channelInfoList); // if (cIndex >= 0)\n\n  var usedPlainColorIds = pIndex >= 0 ? channelInfoList[pIndex].flowerColors : [];\n  if (paintList.length < 1) return null;\n  return __jsx(Box, {\n    width: \"100%\",\n    mb: \"0.4rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(Flex, {\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"PRINT\"), \" \", __jsx(Pager, {\n    current: \"01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), __jsx(Flex, {\n    width: \"5rem\",\n    height: \"1.5rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, paintList.map(function (item) {\n    return __jsx(Box, {\n      sx: {\n        backgroundClip: \"content-box !important\",\n        boxSizing: \"content-box\",\n        cursor: \"pointer\",\n        background: \"url(\".concat(baseUrl + item.value, \")\"),\n        backgroundSize: \"100% 100% \",\n        border: \"1px \".concat(item.selected || usedPlainColorIds.indexOf(item.colorId) >= 0 ? \"#000\" : \"#fff\", \" solid\")\n      },\n      onClick: function onClick() {\n        handleSelect(item, \"paint\");\n      },\n      mt: \"0.2rem\",\n      mr: \"0.2rem\",\n      p: \"0.08rem\",\n      width: \"0.3rem\",\n      height: \"0.3rem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  })));\n};\nexport var ColorList = function ColorList(props) {\n  var colorList = props.colorList,\n      handleSelect = props.handleSelect,\n      channelInfoList = props.channelInfoList,\n      curChannelId = props.curChannelId; // let curChannelId = channelList[curChannelId]._id\n\n  var cIndex = channelInfoList.findIndex(function (x) {\n    return x.channelId === curChannelId;\n  });\n  console.log(cIndex);\n  console.log(channelInfoList); // if (cIndex >= 0)\n\n  var usedPlainColorIds = cIndex >= 0 ? channelInfoList[cIndex].plainColorIds : [];\n  return __jsx(Box, {\n    width: \"100%\",\n    mb: \"0.4rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(Flex, {\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"COLOUR\"), \" \", __jsx(Pager, {\n    current: \"01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), __jsx(Flex, {\n    width: \"5rem\",\n    height: \"1.5rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, colorList.map(function (item) {\n    return __jsx(Box, {\n      sx: {\n        cursor: \"pointer\",\n        boxSizing: \"content-box\",\n        backgroundClip: \"content-box\",\n        border: \"1px \".concat(item.selected || usedPlainColorIds.indexOf(item.colorId) >= 0 ? \"#000\" : \"#fff\", \" solid\")\n      },\n      onClick: function onClick() {\n        handleSelect(item, \"color\");\n      },\n      bg: item.value,\n      mt: \"0.2rem\",\n      mr: \"0.2rem\",\n      p: \"0.08rem\",\n      width: \"0.3rem\",\n      height: \"0.3rem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    });\n  })));\n};","map":{"version":3,"sources":["/Users/paige/Desktop/workspace/mm-next/components/color-and-paint.js"],"names":["React","useEffect","useState","Flex","Text","Box","Button","Image","baseUrl","PagerButton","props","borderRadius","children","Pager","current","PaintList","paintList","handleSelect","channelInfoList","curChannelId","pIndex","findIndex","x","channelId","console","log","usedPlainColorIds","flowerColors","length","map","item","backgroundClip","boxSizing","cursor","background","value","backgroundSize","border","selected","indexOf","colorId","ColorList","colorList","cIndex","plainColorIds"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Flex, Text, Box, Button, Image } from \"rebass\"\nimport { baseUrl } from \"../utils/helper\"\nconst PagerButton = props => (\n\t<Button\n\t\twidth=\"0.26rem\"\n\t\theight=\"0.26rem\"\n\t\tbg=\"#000\"\n\t\tp=\"0\"\n\t\tsx={{ borderRadius: 0 }}\n\t>\n\t\t{props.children}\n\t</Button>\n)\nconst Pager = props => (\n\t<Flex>\n\t\t<PagerButton>{\"<\"}</PagerButton>\n\t\t<Text bg=\"#EEEEEE\" lineHeight=\"0.26rem\" width=\"0.53rem\" textAlign=\"center\">\n\t\t\t{props.current}\n\t\t</Text>\n\t\t<PagerButton>{\">\"}</PagerButton>\n\t</Flex>\n)\nexport const PaintList = props => {\n\tconst { paintList, handleSelect, channelInfoList, curChannelId } = props\n\t// let curChannelId = channelList[curChannelId]._id\n\tconst pIndex = channelInfoList.findIndex(x => x.channelId === curChannelId)\n\tconsole.log(pIndex)\n\tconsole.log(channelInfoList)\n\t// if (cIndex >= 0)\n\tconst usedPlainColorIds =\n\t\tpIndex >= 0 ? channelInfoList[pIndex].flowerColors : []\n\tif (paintList.length < 1) return null\n\treturn (\n\t\t<Box width=\"100%\" mb=\"0.4rem\">\n\t\t\t<Flex justifyContent=\"space-between\" alignItems=\"center\">\n\t\t\t\t<Text>PRINT</Text> <Pager current=\"01\" />\n\t\t\t</Flex>\n\t\t\t<Flex width=\"5rem\" height=\"1.5rem\">\n\t\t\t\t{paintList.map(item => (\n\t\t\t\t\t<Box\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tbackgroundClip: \"content-box !important\",\n\t\t\t\t\t\t\tboxSizing: \"content-box\",\n\t\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\t\tbackground: `url(${baseUrl + item.value})`,\n\t\t\t\t\t\t\tbackgroundSize: \"100% 100% \",\n\t\t\t\t\t\t\tborder: `1px ${\n\t\t\t\t\t\t\t\titem.selected || usedPlainColorIds.indexOf(item.colorId) >= 0\n\t\t\t\t\t\t\t\t\t? \"#000\"\n\t\t\t\t\t\t\t\t\t: \"#fff\"\n\t\t\t\t\t\t\t} solid`\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\thandleSelect(item, \"paint\")\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tmt=\"0.2rem\"\n\t\t\t\t\t\tmr=\"0.2rem\"\n\t\t\t\t\t\tp=\"0.08rem\"\n\t\t\t\t\t\twidth=\"0.3rem\"\n\t\t\t\t\t\theight=\"0.3rem\"\n\t\t\t\t\t></Box>\n\t\t\t\t))}\n\t\t\t</Flex>\n\t\t</Box>\n\t)\n}\n\nexport const ColorList = props => {\n\tconst { colorList, handleSelect, channelInfoList, curChannelId } = props\n\t// let curChannelId = channelList[curChannelId]._id\n\tconst cIndex = channelInfoList.findIndex(x => x.channelId === curChannelId)\n\tconsole.log(cIndex)\n\tconsole.log(channelInfoList)\n\t// if (cIndex >= 0)\n\tconst usedPlainColorIds =\n\t\tcIndex >= 0 ? channelInfoList[cIndex].plainColorIds : []\n\treturn (\n\t\t<Box width=\"100%\" mb=\"0.4rem\">\n\t\t\t<Flex justifyContent=\"space-between\" alignItems=\"center\">\n\t\t\t\t<Text>COLOUR</Text> <Pager current=\"01\" />\n\t\t\t</Flex>\n\t\t\t<Flex width=\"5rem\" height=\"1.5rem\">\n\t\t\t\t{colorList.map(item => (\n\t\t\t\t\t<Box\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\t\tboxSizing: \"content-box\",\n\t\t\t\t\t\t\tbackgroundClip: \"content-box\",\n\t\t\t\t\t\t\tborder: `1px ${\n\t\t\t\t\t\t\t\titem.selected || usedPlainColorIds.indexOf(item.colorId) >= 0\n\t\t\t\t\t\t\t\t\t? \"#000\"\n\t\t\t\t\t\t\t\t\t: \"#fff\"\n\t\t\t\t\t\t\t} solid`\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\thandleSelect(item, \"color\")\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tbg={item.value}\n\t\t\t\t\t\tmt=\"0.2rem\"\n\t\t\t\t\t\tmr=\"0.2rem\"\n\t\t\t\t\t\tp=\"0.08rem\"\n\t\t\t\t\t\twidth=\"0.3rem\"\n\t\t\t\t\t\theight=\"0.3rem\"\n\t\t\t\t\t></Box>\n\t\t\t\t))}\n\t\t\t</Flex>\n\t\t</Box>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}