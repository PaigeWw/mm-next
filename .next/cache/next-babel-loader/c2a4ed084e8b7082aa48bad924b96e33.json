{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"/Users/paige/Desktop/workspace/mm-next/components/tables/order-detail.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Flex, Text, Box, Button, Row, Column } from \"rebass\";\nimport Table, { TableLine, ProductInfo } from \"./base-table\";\nimport ShowStyle from \"../show-style\";\nimport InputNumber from \"../number-input\";\nimport request from \"../../utils/request\";\nexport default (props => {\n  const {\n    OrderDetail\n  } = props;\n  const line = props.OrderDetail.orderData.length; // const {orderData} = OrderDetail\n\n  console.log(OrderDetail);\n  const {\n    0: orderData,\n    1: setOrderData\n  } = useState(OrderDetail.orderData);\n  const {\n    0: packageCount,\n    1: setPackageCount\n  } = useState(OrderDetail.packageCount);\n\n  const handleChangePackageCount = num => {\n    if (num < 1) return;\n    setPackageCount(num);\n    orderData.map((order, index) => {\n      order.total = getItemsTotal(index) * num;\n    });\n    setOrderData([].concat(orderData));\n  };\n\n  const handleChangeOrder = (styleIndex, sizeIndex, num) => {\n    console.log(num);\n    if (num < 0) return;\n    orderData[styleIndex].sizeInfo[sizeIndex].num = _parseInt(num, 10);\n    let allNumSum = getItemsTotal(styleIndex);\n    orderData[styleIndex].total = allNumSum * packageCount;\n    let temp = new Number(allNumSum * packageCount * orderData[styleIndex].signalPrice);\n    orderData[styleIndex].totalPrice = temp.toFixed(2);\n    setOrderData([].concat(orderData)); // console.log(\"orderData\", orderData)\n  };\n\n  const getItemsTotal = index => {\n    if (index < orderData.length) {\n      let count = 0;\n      orderData[index].sizeInfo.map(size => {\n        count += size.num;\n      });\n      return count;\n    }\n  };\n\n  return __jsx(Flex, {\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    sx: {\n      cursor: \"pointer\",\n      height: \"100%\",\n      background: \"rgba(0,0,0,0.4)\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(Box, {\n    sx: {\n      padding: \"0 18px 18px 18px\",\n      height: \"max-content\",\n      display: \"table\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(Table, {\n    sx: {\n      margin: \"0\",\n      marginRight: \"1px\",\n      width: \"100%\"\n    },\n    titles: [{\n      name: \"00\",\n      width: \"2/22\",\n      isHide: true\n    }, {\n      name: \"SECTION NUMBER\",\n      width: \"2/22\"\n    }, {\n      name: \"COLOUR\",\n      width: \"4/22\"\n    }, {\n      name: \"IMAGE\",\n      width: \"1/22\"\n    }, {\n      name: \"SIZE\",\n      width: \"2/22\"\n    }, {\n      name: \"PACKAGES\",\n      width: \"2/22\"\n    }, {\n      name: \"QUANTITY\",\n      width: \"2/22\"\n    }, {\n      name: \"PRICE\",\n      width: \"4/22\"\n    }, {\n      name: \"TOTAL AMOUN\",\n      width: \"1/22\"\n    }, {\n      name: \"DELETE\",\n      width: \"2/22\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, orderData.map((item, index) => __jsx(TableLine, {\n    haveDel: true,\n    key: `selectline-${item._id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, index), __jsx(ProductInfo, {\n    styleNum: \"XSJHFH00928\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), __jsx(Flex, {\n    flexDirection: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(ProductInfo, {\n    made: \"2110 YE GREEN\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), __jsx(ProductInfo, {\n    made: \"2110 YE GREEN\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), __jsx(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"\\b\\u56FE\\u7247\"), __jsx(Flex, {\n    justifyContent: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, collect.details[0].size.values.map((size, sizeIndex) => __jsx(Flex, {\n    flexDirection: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(Text, {\n    mr: \"10px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, size.name), __jsx(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, item.sizeInfo[sizeIndex].num)))), index > 0 ? null : __jsx(Flex, {\n    rowspan: line,\n    hasBorder: \"1px solid\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    sx: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(InputNumber, {\n    value: packageCount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), __jsx(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, item.total), __jsx(Flex, {\n    flexDirection: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, item.signalPrice), __jsx(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, item.totalPrice))))));\n});","map":{"version":3,"sources":["/Users/paige/Desktop/workspace/mm-next/components/tables/order-detail.js"],"names":["React","useState","useEffect","Flex","Text","Box","Button","Row","Column","Table","TableLine","ProductInfo","ShowStyle","InputNumber","request","props","OrderDetail","line","orderData","length","console","log","setOrderData","packageCount","setPackageCount","handleChangePackageCount","num","map","order","index","total","getItemsTotal","concat","handleChangeOrder","styleIndex","sizeIndex","sizeInfo","allNumSum","temp","Number","signalPrice","totalPrice","toFixed","count","size","cursor","height","background","padding","display","margin","marginRight","width","name","isHide","item","_id","collect","details","values"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,GAArB,EAA0BC,MAA1B,EAAkCC,GAAlC,EAAuCC,MAAvC,QAAqD,QAArD;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,cAA9C;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,gBAAeC,KAAK,IAAI;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,KAAxB;AACA,QAAME,IAAI,GAAGF,KAAK,CAACC,WAAN,CAAkBE,SAAlB,CAA4BC,MAAzC,CAFuB,CAGvB;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACA,QAAM;AAAA,OAACE,SAAD;AAAA,OAAYI;AAAZ,MAA4BrB,QAAQ,CAACe,WAAW,CAACE,SAAb,CAA1C;AACA,QAAM;AAAA,OAACK,YAAD;AAAA,OAAeC;AAAf,MAAkCvB,QAAQ,CAACe,WAAW,CAACO,YAAb,CAAhD;;AACA,QAAME,wBAAwB,GAAGC,GAAG,IAAI;AACvC,QAAIA,GAAG,GAAG,CAAV,EAAa;AACbF,IAAAA,eAAe,CAACE,GAAD,CAAf;AACAR,IAAAA,SAAS,CAACS,GAAV,CAAc,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC/BD,MAAAA,KAAK,CAACE,KAAN,GAAcC,aAAa,CAACF,KAAD,CAAb,GAAuBH,GAArC;AACA,KAFD;AAGAJ,IAAAA,YAAY,CAAC,GAAGU,MAAH,CAAUd,SAAV,CAAD,CAAZ;AACA,GAPD;;AAQA,QAAMe,iBAAiB,GAAG,CAACC,UAAD,EAAaC,SAAb,EAAwBT,GAAxB,KAAgC;AACzDN,IAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACA,QAAIA,GAAG,GAAG,CAAV,EAAa;AACbR,IAAAA,SAAS,CAACgB,UAAD,CAAT,CAAsBE,QAAtB,CAA+BD,SAA/B,EAA0CT,GAA1C,GAAgD,UAASA,GAAT,EAAc,EAAd,CAAhD;AACA,QAAIW,SAAS,GAAGN,aAAa,CAACG,UAAD,CAA7B;AACAhB,IAAAA,SAAS,CAACgB,UAAD,CAAT,CAAsBJ,KAAtB,GAA8BO,SAAS,GAAGd,YAA1C;AACA,QAAIe,IAAI,GAAG,IAAIC,MAAJ,CACVF,SAAS,GAAGd,YAAZ,GAA2BL,SAAS,CAACgB,UAAD,CAAT,CAAsBM,WADvC,CAAX;AAGAtB,IAAAA,SAAS,CAACgB,UAAD,CAAT,CAAsBO,UAAtB,GAAmCH,IAAI,CAACI,OAAL,CAAa,CAAb,CAAnC;AACApB,IAAAA,YAAY,CAAC,GAAGU,MAAH,CAAUd,SAAV,CAAD,CAAZ,CAVyD,CAWzD;AACA,GAZD;;AAaA,QAAMa,aAAa,GAAGF,KAAK,IAAI;AAC9B,QAAIA,KAAK,GAAGX,SAAS,CAACC,MAAtB,EAA8B;AAC7B,UAAIwB,KAAK,GAAG,CAAZ;AACAzB,MAAAA,SAAS,CAACW,KAAD,CAAT,CAAiBO,QAAjB,CAA0BT,GAA1B,CAA8BiB,IAAI,IAAI;AACrCD,QAAAA,KAAK,IAAIC,IAAI,CAAClB,GAAd;AACA,OAFD;AAGA,aAAOiB,KAAP;AACA;AACD,GARD;;AAUA,SACC,MAAC,IAAD;AACC,IAAA,aAAa,EAAC,QADf;AAEC,IAAA,cAAc,EAAC,eAFhB;AAGC,IAAA,EAAE,EAAE;AACHE,MAAAA,MAAM,EAAE,SADL;AAEHC,MAAAA,MAAM,EAAE,MAFL;AAGHC,MAAAA,UAAU,EAAE;AAHT,KAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASC,MAAC,GAAD;AACC,IAAA,EAAE,EAAE;AACHC,MAAAA,OAAO,EAAE,kBADN;AAEHF,MAAAA,MAAM,EAAE,aAFL;AAGHG,MAAAA,OAAO,EAAE;AAHN,KADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOC,MAAC,KAAD;AACC,IAAA,EAAE,EAAE;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,WAAW,EAAE,KAA5B;AAAmCC,MAAAA,KAAK,EAAE;AAA1C,KADL;AAEC,IAAA,MAAM,EAAE,CACP;AAAEC,MAAAA,IAAI,EAAE,IAAR;AAAcD,MAAAA,KAAK,EAAE,MAArB;AAA6BE,MAAAA,MAAM,EAAE;AAArC,KADO,EAEP;AAAED,MAAAA,IAAI,EAAE,gBAAR;AAA0BD,MAAAA,KAAK,EAAE;AAAjC,KAFO,EAGP;AAAEC,MAAAA,IAAI,EAAE,QAAR;AAAkBD,MAAAA,KAAK,EAAE;AAAzB,KAHO,EAIP;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBD,MAAAA,KAAK,EAAE;AAAxB,KAJO,EAKP;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBD,MAAAA,KAAK,EAAE;AAAvB,KALO,EAMP;AAAEC,MAAAA,IAAI,EAAE,UAAR;AAAoBD,MAAAA,KAAK,EAAE;AAA3B,KANO,EAOP;AAAEC,MAAAA,IAAI,EAAE,UAAR;AAAoBD,MAAAA,KAAK,EAAE;AAA3B,KAPO,EAQP;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBD,MAAAA,KAAK,EAAE;AAAxB,KARO,EASP;AAAEC,MAAAA,IAAI,EAAE,aAAR;AAAuBD,MAAAA,KAAK,EAAE;AAA9B,KATO,EAUP;AAAEC,MAAAA,IAAI,EAAE,QAAR;AAAkBD,MAAAA,KAAK,EAAE;AAAzB,KAVO,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeElC,SAAS,CAACS,GAAV,CAAc,CAAC4B,IAAD,EAAO1B,KAAP,KACd,MAAC,SAAD;AAAW,IAAA,OAAO,MAAlB;AAAmB,IAAA,GAAG,EAAG,cAAa0B,IAAI,CAACC,GAAI,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO3B,KAAP,CADD,EAEC,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC,MAAC,IAAD;AAAM,IAAA,aAAa,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,WAAD;AAAa,IAAA,IAAI,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,MAAC,WAAD;AAAa,IAAA,IAAI,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CAHD,EAOC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPD,EAQC,MAAC,IAAD;AAAM,IAAA,cAAc,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE4B,OAAO,CAACC,OAAR,CAAgB,CAAhB,EAAmBd,IAAnB,CAAwBe,MAAxB,CAA+BhC,GAA/B,CAAmC,CAACiB,IAAD,EAAOT,SAAP,KACnC,MAAC,IAAD;AAAM,IAAA,aAAa,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAM,IAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBS,IAAI,CAACS,IAAtB,CADD,EAEC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOE,IAAI,CAACnB,QAAL,CAAcD,SAAd,EAAyBT,GAAhC,CAFD,CADA,CADF,CARD,EAgBEG,KAAK,GAAG,CAAR,GAAY,IAAZ,GACA,MAAC,IAAD;AACC,IAAA,OAAO,EAAEZ,IADV;AAEC,IAAA,SAAS,EAAE,WAFZ;AAGC,IAAA,cAAc,EAAC,QAHhB;AAIC,IAAA,UAAU,EAAC,QAJZ;AAKC,IAAA,EAAE,EAAE;AAAEmC,MAAAA,KAAK,EAAE,MAAT;AAAiBN,MAAAA,MAAM,EAAE;AAAzB,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOC,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEvB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,CAjBF,EA4BC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOgC,IAAI,CAACzB,KAAZ,CA5BD,EA6BC,MAAC,IAAD;AAAM,IAAA,aAAa,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8ByB,IAAI,CAACf,WAAnC,CA7BD,EA8BC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOe,IAAI,CAACd,UAAZ,CA9BD,CADA,CAfF,CAPD,CATD,CADD;AAsEA,CA5GD","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Flex, Text, Box, Button, Row, Column } from \"rebass\"\nimport Table, { TableLine, ProductInfo } from \"./base-table\"\nimport ShowStyle from \"../show-style\"\nimport InputNumber from \"../number-input\"\nimport request from \"../../utils/request\"\n\nexport default props => {\n\tconst { OrderDetail } = props\n\tconst line = props.OrderDetail.orderData.length\n\t// const {orderData} = OrderDetail\n\tconsole.log(OrderDetail)\n\tconst [orderData, setOrderData] = useState(OrderDetail.orderData)\n\tconst [packageCount, setPackageCount] = useState(OrderDetail.packageCount)\n\tconst handleChangePackageCount = num => {\n\t\tif (num < 1) return\n\t\tsetPackageCount(num)\n\t\torderData.map((order, index) => {\n\t\t\torder.total = getItemsTotal(index) * num\n\t\t})\n\t\tsetOrderData([].concat(orderData))\n\t}\n\tconst handleChangeOrder = (styleIndex, sizeIndex, num) => {\n\t\tconsole.log(num)\n\t\tif (num < 0) return\n\t\torderData[styleIndex].sizeInfo[sizeIndex].num = parseInt(num, 10)\n\t\tlet allNumSum = getItemsTotal(styleIndex)\n\t\torderData[styleIndex].total = allNumSum * packageCount\n\t\tlet temp = new Number(\n\t\t\tallNumSum * packageCount * orderData[styleIndex].signalPrice\n\t\t)\n\t\torderData[styleIndex].totalPrice = temp.toFixed(2)\n\t\tsetOrderData([].concat(orderData))\n\t\t// console.log(\"orderData\", orderData)\n\t}\n\tconst getItemsTotal = index => {\n\t\tif (index < orderData.length) {\n\t\t\tlet count = 0\n\t\t\torderData[index].sizeInfo.map(size => {\n\t\t\t\tcount += size.num\n\t\t\t})\n\t\t\treturn count\n\t\t}\n\t}\n\n\treturn (\n\t\t<Flex\n\t\t\tflexDirection=\"column\"\n\t\t\tjustifyContent=\"space-between\"\n\t\t\tsx={{\n\t\t\t\tcursor: \"pointer\",\n\t\t\t\theight: \"100%\",\n\t\t\t\tbackground: \"rgba(0,0,0,0.4)\"\n\t\t\t}}\n\t\t>\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\tpadding: \"0 18px 18px 18px\",\n\t\t\t\t\theight: \"max-content\",\n\t\t\t\t\tdisplay: \"table\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Table\n\t\t\t\t\tsx={{ margin: \"0\", marginRight: \"1px\", width: \"100%\" }}\n\t\t\t\t\ttitles={[\n\t\t\t\t\t\t{ name: \"00\", width: \"2/22\", isHide: true },\n\t\t\t\t\t\t{ name: \"SECTION NUMBER\", width: \"2/22\" },\n\t\t\t\t\t\t{ name: \"COLOUR\", width: \"4/22\" },\n\t\t\t\t\t\t{ name: \"IMAGE\", width: \"1/22\" },\n\t\t\t\t\t\t{ name: \"SIZE\", width: \"2/22\" },\n\t\t\t\t\t\t{ name: \"PACKAGES\", width: \"2/22\" },\n\t\t\t\t\t\t{ name: \"QUANTITY\", width: \"2/22\" },\n\t\t\t\t\t\t{ name: \"PRICE\", width: \"4/22\" },\n\t\t\t\t\t\t{ name: \"TOTAL AMOUN\", width: \"1/22\" },\n\t\t\t\t\t\t{ name: \"DELETE\", width: \"2/22\" }\n\t\t\t\t\t]}\n\t\t\t\t>\n\t\t\t\t\t{orderData.map((item, index) => (\n\t\t\t\t\t\t<TableLine haveDel key={`selectline-${item._id}`}>\n\t\t\t\t\t\t\t<Text>{index}</Text>\n\t\t\t\t\t\t\t<ProductInfo styleNum=\"XSJHFH00928\" />\n\t\t\t\t\t\t\t<Flex flexDirection=\"column\">\n\t\t\t\t\t\t\t\t<ProductInfo made=\"2110 YE GREEN\" />\n\t\t\t\t\t\t\t\t<ProductInfo made=\"2110 YE GREEN\" />\n\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t<Text>\b图片</Text>\n\t\t\t\t\t\t\t<Flex justifyContent=\"space-between\">\n\t\t\t\t\t\t\t\t{collect.details[0].size.values.map((size, sizeIndex) => (\n\t\t\t\t\t\t\t\t\t<Flex flexDirection=\"column\">\n\t\t\t\t\t\t\t\t\t\t<Text mr=\"10px\">{size.name}</Text>\n\t\t\t\t\t\t\t\t\t\t<Text>{item.sizeInfo[sizeIndex].num}</Text>\n\t\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t{index > 0 ? null : (\n\t\t\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\t\t\trowspan={line}\n\t\t\t\t\t\t\t\t\thasBorder={\"1px solid\"}\n\t\t\t\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\t\t\t\tsx={{ width: \"100%\", height: \"100%\" }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<InputNumber value={packageCount} />\n\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<Text>{item.total}</Text>\n\t\t\t\t\t\t\t<Flex flexDirection=\"column\">{item.signalPrice}</Flex>\n\t\t\t\t\t\t\t<Text>{item.totalPrice}</Text>\n\t\t\t\t\t\t</TableLine>\n\t\t\t\t\t))}\n\t\t\t\t</Table>\n\t\t\t</Box>\n\t\t</Flex>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}