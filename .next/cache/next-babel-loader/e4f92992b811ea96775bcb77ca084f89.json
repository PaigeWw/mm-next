{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/paige/Desktop/workspace/mm-next/components/select-assign-tool/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport { Flex, Text, Box, Button, Image } from \"rebass\";\nimport { Title } from \"./aisle-button\";\nimport { ColorList, PaintList } from \"../color-and-paint\";\nimport request from \"../../utils/request.js\";\nimport { baseUrl } from \"../../utils/helper\";\nexport default (props => {\n  const {\n    sid,\n    top,\n    col,\n    styleItem\n  } = props.currentSeleted;\n  const channelInfoList = [];\n  const {\n    0: curChannel,\n    1: setCurChannel\n  } = useState({});\n  const {\n    0: channelList,\n    1: setChannelList\n  } = useState(false);\n  const {\n    0: colorList,\n    1: setColorList\n  } = useState([]);\n  const {\n    0: paintList,\n    1: setPaintList\n  } = useState([]);\n  const {\n    0: sizeList,\n    1: setSizeList\n  } = useState([]);\n  const {\n    0: curChannelAssign,\n    1: setCurChannelAssign\n  } = useState({\n    plainColors: [],\n    flowerColors: []\n  });\n\n  const getColorList = async page => {\n    const req = await request(\"color/getList\", {\n      type: 0,\n      page: page,\n      limit: 14\n    }, \"get\");\n    setColorList({\n      docs: req.docs,\n      page: req.page\n    }); // console.log(\"getChannels\", req)\n  };\n\n  const getPaintList = async page => {\n    const req = await request(\"color/getList\", {\n      type: 1,\n      page: page,\n      limit: 14\n    }, \"get\");\n    setPaintList({\n      docs: req.docs,\n      page: req.page\n    }); // console.log(\"getChannels\", req)\n  };\n\n  useEffect(() => {\n    const getChannels = async () => {\n      const req = await request(\"channel/getList\", {}, \"get\");\n      setChannelList(req.docs);\n\n      if (req.docs.length > 0) {\n        setCurChannel(req.docs[0]); // getChannelsAssign(sid, req.docs[0]._id)\n      }\n    };\n\n    getChannels();\n    getColorList();\n    getPaintList();\n  }, []);\n  useEffect(() => {\n    if (props.currentSeleted) {\n      const getStyle = async () => {\n        const req = await request(\"style/detail\", {\n          _id: sid\n        }, \"get\");\n        if (!req) return; // setCurChannelIndex(0)\n\n        setSizeList(req.size.values);\n      };\n\n      getStyle();\n    }\n  }, [props.currentSeleted]);\n  useEffect(() => {\n    if (!curChannel._id) return;\n    console.log(\"curChannel->\", curChannel.code);\n\n    const getChannelsAssign = async (styleId, channelId) => {\n      const req = await request(\"channel/getAssign\", {\n        styleId,\n        channelId\n      }, \"get\");\n\n      if (!req) {\n        setCurChannelAssign({\n          plainColors: [],\n          flowerColors: []\n        });\n      } else {\n        setCurChannelAssign(req);\n      }\n    };\n\n    getChannelsAssign(sid, curChannel._id);\n  }, [curChannel]);\n  let left = (col + 2) * 3.2;\n\n  if (left > 19.2 - 6.4) {\n    left = (col - 1) * 3.2;\n  }\n\n  const handleSelect = (item, type) => {\n    switch (type) {\n      case \"color\":\n        const cIndex = curChannelAssign.plainColors.findIndex(x => x._id === item._id);\n        console.log(\"cIndex\", cIndex);\n\n        if (cIndex < 0) {\n          curChannelAssign.plainColors.push(item);\n        } else {\n          curChannelAssign.plainColors.splice(cIndex, 1);\n        }\n\n        const res = request(\"/channel/assign\", {\n          styleId: sid,\n          channelId: curChannel._id,\n          plainColor: item._id\n        }, \"post\");\n        setCurChannelAssign(_objectSpread({}, curChannelAssign, {\n          plainColors: [].concat(curChannelAssign.plainColors)\n        }));\n        break;\n\n      case \"paint\":\n        const pIndex = curChannelAssign.flowerColors.findIndex(x => x._id === item._id);\n        console.log(\"cIndex\", cIndex);\n\n        if (pIndex < 0) {\n          curChannelAssign.flowerColors.push(item);\n        } else {\n          curChannelAssign.flowerColors.splice(pIndex, 1);\n        }\n\n        const res1 = request(\"/channel/assign\", {\n          styleId: sid,\n          channelId: curChannel._id,\n          flowerColor: item._id\n        }, \"post\");\n        setCurChannelAssign(_objectSpread({}, curChannelAssign, {\n          flowerColors: [].concat(curChannelAssign.flowerColors)\n        }));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSelectChannel = channel => {\n    setCurChannel(channel);\n  };\n\n  const handleChangeColorPage = (page, type) => {\n    console.log(page, type);\n\n    if (type === 0) {\n      getColorList(page);\n    } else {\n      getPaintList(page);\n    }\n  }; // const handleCommitSelected = index => {}\n\n\n  if (!channelList) return null;\n  console.log(curChannel);\n  return __jsx(Flex, {\n    width: \"6.4rem\",\n    bg: \"#fff\",\n    flexDirection: \"column\",\n    fontSize: \"0.18rem\",\n    color: \"#000\",\n    p: \"0.5rem 0.7rem 0 0.7rem\",\n    sx: {\n      position: \"absolute\",\n      top: `${top}px`,\n      left: `${left}rem`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, __jsx(Title, {\n    styleNo: styleItem.styleNo,\n    channelList: channelList // channelInfoList={curChannelAssign.plainColors}\n    ,\n    onClose: props.onClose,\n    curChannel: curChannel,\n    onSelectChannel: handleSelectChannel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), __jsx(Flex, {\n    flexDirection: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, __jsx(Box, {\n    width: \"100%\",\n    mb: \"0.4rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, __jsx(Text, {\n    mb: \"0.1rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"SIZE\\u300CCUP\\u300D\"), __jsx(Flex, {\n    width: \"100%\",\n    lineHeight: \"0.36rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, sizeList.map(size => __jsx(Text, {\n    mr: \"0.2rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, size.name)))), __jsx(ColorList, {\n    colorList: colorList.docs || [],\n    page: colorList.page,\n    handleSelect: handleSelect,\n    curChannelId: curChannel._id,\n    selectedList: curChannelAssign.plainColors,\n    onChangePage: handleChangeColorPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }), __jsx(PaintList, {\n    paintList: paintList.docs || [],\n    page: paintList.page,\n    handleSelect: handleSelect,\n    curChannelId: curChannel._id,\n    selectedList: curChannelAssign.flowerColors,\n    onChangePage: handleChangeColorPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  })), __jsx(Button, {\n    variant: \"primary\",\n    height: \"0.7rem\",\n    width: \"6.4rem\",\n    bg: \"#1B1B1B\",\n    color: \"#fff\",\n    padding: \"0\",\n    ml: \"-0.7rem\",\n    sx: {\n      borderRadius: 0,\n      fontSize: \"0.14rem\",\n      cursor: \"pointer\"\n    },\n    onClick: props.onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"FINISH\"));\n});","map":{"version":3,"sources":["/Users/paige/Desktop/workspace/mm-next/components/select-assign-tool/index.js"],"names":["React","useEffect","useState","Flex","Text","Box","Button","Image","Title","ColorList","PaintList","request","baseUrl","props","sid","top","col","styleItem","currentSeleted","channelInfoList","curChannel","setCurChannel","channelList","setChannelList","colorList","setColorList","paintList","setPaintList","sizeList","setSizeList","curChannelAssign","setCurChannelAssign","plainColors","flowerColors","getColorList","page","req","type","limit","docs","getPaintList","getChannels","length","getStyle","_id","size","values","console","log","code","getChannelsAssign","styleId","channelId","left","handleSelect","item","cIndex","findIndex","x","push","splice","res","plainColor","concat","pIndex","res1","flowerColor","handleSelectChannel","channel","handleChangeColorPage","position","styleNo","onClose","map","name","borderRadius","fontSize","cursor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Flex, Text, Box, Button, Image } from \"rebass\"\nimport { Title } from \"./aisle-button\"\nimport { ColorList, PaintList } from \"../color-and-paint\"\nimport request from \"../../utils/request.js\"\nimport { baseUrl } from \"../../utils/helper\"\n\nexport default props => {\n\tconst { sid, top, col, styleItem } = props.currentSeleted\n\tconst channelInfoList = []\n\tconst [curChannel, setCurChannel] = useState({})\n\tconst [channelList, setChannelList] = useState(false)\n\tconst [colorList, setColorList] = useState([])\n\tconst [paintList, setPaintList] = useState([])\n\tconst [sizeList, setSizeList] = useState([])\n\tconst [curChannelAssign, setCurChannelAssign] = useState({\n\t\tplainColors: [],\n\t\tflowerColors: []\n\t})\n\tconst getColorList = async page => {\n\t\tconst req = await request(\n\t\t\t\"color/getList\",\n\t\t\t{ type: 0, page: page, limit: 14 },\n\t\t\t\"get\"\n\t\t)\n\t\tsetColorList({ docs: req.docs, page: req.page })\n\t\t// console.log(\"getChannels\", req)\n\t}\n\tconst getPaintList = async page => {\n\t\tconst req = await request(\n\t\t\t\"color/getList\",\n\t\t\t{ type: 1, page: page, limit: 14 },\n\t\t\t\"get\"\n\t\t)\n\t\tsetPaintList({ docs: req.docs, page: req.page })\n\t\t// console.log(\"getChannels\", req)\n\t}\n\tuseEffect(() => {\n\t\tconst getChannels = async () => {\n\t\t\tconst req = await request(\"channel/getList\", {}, \"get\")\n\t\t\tsetChannelList(req.docs)\n\t\t\tif (req.docs.length > 0) {\n\t\t\t\tsetCurChannel(req.docs[0])\n\t\t\t\t// getChannelsAssign(sid, req.docs[0]._id)\n\t\t\t}\n\t\t}\n\t\tgetChannels()\n\t\tgetColorList()\n\t\tgetPaintList()\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (props.currentSeleted) {\n\t\t\tconst getStyle = async () => {\n\t\t\t\tconst req = await request(\"style/detail\", { _id: sid }, \"get\")\n\t\t\t\tif (!req) return\n\t\t\t\t// setCurChannelIndex(0)\n\t\t\t\tsetSizeList(req.size.values)\n\t\t\t}\n\t\t\tgetStyle()\n\t\t}\n\t}, [props.currentSeleted])\n\n\tuseEffect(() => {\n\t\tif (!curChannel._id) return\n\t\tconsole.log(\"curChannel->\", curChannel.code)\n\t\tconst getChannelsAssign = async (styleId, channelId) => {\n\t\t\tconst req = await request(\n\t\t\t\t\"channel/getAssign\",\n\t\t\t\t{\n\t\t\t\t\tstyleId,\n\t\t\t\t\tchannelId\n\t\t\t\t},\n\t\t\t\t\"get\"\n\t\t\t)\n\t\t\tif (!req) {\n\t\t\t\tsetCurChannelAssign({\n\t\t\t\t\tplainColors: [],\n\t\t\t\t\tflowerColors: []\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tsetCurChannelAssign(req)\n\t\t\t}\n\t\t}\n\t\tgetChannelsAssign(sid, curChannel._id)\n\t}, [curChannel])\n\n\tlet left = (col + 2) * 3.2\n\tif (left > 19.2 - 6.4) {\n\t\tleft = (col - 1) * 3.2\n\t}\n\n\tconst handleSelect = (item, type) => {\n\t\tswitch (type) {\n\t\t\tcase \"color\":\n\t\t\t\tconst cIndex = curChannelAssign.plainColors.findIndex(\n\t\t\t\t\tx => x._id === item._id\n\t\t\t\t)\n\t\t\t\tconsole.log(\"cIndex\", cIndex)\n\t\t\t\tif (cIndex < 0) {\n\t\t\t\t\tcurChannelAssign.plainColors.push(item)\n\t\t\t\t} else {\n\t\t\t\t\tcurChannelAssign.plainColors.splice(cIndex, 1)\n\t\t\t\t}\n\t\t\t\tconst res = request(\n\t\t\t\t\t\"/channel/assign\",\n\t\t\t\t\t{\n\t\t\t\t\t\tstyleId: sid,\n\t\t\t\t\t\tchannelId: curChannel._id,\n\t\t\t\t\t\tplainColor: item._id\n\t\t\t\t\t},\n\t\t\t\t\t\"post\"\n\t\t\t\t)\n\t\t\t\tsetCurChannelAssign({\n\t\t\t\t\t...curChannelAssign,\n\t\t\t\t\tplainColors: [].concat(curChannelAssign.plainColors)\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase \"paint\":\n\t\t\t\tconst pIndex = curChannelAssign.flowerColors.findIndex(\n\t\t\t\t\tx => x._id === item._id\n\t\t\t\t)\n\t\t\t\tconsole.log(\"cIndex\", cIndex)\n\t\t\t\tif (pIndex < 0) {\n\t\t\t\t\tcurChannelAssign.flowerColors.push(item)\n\t\t\t\t} else {\n\t\t\t\t\tcurChannelAssign.flowerColors.splice(pIndex, 1)\n\t\t\t\t}\n\t\t\t\tconst res1 = request(\n\t\t\t\t\t\"/channel/assign\",\n\t\t\t\t\t{\n\t\t\t\t\t\tstyleId: sid,\n\t\t\t\t\t\tchannelId: curChannel._id,\n\t\t\t\t\t\tflowerColor: item._id\n\t\t\t\t\t},\n\t\t\t\t\t\"post\"\n\t\t\t\t)\n\t\t\t\tsetCurChannelAssign({\n\t\t\t\t\t...curChannelAssign,\n\t\t\t\t\tflowerColors: [].concat(curChannelAssign.flowerColors)\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\tconst handleSelectChannel = channel => {\n\t\tsetCurChannel(channel)\n\t}\n\tconst handleChangeColorPage = (page, type) => {\n\t\tconsole.log(page, type)\n\t\tif (type === 0) {\n\t\t\tgetColorList(page)\n\t\t} else {\n\t\t\tgetPaintList(page)\n\t\t}\n\t}\n\t// const handleCommitSelected = index => {}\n\tif (!channelList) return null\n\tconsole.log(curChannel)\n\treturn (\n\t\t<Flex\n\t\t\twidth=\"6.4rem\"\n\t\t\tbg=\"#fff\"\n\t\t\tflexDirection=\"column\"\n\t\t\tfontSize=\"0.18rem\"\n\t\t\tcolor=\"#000\"\n\t\t\tp=\"0.5rem 0.7rem 0 0.7rem\"\n\t\t\tsx={{\n\t\t\t\tposition: \"absolute\",\n\t\t\t\ttop: `${top}px`,\n\t\t\t\tleft: `${left}rem`\n\t\t\t}}\n\t\t>\n\t\t\t<Title\n\t\t\t\tstyleNo={styleItem.styleNo}\n\t\t\t\tchannelList={channelList}\n\t\t\t\t// channelInfoList={curChannelAssign.plainColors}\n\t\t\t\tonClose={props.onClose}\n\t\t\t\tcurChannel={curChannel}\n\t\t\t\tonSelectChannel={handleSelectChannel}\n\t\t\t/>\n\t\t\t<Flex flexDirection=\"column\">\n\t\t\t\t<Box width=\"100%\" mb=\"0.4rem\">\n\t\t\t\t\t<Text mb=\"0.1rem\">SIZE「CUP」</Text>\n\t\t\t\t\t<Flex width=\"100%\" lineHeight=\"0.36rem\">\n\t\t\t\t\t\t{sizeList.map(size => (\n\t\t\t\t\t\t\t<Text mr=\"0.2rem\">{size.name}</Text>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Flex>\n\t\t\t\t</Box>\n\t\t\t\t<ColorList\n\t\t\t\t\tcolorList={colorList.docs || []}\n\t\t\t\t\tpage={colorList.page}\n\t\t\t\t\thandleSelect={handleSelect}\n\t\t\t\t\tcurChannelId={curChannel._id}\n\t\t\t\t\tselectedList={curChannelAssign.plainColors}\n\t\t\t\t\tonChangePage={handleChangeColorPage}\n\t\t\t\t/>\n\t\t\t\t<PaintList\n\t\t\t\t\tpaintList={paintList.docs || []}\n\t\t\t\t\tpage={paintList.page}\n\t\t\t\t\thandleSelect={handleSelect}\n\t\t\t\t\tcurChannelId={curChannel._id}\n\t\t\t\t\tselectedList={curChannelAssign.flowerColors}\n\t\t\t\t\tonChangePage={handleChangeColorPage}\n\t\t\t\t/>\n\t\t\t</Flex>\n\t\t\t<Button\n\t\t\t\tvariant=\"primary\"\n\t\t\t\theight=\"0.7rem\"\n\t\t\t\twidth=\"6.4rem\"\n\t\t\t\tbg=\"#1B1B1B\"\n\t\t\t\tcolor=\"#fff\"\n\t\t\t\tpadding=\"0\"\n\t\t\t\tml=\"-0.7rem\"\n\t\t\t\tsx={{\n\t\t\t\t\tborderRadius: 0,\n\t\t\t\t\tfontSize: \"0.14rem\",\n\t\t\t\t\tcursor: \"pointer\"\n\t\t\t\t}}\n\t\t\t\tonClick={props.onClose}\n\t\t\t>\n\t\t\t\tFINISH\n\t\t\t</Button>\n\t\t</Flex>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}