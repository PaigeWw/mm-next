{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { Flex, Text, Box, Button, Image } from \"rebass\";\nimport Router from \"next/router\";\nimport Head from \"../components/nav\";\nimport SelectBar from \"../components/select-bar\";\nimport SelectLine from \"../components/select-line\";\nimport SelectAssignTool from \"../components/select-assign-tool\";\nimport useUserInfo from \"../hooks/getUserInfo\";\nimport request from \"../utils/request.js\";\nimport { getPageQuery } from \"../utils/helper\";\nexport default (() => {\n  const info = useUserInfo(); // console.log(info)\n\n  const {\n    0: categoryList,\n    1: setGategoryList\n  } = useState([{\n    styles: []\n  }]);\n  const {\n    0: currentSeleted,\n    1: setCurrentSeleted\n  } = useState(false);\n  const {\n    0: selectStyles,\n    1: setSelectStyles\n  } = useState([]);\n  const {\n    0: selectStylesType,\n    1: setSelectStylesType\n  } = useState([]);\n  const {\n    0: showToast,\n    1: setShowToast\n  } = useState(false);\n  const {\n    0: toast,\n    1: setToast\n  } = useState({});\n  useEffect(() => {\n    const getGategoryList = async () => {\n      let query = getPageQuery();\n      const req = await request(\"goods/detail\", {\n        _id: query.id\n      }, \"get\");\n      if (!req) return;\n      setGategoryList(req.category);\n    };\n\n    getGategoryList();\n  }, []); // const info = useUserInfo()\n\n  const handleSelectStyle = (sid, type, top, col, styleItem) => {\n    let pos = selectStyles.indexOf(sid);\n\n    if (pos > -1) {\n      //已选中 则去除 选中\n      console.log(selectStyles);\n      console.log(selectStylesType);\n\n      if (selectStyles.length > 1) {\n        let savePos = (pos + 1) % 2;\n        setSelectStyles(selectStyles.slice(savePos, savePos + 1));\n        setSelectStylesType(selectStylesType.slice(savePos, savePos + 1));\n      } else {\n        setSelectStyles([]);\n        setSelectStylesType([]);\n      }\n\n      setCurrentSeleted(false);\n    } else {\n      //未选中 则 设置为选中\n      console.log(selectStyles, type);\n      setCurrentSeleted({\n        sid,\n        type,\n        top,\n        col,\n        styleItem\n      });\n      let topsPos = selectStylesType.indexOf(\"TOPS\");\n      let bottomsPos = selectStylesType.indexOf(\"BOTTOMS\");\n\n      if (topsPos > -1 && type == \"BOTTOMS\") {\n        let saveTemps = selectStyles.slice(topsPos, topsPos + 1);\n        saveTemps.push(sid);\n        setSelectStyles(saveTemps);\n        setSelectStylesType([\"TOPS\", type]);\n        return;\n      }\n\n      if (bottomsPos > -1 && type == \"TOPS\") {\n        let saveTemps = selectStyles.slice(bottomsPos, bottomsPos + 1);\n        saveTemps.push(sid);\n        setSelectStyles(saveTemps);\n        setSelectStylesType([\"BOTTOMS\", type]);\n        return;\n      }\n\n      setSelectStyles([sid]);\n      setSelectStylesType([type]);\n    }\n  };\n\n  return __jsx(Flex, {\n    flexDirection: \"column\"\n  }, __jsx(Head, {\n    showToast: showToast,\n    toast: toast\n  }), __jsx(SelectBar, null), __jsx(Box, {\n    mt: \"40px\",\n    sx: {\n      position: \"relative\"\n    }\n  }, categoryList.map((item, index) => __jsx(SelectLine, {\n    key: index + item._id,\n    row: index,\n    kind: item.name,\n    styles: item.styles,\n    selectStyles: selectStyles,\n    onSelect: handleSelectStyle\n  })), currentSeleted && info.role === 1 ? __jsx(SelectAssignTool, {\n    currentSeleted: currentSeleted,\n    onClose: () => {\n      setCurrentSeleted(false);\n    }\n  }) : null), __jsx(Button, {\n    variant: \"primary\",\n    height: \"1.13rem\",\n    width: \"19.2rem\",\n    bg: \"#FF8E6C\",\n    color: \"#000\",\n    padding: \"0\",\n    sx: {\n      borderRadius: 0,\n      fontSize: \"0.27rem\",\n      cursor: \"pointer\"\n    },\n    onClick: () => {\n      // console.log('selectStylesselectStylesselectStyles')\n      if (selectStyles.length > 0) {\n        Router.push(`/made?id=${selectStyles[0]}${selectStyles.length > 1 ? \"&id1=\" + selectStyles[1] : \"\"}`);\n      } else {\n        Router.push(\"/made\"); // setToast({ type: \"error\", info: \"Please Select Style.\" })\n      }\n    }\n  }, \"NEXT>\"));\n});","map":null,"metadata":{},"sourceType":"module"}