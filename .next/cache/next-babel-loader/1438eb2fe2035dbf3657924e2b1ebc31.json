{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { Flex, Text, Box, Button, Image } from \"rebass\";\nimport { baseUrl } from \"../utils/helper\";\n\nvar PagerButton = function PagerButton(props) {\n  return __jsx(Button, {\n    width: \"0.26rem\",\n    height: \"0.26rem\",\n    bg: \"#000\",\n    p: \"0\",\n    sx: {\n      borderRadius: 0\n    }\n  }, props.children);\n};\n\nvar Pager = function Pager(props) {\n  return __jsx(Flex, null, __jsx(PagerButton, null, \"<\"), __jsx(Text, {\n    bg: \"#EEEEEE\",\n    lineHeight: \"0.26rem\",\n    width: \"0.53rem\",\n    textAlign: \"center\"\n  }, props.current), __jsx(PagerButton, null, \">\"));\n};\n\nexport var PaintList = function PaintList(props) {\n  var paintList = props.paintList,\n      handleSelect = props.handleSelect,\n      channelInfoList = props.channelInfoList,\n      curChannelId = props.curChannelId;\n  var pIndex = channelInfoList.findIndex(function (x) {\n    return x.channelId === curChannelId;\n  });\n  var usedPlainColorIds = pIndex >= 0 ? channelInfoList[pIndex].flowerColorIds : [];\n  if (paintList.length < 1) return null;\n  return __jsx(Box, {\n    width: \"100%\",\n    mb: \"0.4rem\"\n  }, __jsx(Flex, {\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  }, __jsx(Text, null, \"PRINT\"), \" \", __jsx(Pager, {\n    current: \"01\"\n  })), __jsx(Flex, {\n    width: \"5rem\",\n    height: \"1.5rem\"\n  }, paintList.map(function (item) {\n    return __jsx(Box, {\n      sx: {\n        backgroundClip: \"content-box !important\",\n        boxSizing: \"content-box\",\n        cursor: \"pointer\",\n        background: \"url(\".concat(baseUrl + item.value, \")\"),\n        backgroundSize: \"100% 100% \",\n        border: \"1px \".concat(usedPlainColorIds.indexOf(item.colorId) >= 0 ? \"#000\" : \"#fff\", \" solid\")\n      },\n      onClick: function onClick() {\n        handleSelect(item, \"paint\");\n      },\n      mt: \"0.2rem\",\n      mr: \"0.2rem\",\n      p: \"0.08rem\",\n      width: \"0.3rem\",\n      height: \"0.3rem\"\n    });\n  })));\n};\nexport var ColorList = function ColorList(props) {\n  var colorList = props.colorList,\n      handleSelect = props.handleSelect,\n      channelInfoList = props.channelInfoList,\n      curChannelId = props.curChannelId;\n  var cIndex = channelInfoList.findIndex(function (x) {\n    return x.channelId === curChannelId;\n  });\n  var usedPlainColorIds = cIndex >= 0 ? channelInfoList[cIndex].plainColorIds : [];\n  return __jsx(Box, {\n    width: \"100%\",\n    mb: \"0.4rem\"\n  }, __jsx(Flex, {\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  }, __jsx(Text, null, \"COLOUR\"), \" \", __jsx(Pager, {\n    current: \"01\"\n  })), __jsx(Flex, {\n    width: \"5rem\",\n    height: \"1.5rem\"\n  }, colorList.map(function (item) {\n    return __jsx(Box, {\n      sx: {\n        cursor: \"pointer\",\n        boxSizing: \"content-box\",\n        backgroundClip: \"content-box\",\n        border: \"1px \".concat(usedPlainColorIds.indexOf(item.colorId) >= 0 ? \"#000\" : \"#fff\", \" solid\")\n      },\n      onClick: function onClick() {\n        handleSelect(item, \"color\");\n      },\n      bg: item.value,\n      mt: \"0.2rem\",\n      mr: \"0.2rem\",\n      p: \"0.08rem\",\n      width: \"0.3rem\",\n      height: \"0.3rem\"\n    });\n  })));\n};","map":null,"metadata":{},"sourceType":"module"}