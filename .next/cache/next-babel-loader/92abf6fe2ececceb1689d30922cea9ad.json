{"ast":null,"code":"var _jsxFileName = \"/Users/paige/Desktop/workspace/mm-next/components/select-assign-tool/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { Flex, Text, Box, Button, Image } from \"rebass\";\nimport { Title } from \"./aisle-button\";\nimport { ColorList, PaintList } from \"../color-and-paint\";\nimport request from \"../../utils/request.js\";\nimport { baseUrl } from \"../../utils/helper\";\nexport default (props => {\n  const {\n    sid,\n    top,\n    col,\n    styleItem\n  } = props.currentSeleted;\n  const {\n    0: curChannelIndex,\n    1: setCurChannelIndex\n  } = useState(0);\n  const {\n    0: channelList,\n    1: setChannelList\n  } = useState(false);\n  const {\n    0: colorList,\n    1: setColorList\n  } = useState([]);\n  const {\n    0: paintList,\n    1: setPaintList\n  } = useState([]);\n  const {\n    0: sizeList,\n    1: setSizeList\n  } = useState([]);\n  useEffect(() => {\n    const getChannels = async () => {\n      const req = await request(\"channel/getList\", {}, \"get\");\n      setChannelList(req);\n      console.log(\"getChannels\", req);\n    };\n\n    getChannels();\n  }, []);\n  useEffect(() => {\n    if (props.currentSeleted) {\n      const getStyle = async () => {\n        const req = await request(\"style/detail\", {\n          _id: sid\n        }, \"get\");\n        if (!req) return;\n        console.log(\"getStyle\", req);\n        setPaintList(req.flowerColors);\n        setColorList(req.plainColors);\n        setSizeList(req.size.values);\n      };\n\n      getStyle();\n    }\n  }, [props.currentSeleted]);\n  let left = (col + 2) * 3.2;\n\n  if (left > 19.2 - 6.4) {\n    left = (col - 1) * 3.2;\n  }\n\n  const handleSelect = (item, type) => {\n    switch (type) {\n      case \"color\":\n        const cIndex = colorList.findIndex(x => x.colorId === item.colorId);\n        colorList[cIndex].selected = !colorList[cIndex].selected; // colorList.splice(index, 1, item.selected=true)\n\n        setColorList([].concat(colorList));\n        break;\n\n      case \"paint\":\n        const pIndex = paintList.findIndex(x => x.colorId === item.colorId);\n        paintList[pIndex].selected = !paintList[pIndex].selected; // colorList.splice(index, 1, item.selected=true)\n\n        setPaintList([].concat(paintList));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSelectChannelByIndex = index => {\n    setCurChannelIndex(index);\n  };\n\n  const handleCommitSelected = index => {\n    console.log({\n      _id: sid,\n      channelId: channelList[curChannelIndex]._id,\n      plainColorIds: colorList.filter(item => item.selected).map(x => x.colorId),\n      flowerColorIds: paintList.filter(item => item.selected).map(x => x.colorId)\n    });\n    const res = request(\"/style/assign\", {\n      _id: sid,\n      channelId: channelList[curChannelIndex]._id,\n      plainColorIds: colorList.filter(item => item.selected).map(x => x.colorId),\n      flowerColorIds: paintList.filter(item => item.selected).map(x => x.colorId)\n    }, \"post\");\n    console.log(res);\n  };\n\n  return __jsx(Flex, {\n    width: \"6.4rem\",\n    bg: \"#fff\",\n    flexDirection: \"column\",\n    fontSize: \"0.18rem\",\n    color: \"#000\",\n    p: \"0.5rem 0.7rem 0 0.7rem\",\n    sx: {\n      position: \"absolute\",\n      top: `${top}px`,\n      left: `${left}rem`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(Title, {\n    styleNo: styleItem.styleNo,\n    channelList: channelList,\n    onClose: props.onClose,\n    curChannelIndex: curChannelIndex,\n    onSelectChannelByIndex: handleSelectChannelByIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), __jsx(Flex, {\n    flexDirection: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(Box, {\n    width: \"100%\",\n    mb: \"0.4rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, __jsx(Text, {\n    mb: \"0.1rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"SIZE\\u300CCUP\\u300D\"), __jsx(Flex, {\n    width: \"100%\",\n    lineHeight: \"0.36rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, sizeList.map(size => __jsx(Text, {\n    mr: \"0.2rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, size.name)))), __jsx(ColorList, {\n    colorList: colorList,\n    handleSelect: handleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), __jsx(PaintList, {\n    paintList: paintList,\n    handleSelect: handleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })), __jsx(Button, {\n    variant: \"primary\",\n    height: \"0.7rem\",\n    width: \"6.4rem\",\n    bg: \"#1B1B1B\",\n    color: \"#fff\",\n    padding: \"0\",\n    ml: \"-0.7rem\",\n    sx: {\n      borderRadius: 0,\n      fontSize: \"0.14rem\",\n      cursor: \"pointer\"\n    },\n    onClick: handleCommitSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"FINISH\"));\n});","map":{"version":3,"sources":["/Users/paige/Desktop/workspace/mm-next/components/select-assign-tool/index.js"],"names":["React","useEffect","useState","Flex","Text","Box","Button","Image","Title","ColorList","PaintList","request","baseUrl","props","sid","top","col","styleItem","currentSeleted","curChannelIndex","setCurChannelIndex","channelList","setChannelList","colorList","setColorList","paintList","setPaintList","sizeList","setSizeList","getChannels","req","console","log","getStyle","_id","flowerColors","plainColors","size","values","left","handleSelect","item","type","cIndex","findIndex","x","colorId","selected","concat","pIndex","handleSelectChannelByIndex","index","handleCommitSelected","channelId","plainColorIds","filter","map","flowerColorIds","res","position","styleNo","onClose","name","borderRadius","fontSize","cursor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Flex, Text, Box, Button, Image } from \"rebass\"\nimport { Title } from \"./aisle-button\"\nimport { ColorList, PaintList } from \"../color-and-paint\"\nimport request from \"../../utils/request.js\"\nimport { baseUrl } from \"../../utils/helper\"\n\nexport default props => {\n\tconst { sid, top, col, styleItem } = props.currentSeleted\n\tconst [curChannelIndex, setCurChannelIndex] = useState(0)\n\tconst [channelList, setChannelList] = useState(false)\n\tconst [colorList, setColorList] = useState([])\n\tconst [paintList, setPaintList] = useState([])\n\tconst [sizeList, setSizeList] = useState([])\n\tuseEffect(() => {\n\t\tconst getChannels = async () => {\n\t\t\tconst req = await request(\"channel/getList\", {}, \"get\")\n\t\t\tsetChannelList(req)\n\t\t\tconsole.log(\"getChannels\", req)\n\t\t}\n\t\tgetChannels()\n\t}, [])\n\tuseEffect(() => {\n\t\tif (props.currentSeleted) {\n\t\t\tconst getStyle = async () => {\n\t\t\t\tconst req = await request(\"style/detail\", { _id: sid }, \"get\")\n\t\t\t\tif (!req) return\n\t\t\t\tconsole.log(\"getStyle\", req)\n\t\t\t\tsetPaintList(req.flowerColors)\n\t\t\t\tsetColorList(req.plainColors)\n\t\t\t\tsetSizeList(req.size.values)\n\t\t\t}\n\t\t\tgetStyle()\n\t\t}\n\t}, [props.currentSeleted])\n\tlet left = (col + 2) * 3.2\n\tif (left > 19.2 - 6.4) {\n\t\tleft = (col - 1) * 3.2\n\t}\n\n\tconst handleSelect = (item, type) => {\n\t\tswitch (type) {\n\t\t\tcase \"color\":\n\t\t\t\tconst cIndex = colorList.findIndex(x => x.colorId === item.colorId)\n\t\t\t\tcolorList[cIndex].selected = !colorList[cIndex].selected\n\t\t\t\t// colorList.splice(index, 1, item.selected=true)\n\t\t\t\tsetColorList([].concat(colorList))\n\t\t\t\tbreak\n\t\t\tcase \"paint\":\n\t\t\t\tconst pIndex = paintList.findIndex(x => x.colorId === item.colorId)\n\t\t\t\tpaintList[pIndex].selected = !paintList[pIndex].selected\n\t\t\t\t// colorList.splice(index, 1, item.selected=true)\n\t\t\t\tsetPaintList([].concat(paintList))\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\tconst handleSelectChannelByIndex = index => {\n\t\tsetCurChannelIndex(index)\n\t}\n\tconst handleCommitSelected = index => {\n\t\tconsole.log({\n\t\t\t_id: sid,\n\t\t\tchannelId: channelList[curChannelIndex]._id,\n\t\t\tplainColorIds: colorList\n\t\t\t\t.filter(item => item.selected)\n\t\t\t\t.map(x => x.colorId),\n\t\t\tflowerColorIds: paintList\n\t\t\t\t.filter(item => item.selected)\n\t\t\t\t.map(x => x.colorId)\n\t\t})\n\t\tconst res = request(\n\t\t\t\"/style/assign\",\n\t\t\t{\n\t\t\t\t_id: sid,\n\t\t\t\tchannelId: channelList[curChannelIndex]._id,\n\t\t\t\tplainColorIds: colorList\n\t\t\t\t\t.filter(item => item.selected)\n\t\t\t\t\t.map(x => x.colorId),\n\t\t\t\tflowerColorIds: paintList\n\t\t\t\t\t.filter(item => item.selected)\n\t\t\t\t\t.map(x => x.colorId)\n\t\t\t},\n\t\t\t\"post\"\n\t\t)\n\t\tconsole.log(res)\n\t}\n\treturn (\n\t\t<Flex\n\t\t\twidth=\"6.4rem\"\n\t\t\tbg=\"#fff\"\n\t\t\tflexDirection=\"column\"\n\t\t\tfontSize=\"0.18rem\"\n\t\t\tcolor=\"#000\"\n\t\t\tp=\"0.5rem 0.7rem 0 0.7rem\"\n\t\t\tsx={{\n\t\t\t\tposition: \"absolute\",\n\t\t\t\ttop: `${top}px`,\n\t\t\t\tleft: `${left}rem`\n\t\t\t}}\n\t\t>\n\t\t\t<Title\n\t\t\t\tstyleNo={styleItem.styleNo}\n\t\t\t\tchannelList={channelList}\n\t\t\t\tonClose={props.onClose}\n\t\t\t\tcurChannelIndex={curChannelIndex}\n\t\t\t\tonSelectChannelByIndex={handleSelectChannelByIndex}\n\t\t\t/>\n\t\t\t<Flex flexDirection=\"column\">\n\t\t\t\t<Box width=\"100%\" mb=\"0.4rem\">\n\t\t\t\t\t<Text mb=\"0.1rem\">SIZE「CUP」</Text>\n\t\t\t\t\t<Flex width=\"100%\" lineHeight=\"0.36rem\">\n\t\t\t\t\t\t{sizeList.map(size => (\n\t\t\t\t\t\t\t<Text mr=\"0.2rem\">{size.name}</Text>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Flex>\n\t\t\t\t</Box>\n\t\t\t\t<ColorList colorList={colorList} handleSelect={handleSelect} />\n\t\t\t\t<PaintList paintList={paintList} handleSelect={handleSelect} />\n\t\t\t</Flex>\n\t\t\t<Button\n\t\t\t\tvariant=\"primary\"\n\t\t\t\theight=\"0.7rem\"\n\t\t\t\twidth=\"6.4rem\"\n\t\t\t\tbg=\"#1B1B1B\"\n\t\t\t\tcolor=\"#fff\"\n\t\t\t\tpadding=\"0\"\n\t\t\t\tml=\"-0.7rem\"\n\t\t\t\tsx={{\n\t\t\t\t\tborderRadius: 0,\n\t\t\t\t\tfontSize: \"0.14rem\",\n\t\t\t\t\tcursor: \"pointer\"\n\t\t\t\t}}\n\t\t\t\tonClick={handleCommitSelected}\n\t\t\t>\n\t\t\t\tFINISH\n\t\t\t</Button>\n\t\t</Flex>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}