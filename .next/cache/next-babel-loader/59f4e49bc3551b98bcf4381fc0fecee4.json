{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport axios from \"axios\";\nimport { baseUrl } from \"./helper\";\nvar instance = axios.create({\n  // baseURL: \"http://8.209.64.159:3006/api/\",\n  baseURL: baseUrl + \"api/\",\n  // withCredentials: true,\n  timeout: 10000,\n  headers: {\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n});\ninstance.interceptors.request.use(function (config) {\n  /**\n   * 请求时从本地读取token，并设置headers\n   */\n  var token = localStorage.token;\n  config.headers.Authorization = \"Bearer \".concat(token);\n\n  if (config.method === \"post\") {\n    config.headers[\"content-type\"] = \"application/json\";\n  }\n\n  console.log(config);\n  return config;\n}, function (error) {\n  return _Promise.reject(error);\n});\ninstance.interceptors.response.use(function (response) {\n  console.log(\"response\", response);\n\n  if (response.config.url.includes(\"user/login\")) {\n    if (response.data && response.data.data) {\n      localStorage.token = response.data.data.token;\n    }\n  }\n\n  if (!response.data.success) {//请求出错\n  }\n\n  return response.data;\n}, function (error) {\n  var response = error.response || {};\n  console.log(\"错误： \", response);\n  handleErrorStatus(response.status, response.message);\n  return _Promise.reject(response);\n}); // 错误提示\n\nvar handleErrorStatus = function handleErrorStatus(status, message) {\n  console.log(status, message);\n};\n\nexport default (function () {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var method = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"get\";\n  var origin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var api = arguments.length > 4 ? arguments[4] : undefined;\n  // var postData = new FormData()\n  // for (var prop in data) {\n  // \tpostData.append(prop, data[prop])\n  // }\n  var options = method.toLowerCase() === \"get\" ? {\n    params: data\n  } : data;\n  return instance[method](url, options).then(function (res) {\n    return res.data;\n  })[\"catch\"](function (err) {\n    // handleErrorStatus(code, err.message)\n    console.log(\"err: \", err);\n    return false;\n  });\n});","map":null,"metadata":{},"sourceType":"module"}