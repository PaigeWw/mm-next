{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { Flex, Text, Box, Button, Image } from \"rebass\";\nimport { baseUrl } from \"../utils/helper\";\n\nvar ImageBox = function ImageBox(props) {\n  var item = props.item,\n      id = props.id,\n      kind = props.kind,\n      row = props.row,\n      col = props.col;\n  return __jsx(Box, {\n    sx: {\n      \"& :hover\": {\n        background: \"#DCD0DC\"\n      }\n    },\n    onClick: function onClick(e) {\n      // console.dir(e.target.offsetTop)\n      props.onSelect(id, kind, e.target.offsetTop, col, item);\n    }\n  }, __jsx(Image, {\n    bg: props.selected ? \"#FF8E6C  !important\" : \"none\",\n    src: baseUrl + props.src,\n    p: \"0.68rem\",\n    sx: {\n      display: \"block\",\n      width: \"1.88rem\",\n      boxSizing: \"content-box\"\n    }\n  }));\n};\n\nexport default (function (props) {\n  var _useState = useState(false),\n      showScroll = _useState[0],\n      setShowScroll = _useState[1]; // console.log(props.selectStyles)\n\n\n  return __jsx(Flex, {\n    width: \"100%\",\n    bg: \"#DCDCDC\",\n    fontSize: \"0.23rem\",\n    color: \"#fff\",\n    sx: {\n      \"&:hover\": {\n        \".innerChild\": {\n          visibility: \"visible\"\n        }\n      }\n    }\n  }, __jsx(Flex, {\n    bg: \"#000\",\n    width: \"3.22rem\",\n    justifyContent: \"space-between\"\n  }, __jsx(Flex, {\n    flexGrow: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }, props.kind), __jsx(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"0.75rem\",\n    bg: \"#313131\",\n    className: \"innerChild\",\n    sx: {\n      visibility: \"hidden\",\n      cursor: \"pointer\" // visibility: showScroll ? \"visible\" : \"hidden\"\n\n    }\n  }, __jsx(Image, {\n    src: \"/3/left.png\",\n    width: \"0.12rem\",\n    height: \"0.21rem\"\n  }))), __jsx(Flex, {\n    flex: 1\n  }, props.styles.map(function (item, index) {\n    return __jsx(ImageBox, {\n      item: item,\n      kind: props.kind,\n      col: index,\n      row: props.row,\n      onSelect: props.onSelect,\n      selected: _Array$isArray(props.selectStyles) && props.selectStyles.indexOf(item._id) > -1 ? true : false,\n      src: item.imgUrl,\n      id: item._id\n    });\n  })), __jsx(Flex, {\n    bg: \"#000\",\n    width: \"3.22rem\",\n    justifyContent: \"space-between\"\n  }, __jsx(Flex, {\n    className: \"innerChild\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"0.75rem\",\n    bg: \"#313131\",\n    sx: {\n      visibility: showScroll ? \"visible\" : \"hidden\"\n    }\n  }, __jsx(Image, {\n    src: \"/3/right.png\",\n    width: \"0.12rem\",\n    height: \"0.21rem\"\n  }))));\n});","map":null,"metadata":{},"sourceType":"module"}