{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Flex, Text, Box, Button, Row, Column } from \"rebass\";\nimport Table, { TableLine, ProductInfo } from \"./base-table\";\nimport EditBox from \"../made-edit-box\";\nimport ShowStyle from \"../show-style\";\nimport request from \"../../utils/request\";\nexport default (props => {\n  const {\n    0: showEditBox,\n    1: setShowEditBox\n  } = useState(false);\n  const {\n    0: editIndex,\n    1: setEditIndex\n  } = useState(0);\n  const mode = \"POSITIVE\";\n  const {\n    0: collectList,\n    1: setCollectList\n  } = useState([]);\n  const {\n    0: collectDetailsList,\n    1: setCollectDetailsList\n  } = useState([]);\n  const {\n    0: selectList,\n    1: setSelectList\n  } = useState([]);\n\n  const getCollectList = async () => {\n    const res = await request(\"/user/getFavoriteList\"); // console.log(\"----res----\", res)\n\n    if (!res) return;\n    const data = res.map(item => {\n      let prodInfo = [];\n      let price = [];\n      let style = [];\n      let colorInfo = [];\n      let date = [];\n      let details = [];\n      let threeViews = item.styleAndColor.map(x => {\n        details.push(x.style);\n        prodInfo.push({\n          styleNo: x.style.styleNo,\n          id: x.style._id\n        });\n        price.push(x.style.price);\n        date.push(x.style.updateTime);\n        colorInfo.push({\n          colorId: x.color._id,\n          imgUrl: x.front\n        }); // let positive = x.\n\n        return {\n          POSITIVE: x.front\n        }; // style.push(item.styleNo)\n      });\n      collectDetailsList.push(details);\n      setCollectDetailsList([].concat(collectDetailsList));\n      return {\n        id: item._id,\n        colorInfo,\n        threeViews,\n        prodInfo,\n        price,\n        style,\n        date\n      };\n    });\n    setCollectList(data);\n  };\n\n  useEffect(() => {\n    getCollectList();\n  }, []);\n\n  const handleSelect = (index, item) => {\n    const pos = selectList.findIndex(x => x.index === index);\n\n    if (pos < 0) {\n      selectList.push(_objectSpread({\n        index\n      }, item, {\n        details: collectDetailsList[index]\n      }));\n    } else {\n      selectList.splice(pos, 1);\n    }\n\n    setSelectList([].concat(selectList));\n  };\n\n  const handleDel = async (index, item) => {\n    console.log(item);\n    const res = await request(\"/user/deleteFavorite\", {\n      _id: item.id\n    }, \"post\"); // console.log(\"res\", res)\n\n    if (res) {\n      console.log(\"删除他，嘿嘿嘿\");\n      collectList.splice(index, 1);\n      setCollectList([].concat(collectList));\n    }\n  };\n\n  const handleConfirmMade = async (colorIds, imgUrls) => {\n    // const res = await request(\"/user/updateFavorite\", {  }, \"post\")\n    if (!colorIds[0]) return;\n    let params = [{\n      styleId: collectList[editIndex].prodInfo[0].id,\n      colorId: colorIds[0]\n    }];\n\n    if (collectList[editIndex].length > 1) {\n      // if (! > 2) return\n      params.push({\n        styleId: collectList[editIndex].prodInfo[1].id,\n        colorId: colorIds[1]\n      });\n    }\n\n    const res = await request(\"/user/updateFavorite\", {\n      _id: collectList[editIndex].id,\n      styleAndColor: params\n    }, \"post\"); // setStyleDetails([].concat(styleDetails))\n\n    if (res) {\n      getCollectList();\n    }\n  };\n\n  return collectList.length > 0 ? __jsx(Flex, {\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    sx: {\n      cursor: \"pointer\",\n      height: \"100%\",\n      background: \"#FFF0E5\"\n    }\n  }, __jsx(Table, {\n    titles: [{\n      name: \"00\",\n      width: \"2/22\",\n      isHide: true\n    }, {\n      name: \"PICTRUE\",\n      width: \"2/22\"\n    }, {\n      name: \"PRODUCT INFOMATION\",\n      width: \"4/22\"\n    }, {\n      name: \"PRICE\",\n      width: \"1/22\"\n    }, {\n      name: \"DATE\",\n      width: \"2/22\"\n    }, {\n      name: \"STYLE\",\n      width: \"1/22\"\n    }, {\n      name: \"EDIT\",\n      width: \"5/22\"\n    }]\n  }, collectList.map((collect, index) => __jsx(TableLine, {\n    isSelect: selectList.findIndex(x => index === x.index) >= 0,\n    haveSelect: true,\n    onSelect: () => {\n      handleSelect(index, collect);\n    },\n    haveDel: true,\n    onDel: () => {\n      handleDel(index, collect);\n    },\n    haveEdit: true,\n    onEdit: () => {\n      setEditIndex(index);\n      setShowEditBox(true);\n    }\n  }, __jsx(Text, {\n    style: {\n      position: \"absolute\"\n    }\n  }, index + 1), __jsx(ShowStyle // width=\"2rem\"\n  , {\n    key: collect.id,\n    imgWidth: \"0.95rem\",\n    mode: mode,\n    threeViews: collect.threeViews,\n    border: \"none\",\n    hideInfo: true\n  }), __jsx(Flex, {\n    justifyContent: \"center\"\n  }, __jsx(Box, {\n    margin: \"8px 0\"\n  }, collect.prodInfo.map(prodInfo => __jsx(ProductInfo, {\n    styleNum: prodInfo.styleNo,\n    made: \"2110 YE GREEN/2001 YE GREEN\"\n  })))), __jsx(Flex, {\n    flexDirection: \"column\"\n  }, collect.price.map(price => __jsx(Text, {\n    p: \"4px 0\"\n  }, price))), __jsx(Flex, {\n    flexDirection: \"column\"\n  }, collect.date.map(date => __jsx(Text, {\n    p: \"4px 0\"\n  }, date))), __jsx(Flex, {\n    flexDirection: \"column\"\n  }, __jsx(Text, null, \"TOPS\"), __jsx(Text, null, \"BOTTOMS\"))))), __jsx(Button, {\n    variant: \"primary\",\n    height: \"1.13rem\",\n    width: \"19.2rem\",\n    bg: \"#000\",\n    color: \"#fff\",\n    padding: \"0\",\n    sx: {\n      borderRadius: 0,\n      fontSize: \"0.27rem\",\n      cursor: \"pointer\"\n    },\n    onClick: () => {\n      props.nextStep(selectList);\n    }\n  }, \"GENERATE ORDERS\"), showEditBox ? __jsx(EditBox, {\n    styleDetails: collectDetailsList[editIndex],\n    curStyle: collectList[editIndex].colorInfo,\n    confirmMade: handleConfirmMade,\n    onClose: () => {\n      setShowEditBox(false);\n    }\n  }) : null) : null;\n});","map":null,"metadata":{},"sourceType":"module"}