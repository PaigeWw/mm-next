{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport axios from \"axios\";\nconst instance = axios.create({\n  // baseURL: \"http://8.209.64.159:3006/api/\",\n  baseURL: \"http://192.168.1.3:3006/api/\",\n  // withCredentials: true,\n  timeout: 10000,\n  headers: {\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n});\ninstance.interceptors.request.use(config => {\n  /**\n   * 请求时从本地读取token，并设置headers\n   */\n  const token = localStorage.token;\n  config.headers.Authorization = `Bearer ${token}`;\n\n  if (config.method === \"post\") {\n    config.headers[\"content-type\"] = \"application/json\";\n  }\n\n  console.log(config);\n  return config;\n}, error => _Promise.reject(error));\ninstance.interceptors.response.use(response => {\n  console.log(\"response\", response);\n\n  if (response.config.url.includes(\"user/login\")) {\n    if (response.data && response.data.data) {\n      localStorage.token = response.data.data.token;\n    }\n  }\n\n  if (!response.data.success) {//请求出错\n  }\n\n  return response.data;\n}, error => {\n  const response = error.response || {};\n  console.log(\"错误： \", response);\n  handleErrorStatus(response.status, response.message);\n  return _Promise.reject(response);\n}); // 错误提示\n\nconst handleErrorStatus = (status, message) => {\n  console.log(status, message);\n};\n\nexport default ((url = \"\", data = {}, method = \"get\", origin = false, api) => {\n  // var postData = new FormData()\n  // for (var prop in data) {\n  // \tpostData.append(prop, data[prop])\n  // }\n  const options = method.toLowerCase() === \"get\" ? {\n    params: data\n  } : data;\n  return instance[method](url, options).then(res => {\n    return res.data;\n  }).catch(err => {\n    // handleErrorStatus(code, err.message)\n    console.log(\"err: \", err);\n    return false;\n  });\n});","map":{"version":3,"sources":["/Users/paige/Desktop/workspace/mm-next/utils/request.js"],"names":["axios","instance","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","Authorization","method","console","log","error","reject","response","url","includes","data","success","handleErrorStatus","status","message","origin","api","options","toLowerCase","params","then","res","catch","err"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC7B;AACAC,EAAAA,OAAO,EAAE,8BAFoB;AAG7B;AACAC,EAAAA,OAAO,EAAE,KAJoB;AAK7BC,EAAAA,OAAO,EAAE;AACR,oBAAgB;AADR;AALoB,CAAb,CAAjB;AAUAJ,QAAQ,CAACK,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACCC,MAAM,IAAI;AACT;;;AAGA,QAAMC,KAAK,GAAGC,YAAY,CAACD,KAA3B;AACAD,EAAAA,MAAM,CAACJ,OAAP,CAAeO,aAAf,GAAgC,UAASF,KAAM,EAA/C;;AACA,MAAID,MAAM,CAACI,MAAP,KAAkB,MAAtB,EAA8B;AAC7BJ,IAAAA,MAAM,CAACJ,OAAP,CAAe,cAAf,IAAiC,kBAAjC;AACA;;AACDS,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA,SAAOA,MAAP;AACA,CAZF,EAaCO,KAAK,IAAI,SAAQC,MAAR,CAAeD,KAAf,CAbV;AAgBAf,QAAQ,CAACK,YAAT,CAAsBY,QAAtB,CAA+BV,GAA/B,CACCU,QAAQ,IAAI;AACXJ,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBG,QAAxB;;AACA,MAAIA,QAAQ,CAACT,MAAT,CAAgBU,GAAhB,CAAoBC,QAApB,CAA6B,YAA7B,CAAJ,EAAgD;AAC/C,QAAIF,QAAQ,CAACG,IAAT,IAAiBH,QAAQ,CAACG,IAAT,CAAcA,IAAnC,EAAyC;AACxCV,MAAAA,YAAY,CAACD,KAAb,GAAqBQ,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBX,KAAxC;AACA;AACD;;AACD,MAAI,CAACQ,QAAQ,CAACG,IAAT,CAAcC,OAAnB,EAA4B,CAC3B;AACA;;AACD,SAAOJ,QAAQ,CAACG,IAAhB;AACA,CAZF,EAaCL,KAAK,IAAI;AACR,QAAME,QAAQ,GAAGF,KAAK,CAACE,QAAN,IAAkB,EAAnC;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBG,QAApB;AACAK,EAAAA,iBAAiB,CAACL,QAAQ,CAACM,MAAV,EAAkBN,QAAQ,CAACO,OAA3B,CAAjB;AACA,SAAO,SAAQR,MAAR,CAAeC,QAAf,CAAP;AACA,CAlBF,E,CAqBA;;AACA,MAAMK,iBAAiB,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB;AAC9CX,EAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ,EAAoBC,OAApB;AACA,CAFD;;AAIA,gBAAe,CAACN,GAAG,GAAG,EAAP,EAAWE,IAAI,GAAG,EAAlB,EAAsBR,MAAM,GAAG,KAA/B,EAAsCa,MAAM,GAAG,KAA/C,EAAsDC,GAAtD,KAA8D;AAC5E;AACA;AACA;AACA;AACA,QAAMC,OAAO,GAAGf,MAAM,CAACgB,WAAP,OAAyB,KAAzB,GAAiC;AAAEC,IAAAA,MAAM,EAAET;AAAV,GAAjC,GAAoDA,IAApE;AAEA,SAAOpB,QAAQ,CAACY,MAAD,CAAR,CAAiBM,GAAjB,EAAsBS,OAAtB,EACLG,IADK,CACAC,GAAG,IAAI;AACZ,WAAOA,GAAG,CAACX,IAAX;AACA,GAHK,EAILY,KAJK,CAICC,GAAG,IAAI;AACb;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBmB,GAArB;AACA,WAAO,KAAP;AACA,GARK,CAAP;AASA,CAhBD","sourcesContent":["import axios from \"axios\"\n\nconst instance = axios.create({\n\t// baseURL: \"http://8.209.64.159:3006/api/\",\n\tbaseURL: \"http://192.168.1.3:3006/api/\",\n\t// withCredentials: true,\n\ttimeout: 10000,\n\theaders: {\n\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t}\n})\n\ninstance.interceptors.request.use(\n\tconfig => {\n\t\t/**\n\t\t * 请求时从本地读取token，并设置headers\n\t\t */\n\t\tconst token = localStorage.token\n\t\tconfig.headers.Authorization = `Bearer ${token}`\n\t\tif (config.method === \"post\") {\n\t\t\tconfig.headers[\"content-type\"] = \"application/json\"\n\t\t}\n\t\tconsole.log(config)\n\t\treturn config\n\t},\n\terror => Promise.reject(error)\n)\n\ninstance.interceptors.response.use(\n\tresponse => {\n\t\tconsole.log(\"response\", response)\n\t\tif (response.config.url.includes(\"user/login\")) {\n\t\t\tif (response.data && response.data.data) {\n\t\t\t\tlocalStorage.token = response.data.data.token\n\t\t\t}\n\t\t}\n\t\tif (!response.data.success) {\n\t\t\t//请求出错\n\t\t}\n\t\treturn response.data\n\t},\n\terror => {\n\t\tconst response = error.response || {}\n\t\tconsole.log(\"错误： \", response)\n\t\thandleErrorStatus(response.status, response.message)\n\t\treturn Promise.reject(response)\n\t}\n)\n\n// 错误提示\nconst handleErrorStatus = (status, message) => {\n\tconsole.log(status, message)\n}\n\nexport default (url = \"\", data = {}, method = \"get\", origin = false, api) => {\n\t// var postData = new FormData()\n\t// for (var prop in data) {\n\t// \tpostData.append(prop, data[prop])\n\t// }\n\tconst options = method.toLowerCase() === \"get\" ? { params: data } : data\n\n\treturn instance[method](url, options)\n\t\t.then(res => {\n\t\t\treturn res.data\n\t\t})\n\t\t.catch(err => {\n\t\t\t// handleErrorStatus(code, err.message)\n\t\t\tconsole.log(\"err: \", err)\n\t\t\treturn false\n\t\t})\n}\n"]},"metadata":{},"sourceType":"module"}