{"ast":null,"code":"var _jsxFileName = \"/Users/paige/Desktop/workspace/mm-next/pages/assign.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { Flex, Text, Box, Button, Image, Select } from \"rebass\";\nimport useUserInfo from \"../hooks/getUserInfo\";\nimport Head from \"../components/nav\";\nimport AssginItem from \"../components/assign-item\";\nimport request from \"../utils/request.js\"; // 'channel/assignGoods'  channelId goodsId\n// 'channel/getAssignGoods'  channelId goodsId\n\nexport default (() => {\n  const info = useUserInfo();\n  const {\n    0: goodsList,\n    1: setGoodsList\n  } = useState([]);\n  const {\n    0: channelList,\n    1: setChannelList\n  } = useState([]);\n  const {\n    0: assignGoodsList,\n    1: setAssignGoodsList\n  } = useState([]);\n  const {\n    0: currentChannel,\n    1: setCurrentChannel\n  } = useState({});\n  const {\n    0: showChannels,\n    1: setShowChannels\n  } = useState(false);\n  useEffect(() => {\n    const getGoodsList = async () => {\n      const req = await request(\"goods/getList\");\n      setGoodsList(req);\n      console.log(req);\n    };\n\n    getGoodsList();\n\n    const getChannels = async () => {\n      const req = await request(\"user/getUserChannels\");\n      setChannelList(req.channels);\n\n      if (req.channels.length > 0) {\n        setCurrentChannel(req.channels[0]);\n      }\n    };\n\n    getChannels();\n  }, []);\n  useEffect(() => {\n    const getAssignGoodsList = async () => {\n      const req = await request(\"channel/getAssignGoods\", {\n        channelId: currentChannel._id\n      });\n\n      if (req) {\n        setAssignGoodsList(req);\n      }\n\n      console.log(req);\n    };\n\n    getAssignGoodsList();\n  }, [currentChannel]);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(Flex, {\n    height: \"100vh\" // justifyContent=\"space-between\"\n    ,\n    flexDirection: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), __jsx(Box, {\n    width: [1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, channelList.length > 0 ? __jsx(Flex, {\n    bg: \"#000000\",\n    width: [1],\n    pl: \"1.1rem\",\n    lineHeight: \"1.14rem\",\n    sx: {\n      height: \"1.14rem\",\n      position: \"relative\",\n      cursor: \"pointer\"\n    },\n    color: \"#fff\",\n    onClick: () => {\n      setShowChannels(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, `${currentChannel.code}(${currentChannel.name})`, showChannels ? __jsx(Box, {\n    sx: {\n      position: \"absolute\",\n      border: \"1px solid #000\",\n      top: \"calc(0.507rem + 20px)\"\n    },\n    color: \"#000\",\n    bg: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, channelList.map(channel => __jsx(Text, {\n    width: \"160px\",\n    lineHeight: \"32px\",\n    pl: \"12px\",\n    sx: {\n      \"&:hover\": {\n        background: \"#cccccc\",\n        color: \"#fff\"\n      }\n    },\n    onClick: e => {\n      e.nativeEvent.preventDefault();\n      e.nativeEvent.stopPropagation();\n      setCurrentChannel(channel);\n      setShowChannels(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, `${channel.code}(${channel.name})`))) : null) : null, __jsx(AssginItem, {\n    goodsList: goodsList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }))));\n});","map":{"version":3,"sources":["/Users/paige/Desktop/workspace/mm-next/pages/assign.js"],"names":["React","useEffect","useState","Flex","Text","Box","Button","Image","Select","useUserInfo","Head","AssginItem","request","info","goodsList","setGoodsList","channelList","setChannelList","assignGoodsList","setAssignGoodsList","currentChannel","setCurrentChannel","showChannels","setShowChannels","getGoodsList","req","console","log","getChannels","channels","length","getAssignGoodsList","channelId","_id","height","position","cursor","code","name","border","top","map","channel","background","color","e","nativeEvent","preventDefault","stopPropagation"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Flex, Text, Box, Button, Image, Select } from \"rebass\"\nimport useUserInfo from \"../hooks/getUserInfo\"\nimport Head from \"../components/nav\"\nimport AssginItem from \"../components/assign-item\"\n\nimport request from \"../utils/request.js\"\n\n// 'channel/assignGoods'  channelId goodsId\n// 'channel/getAssignGoods'  channelId goodsId\nexport default () => {\n\tconst info = useUserInfo()\n\tconst [goodsList, setGoodsList] = useState([])\n\tconst [channelList, setChannelList] = useState([])\n\tconst [assignGoodsList, setAssignGoodsList] = useState([])\n\tconst [currentChannel, setCurrentChannel] = useState({})\n\tconst [showChannels, setShowChannels] = useState(false)\n\tuseEffect(() => {\n\t\tconst getGoodsList = async () => {\n\t\t\tconst req = await request(\"goods/getList\")\n\t\t\tsetGoodsList(req)\n\t\t\tconsole.log(req)\n\t\t}\n\t\tgetGoodsList()\n\t\tconst getChannels = async () => {\n\t\t\tconst req = await request(\"user/getUserChannels\")\n\t\t\tsetChannelList(req.channels)\n\t\t\tif (req.channels.length > 0) {\n\t\t\t\tsetCurrentChannel(req.channels[0])\n\t\t\t}\n\t\t}\n\t\tgetChannels()\n\t}, [])\n\tuseEffect(() => {\n\t\tconst getAssignGoodsList = async () => {\n\t\t\tconst req = await request(\"channel/getAssignGoods\", {\n\t\t\t\tchannelId: currentChannel._id\n\t\t\t})\n\t\t\tif (req) {\n\t\t\t\tsetAssignGoodsList(req)\n\t\t\t}\n\n\t\t\tconsole.log(req)\n\t\t}\n\t\tgetAssignGoodsList()\n\t}, [currentChannel])\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Flex\n\t\t\t\theight=\"100vh\"\n\t\t\t\t// justifyContent=\"space-between\"\n\t\t\t\tflexDirection=\"column\"\n\t\t\t>\n\t\t\t\t<Head></Head>\n\t\t\t\t<Box width={[1]}>\n\t\t\t\t\t{channelList.length > 0 ? (\n\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\tbg=\"#000000\"\n\t\t\t\t\t\t\twidth={[1]}\n\t\t\t\t\t\t\tpl=\"1.1rem\"\n\t\t\t\t\t\t\tlineHeight=\"1.14rem\"\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\theight: \"1.14rem\",\n\t\t\t\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\t\t\t\tcursor: \"pointer\"\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tcolor=\"#fff\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetShowChannels(true)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{/* {console.log(channelList)} */}\n\t\t\t\t\t\t\t{`${currentChannel.code}(${currentChannel.name})`}\n\t\t\t\t\t\t\t{showChannels ? (\n\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\t\t\tborder: \"1px solid #000\",\n\t\t\t\t\t\t\t\t\t\ttop: \"calc(0.507rem + 20px)\"\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tcolor=\"#000\"\n\t\t\t\t\t\t\t\t\tbg=\"#fff\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{channelList.map(channel => (\n\t\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\t\twidth=\"160px\"\n\t\t\t\t\t\t\t\t\t\t\tlineHeight=\"32px\"\n\t\t\t\t\t\t\t\t\t\t\tpl=\"12px\"\n\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\tbackground: \"#cccccc\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#fff\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\t\t\t\t\t\te.nativeEvent.preventDefault()\n\t\t\t\t\t\t\t\t\t\t\t\te.nativeEvent.stopPropagation()\n\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentChannel(channel)\n\t\t\t\t\t\t\t\t\t\t\t\tsetShowChannels(false)\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>{`${channel.code}(${channel.name})`}</Text>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t) : null}\n\n\t\t\t\t\t<AssginItem goodsList={goodsList}></AssginItem>\n\t\t\t\t</Box>\n\t\t\t</Flex>\n\t\t</React.Fragment>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}