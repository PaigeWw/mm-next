{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/paige/Desktop/workspace/mm-next/components/select-assign-tool/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport { Flex, Text, Box, Button, Image } from \"rebass\";\nimport { Title } from \"./aisle-button\";\nimport { ColorList, PaintList } from \"../color-and-paint\";\nimport request from \"../../utils/request.js\";\nimport { baseUrl } from \"../../utils/helper\";\nexport default (function (props) {\n  var _props$currentSeleted = props.currentSeleted,\n      sid = _props$currentSeleted.sid,\n      top = _props$currentSeleted.top,\n      col = _props$currentSeleted.col,\n      styleItem = _props$currentSeleted.styleItem;\n  var channelInfoList = [];\n\n  var _useState = useState({}),\n      curChannel = _useState[0],\n      setCurChannel = _useState[1];\n\n  var _useState2 = useState(false),\n      channelList = _useState2[0],\n      setChannelList = _useState2[1];\n\n  var _useState3 = useState([]),\n      colorList = _useState3[0],\n      setColorList = _useState3[1];\n\n  var _useState4 = useState([]),\n      paintList = _useState4[0],\n      setPaintList = _useState4[1];\n\n  var _useState5 = useState([]),\n      sizeList = _useState5[0],\n      setSizeList = _useState5[1];\n\n  var _useState6 = useState({\n    plainColors: [],\n    flowerColors: []\n  }),\n      curChannelAssign = _useState6[0],\n      setCurChannelAssign = _useState6[1];\n\n  useEffect(function () {\n    var getChannels =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var req;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return request(\"channel/getList\", {}, \"get\");\n\n              case 2:\n                req = _context.sent;\n                setChannelList(req.docs);\n\n                if (req.docs.length > 0) {\n                  setCurChannel(req.docs[0]); // getChannelsAssign(sid, req.docs[0]._id)\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getChannels() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    var getColorList =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var req;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return request(\"color/getList\", {\n                  type: 0,\n                  page: 1,\n                  limit: 14\n                }, \"get\");\n\n              case 2:\n                req = _context2.sent;\n                setColorList(req.docs); // console.log(\"getChannels\", req)\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function getColorList() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    var getPaintList =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var req;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return request(\"color/getList\", {\n                  type: 1,\n                  page: 1,\n                  limit: 14\n                }, \"get\");\n\n              case 2:\n                req = _context3.sent;\n                setPaintList(req.docs); // console.log(\"getChannels\", req)\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function getPaintList() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    getChannels();\n    getColorList();\n    getPaintList();\n  }, []);\n  useEffect(function () {\n    if (props.currentSeleted) {\n      var getStyle =\n      /*#__PURE__*/\n      function () {\n        var _ref4 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee4() {\n          var req;\n          return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return request(\"style/detail\", {\n                    _id: sid\n                  }, \"get\");\n\n                case 2:\n                  req = _context4.sent;\n\n                  if (req) {\n                    _context4.next = 5;\n                    break;\n                  }\n\n                  return _context4.abrupt(\"return\");\n\n                case 5:\n                  // setCurChannelIndex(0)\n                  setSizeList(req.size.values);\n\n                case 6:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function getStyle() {\n          return _ref4.apply(this, arguments);\n        };\n      }();\n\n      getStyle();\n    }\n  }, [props.currentSeleted]);\n  useEffect(function () {\n    if (!curChannel._id) return;\n    console.log(\"curChannel->\", curChannel.code);\n\n    var getChannelsAssign =\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(styleId, channelId) {\n        var req;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return request(\"channel/getAssign\", {\n                  styleId: styleId,\n                  channelId: channelId\n                }, \"get\");\n\n              case 2:\n                req = _context5.sent;\n\n                if (!req) {\n                  setCurChannelAssign({\n                    plainColors: [],\n                    flowerColors: []\n                  });\n                } else {\n                  setCurChannelAssign(req);\n                }\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function getChannelsAssign(_x, _x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    getChannelsAssign(sid, curChannel._id);\n  }, [curChannel]);\n  var left = (col + 2) * 3.2;\n\n  if (left > 19.2 - 6.4) {\n    left = (col - 1) * 3.2;\n  }\n\n  var handleSelect = function handleSelect(item, type) {\n    switch (type) {\n      case \"color\":\n        var cIndex = curChannelAssign.plainColors.findIndex(function (x) {\n          return x._id === item._id;\n        });\n        console.log(\"cIndex\", cIndex);\n\n        if (cIndex < 0) {\n          curChannelAssign.plainColors.push(item);\n        } else {\n          curChannelAssign.plainColors.splice(cIndex, 1);\n        }\n\n        var res = request(\"/channel/assign\", {\n          styleId: sid,\n          channelId: curChannel._id,\n          plainColor: item._id\n        }, \"post\");\n        setCurChannelAssign(_objectSpread({}, curChannelAssign, {\n          plainColors: [].concat(curChannelAssign.plainColors)\n        }));\n        break;\n\n      case \"paint\":\n        var pIndex = curChannelAssign.flowerColors.findIndex(function (x) {\n          return x._id === item._id;\n        });\n        console.log(\"cIndex\", cIndex);\n\n        if (pIndex < 0) {\n          curChannelAssign.flowerColors.push(item);\n        } else {\n          curChannelAssign.flowerColors.splice(pIndex, 1);\n        }\n\n        var res1 = request(\"/channel/assign\", {\n          styleId: sid,\n          channelId: curChannel._id,\n          flowerColor: item._id\n        }, \"post\");\n        setCurChannelAssign(_objectSpread({}, curChannelAssign, {\n          flowerColors: [].concat(curChannelAssign.flowerColors)\n        }));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  var handleSelectChannel = function handleSelectChannel(channel) {\n    setCurChannel(channel);\n  }; // const handleCommitSelected = index => {}\n\n\n  if (!channelList) return null;\n  console.log(curChannel);\n  return __jsx(Flex, {\n    width: \"6.4rem\",\n    bg: \"#fff\",\n    flexDirection: \"column\",\n    fontSize: \"0.18rem\",\n    color: \"#000\",\n    p: \"0.5rem 0.7rem 0 0.7rem\",\n    sx: {\n      position: \"absolute\",\n      top: \"\".concat(top, \"px\"),\n      left: \"\".concat(left, \"rem\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, __jsx(Title, {\n    styleNo: styleItem.styleNo,\n    channelList: channelList // channelInfoList={curChannelAssign.plainColors}\n    ,\n    onClose: props.onClose,\n    curChannel: curChannel,\n    onSelectChannel: handleSelectChannel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), __jsx(Flex, {\n    flexDirection: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, __jsx(Box, {\n    width: \"100%\",\n    mb: \"0.4rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, __jsx(Text, {\n    mb: \"0.1rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"SIZE\\u300CCUP\\u300D\"), __jsx(Flex, {\n    width: \"100%\",\n    lineHeight: \"0.36rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, sizeList.map(function (size) {\n    return __jsx(Text, {\n      mr: \"0.2rem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, size.name);\n  }))), __jsx(ColorList, {\n    colorList: colorList || [],\n    handleSelect: handleSelect,\n    curChannelId: curChannel._id,\n    selectedList: curChannelAssign.plainColors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }), __jsx(PaintList, {\n    paintList: paintList || [],\n    handleSelect: handleSelect,\n    curChannelId: curChannel._id,\n    selectedList: curChannelAssign.flowerColors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  })), __jsx(Button, {\n    variant: \"primary\",\n    height: \"0.7rem\",\n    width: \"6.4rem\",\n    bg: \"#1B1B1B\",\n    color: \"#fff\",\n    padding: \"0\",\n    ml: \"-0.7rem\",\n    sx: {\n      borderRadius: 0,\n      fontSize: \"0.14rem\",\n      cursor: \"pointer\"\n    },\n    onClick: props.onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, \"FINISH\"));\n});","map":{"version":3,"sources":["/Users/paige/Desktop/workspace/mm-next/components/select-assign-tool/index.js"],"names":["React","useEffect","useState","Flex","Text","Box","Button","Image","Title","ColorList","PaintList","request","baseUrl","props","currentSeleted","sid","top","col","styleItem","channelInfoList","curChannel","setCurChannel","channelList","setChannelList","colorList","setColorList","paintList","setPaintList","sizeList","setSizeList","plainColors","flowerColors","curChannelAssign","setCurChannelAssign","getChannels","req","docs","length","getColorList","type","page","limit","getPaintList","getStyle","_id","size","values","console","log","code","getChannelsAssign","styleId","channelId","left","handleSelect","item","cIndex","findIndex","x","push","splice","res","plainColor","concat","pIndex","res1","flowerColor","handleSelectChannel","channel","position","styleNo","onClose","map","name","borderRadius","fontSize","cursor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Flex, Text, Box, Button, Image } from \"rebass\"\nimport { Title } from \"./aisle-button\"\nimport { ColorList, PaintList } from \"../color-and-paint\"\nimport request from \"../../utils/request.js\"\nimport { baseUrl } from \"../../utils/helper\"\n\nexport default props => {\n\tconst { sid, top, col, styleItem } = props.currentSeleted\n\tconst channelInfoList = []\n\tconst [curChannel, setCurChannel] = useState({})\n\tconst [channelList, setChannelList] = useState(false)\n\tconst [colorList, setColorList] = useState([])\n\tconst [paintList, setPaintList] = useState([])\n\tconst [sizeList, setSizeList] = useState([])\n\tconst [curChannelAssign, setCurChannelAssign] = useState({\n\t\tplainColors: [],\n\t\tflowerColors: []\n\t})\n\tuseEffect(() => {\n\t\tconst getChannels = async () => {\n\t\t\tconst req = await request(\"channel/getList\", {}, \"get\")\n\t\t\tsetChannelList(req.docs)\n\t\t\tif (req.docs.length > 0) {\n\t\t\t\tsetCurChannel(req.docs[0])\n\t\t\t\t// getChannelsAssign(sid, req.docs[0]._id)\n\t\t\t}\n\t\t}\n\t\tconst getColorList = async () => {\n\t\t\tconst req = await request(\n\t\t\t\t\"color/getList\",\n\t\t\t\t{ type: 0, page: 1, limit: 14 },\n\t\t\t\t\"get\"\n\t\t\t)\n\t\t\tsetColorList(req.docs)\n\t\t\t// console.log(\"getChannels\", req)\n\t\t}\n\t\tconst getPaintList = async () => {\n\t\t\tconst req = await request(\n\t\t\t\t\"color/getList\",\n\t\t\t\t{ type: 1, page: 1, limit: 14 },\n\t\t\t\t\"get\"\n\t\t\t)\n\t\t\tsetPaintList(req.docs)\n\t\t\t// console.log(\"getChannels\", req)\n\t\t}\n\t\tgetChannels()\n\t\tgetColorList()\n\t\tgetPaintList()\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (props.currentSeleted) {\n\t\t\tconst getStyle = async () => {\n\t\t\t\tconst req = await request(\"style/detail\", { _id: sid }, \"get\")\n\t\t\t\tif (!req) return\n\t\t\t\t// setCurChannelIndex(0)\n\t\t\t\tsetSizeList(req.size.values)\n\t\t\t}\n\t\t\tgetStyle()\n\t\t}\n\t}, [props.currentSeleted])\n\n\tuseEffect(() => {\n\t\tif (!curChannel._id) return\n\t\tconsole.log(\"curChannel->\", curChannel.code)\n\t\tconst getChannelsAssign = async (styleId, channelId) => {\n\t\t\tconst req = await request(\n\t\t\t\t\"channel/getAssign\",\n\t\t\t\t{\n\t\t\t\t\tstyleId,\n\t\t\t\t\tchannelId\n\t\t\t\t},\n\t\t\t\t\"get\"\n\t\t\t)\n\t\t\tif (!req) {\n\t\t\t\tsetCurChannelAssign({\n\t\t\t\t\tplainColors: [],\n\t\t\t\t\tflowerColors: []\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tsetCurChannelAssign(req)\n\t\t\t}\n\t\t}\n\t\tgetChannelsAssign(sid, curChannel._id)\n\t}, [curChannel])\n\n\tlet left = (col + 2) * 3.2\n\tif (left > 19.2 - 6.4) {\n\t\tleft = (col - 1) * 3.2\n\t}\n\n\tconst handleSelect = (item, type) => {\n\t\tswitch (type) {\n\t\t\tcase \"color\":\n\t\t\t\tconst cIndex = curChannelAssign.plainColors.findIndex(\n\t\t\t\t\tx => x._id === item._id\n\t\t\t\t)\n\t\t\t\tconsole.log(\"cIndex\", cIndex)\n\t\t\t\tif (cIndex < 0) {\n\t\t\t\t\tcurChannelAssign.plainColors.push(item)\n\t\t\t\t} else {\n\t\t\t\t\tcurChannelAssign.plainColors.splice(cIndex, 1)\n\t\t\t\t}\n\t\t\t\tconst res = request(\n\t\t\t\t\t\"/channel/assign\",\n\t\t\t\t\t{\n\t\t\t\t\t\tstyleId: sid,\n\t\t\t\t\t\tchannelId: curChannel._id,\n\t\t\t\t\t\tplainColor: item._id\n\t\t\t\t\t},\n\t\t\t\t\t\"post\"\n\t\t\t\t)\n\t\t\t\tsetCurChannelAssign({\n\t\t\t\t\t...curChannelAssign,\n\t\t\t\t\tplainColors: [].concat(curChannelAssign.plainColors)\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase \"paint\":\n\t\t\t\tconst pIndex = curChannelAssign.flowerColors.findIndex(\n\t\t\t\t\tx => x._id === item._id\n\t\t\t\t)\n\t\t\t\tconsole.log(\"cIndex\", cIndex)\n\t\t\t\tif (pIndex < 0) {\n\t\t\t\t\tcurChannelAssign.flowerColors.push(item)\n\t\t\t\t} else {\n\t\t\t\t\tcurChannelAssign.flowerColors.splice(pIndex, 1)\n\t\t\t\t}\n\t\t\t\tconst res1 = request(\n\t\t\t\t\t\"/channel/assign\",\n\t\t\t\t\t{\n\t\t\t\t\t\tstyleId: sid,\n\t\t\t\t\t\tchannelId: curChannel._id,\n\t\t\t\t\t\tflowerColor: item._id\n\t\t\t\t\t},\n\t\t\t\t\t\"post\"\n\t\t\t\t)\n\t\t\t\tsetCurChannelAssign({\n\t\t\t\t\t...curChannelAssign,\n\t\t\t\t\tflowerColors: [].concat(curChannelAssign.flowerColors)\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\tconst handleSelectChannel = channel => {\n\t\tsetCurChannel(channel)\n\t}\n\t// const handleCommitSelected = index => {}\n\tif (!channelList) return null\n\tconsole.log(curChannel)\n\treturn (\n\t\t<Flex\n\t\t\twidth=\"6.4rem\"\n\t\t\tbg=\"#fff\"\n\t\t\tflexDirection=\"column\"\n\t\t\tfontSize=\"0.18rem\"\n\t\t\tcolor=\"#000\"\n\t\t\tp=\"0.5rem 0.7rem 0 0.7rem\"\n\t\t\tsx={{\n\t\t\t\tposition: \"absolute\",\n\t\t\t\ttop: `${top}px`,\n\t\t\t\tleft: `${left}rem`\n\t\t\t}}\n\t\t>\n\t\t\t<Title\n\t\t\t\tstyleNo={styleItem.styleNo}\n\t\t\t\tchannelList={channelList}\n\t\t\t\t// channelInfoList={curChannelAssign.plainColors}\n\t\t\t\tonClose={props.onClose}\n\t\t\t\tcurChannel={curChannel}\n\t\t\t\tonSelectChannel={handleSelectChannel}\n\t\t\t/>\n\t\t\t<Flex flexDirection=\"column\">\n\t\t\t\t<Box width=\"100%\" mb=\"0.4rem\">\n\t\t\t\t\t<Text mb=\"0.1rem\">SIZE「CUP」</Text>\n\t\t\t\t\t<Flex width=\"100%\" lineHeight=\"0.36rem\">\n\t\t\t\t\t\t{sizeList.map(size => (\n\t\t\t\t\t\t\t<Text mr=\"0.2rem\">{size.name}</Text>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Flex>\n\t\t\t\t</Box>\n\t\t\t\t<ColorList\n\t\t\t\t\tcolorList={colorList || []}\n\t\t\t\t\thandleSelect={handleSelect}\n\t\t\t\t\tcurChannelId={curChannel._id}\n\t\t\t\t\tselectedList={curChannelAssign.plainColors}\n\t\t\t\t/>\n\t\t\t\t<PaintList\n\t\t\t\t\tpaintList={paintList || []}\n\t\t\t\t\thandleSelect={handleSelect}\n\t\t\t\t\tcurChannelId={curChannel._id}\n\t\t\t\t\tselectedList={curChannelAssign.flowerColors}\n\t\t\t\t/>\n\t\t\t</Flex>\n\t\t\t<Button\n\t\t\t\tvariant=\"primary\"\n\t\t\t\theight=\"0.7rem\"\n\t\t\t\twidth=\"6.4rem\"\n\t\t\t\tbg=\"#1B1B1B\"\n\t\t\t\tcolor=\"#fff\"\n\t\t\t\tpadding=\"0\"\n\t\t\t\tml=\"-0.7rem\"\n\t\t\t\tsx={{\n\t\t\t\t\tborderRadius: 0,\n\t\t\t\t\tfontSize: \"0.14rem\",\n\t\t\t\t\tcursor: \"pointer\"\n\t\t\t\t}}\n\t\t\t\tonClick={props.onClose}\n\t\t\t>\n\t\t\t\tFINISH\n\t\t\t</Button>\n\t\t</Flex>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}