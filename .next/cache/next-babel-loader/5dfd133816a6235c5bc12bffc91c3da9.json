{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/paige/Desktop/workspace/mm-next/components/tables/self-order-table.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Flex, Text, Box, Button, Row, Column } from \"rebass\";\nimport Table, { TableLine, ProductInfo } from \"./base-table\";\nimport ShowStyle from \"../show-style\";\nimport InputNumber from \"../number-input\";\nimport request from \"../../utils/request\";\nexport default (props => {\n  const {\n    0: orderList,\n    1: setOrderList\n  } = useState([]);\n  const {\n    0: orderDetailList,\n    1: setOrderDetailList\n  } = useState([]);\n  const {\n    0: selectList,\n    1: setSelectList\n  } = useState([]);\n\n  const getOrderList = async () => {\n    const res = await request(\"/order/getMyList\", {\n      isSend: 1\n    }); // console.log(\"----res----\", res)\n\n    if (!res) return;\n    setOrderDetailList(res);\n    const data = res.map(order => {\n      let orderData = order.orderData;\n      let threeViewsList = [];\n      let quantity = 0;\n      let price = 0;\n      orderData.map(item => {\n        let threeViews = item.favorite.styleAndColor.map(x => {\n          return {\n            POSITIVE: x.front\n          };\n        });\n        quantity += item.total;\n        price += item.totalPrice;\n        threeViewsList.push(threeViews);\n      });\n      return {\n        date: order.updateTime,\n        id: order._id\n      };\n    });\n    setOrderList(data);\n  };\n\n  useEffect(() => {\n    getOrderList();\n  }, []);\n\n  const handleSelect = (index, item) => {\n    const pos = selectList.findIndex(x => x.index === index);\n\n    if (pos < 0) {\n      selectList.push(_objectSpread({\n        index\n      }, item));\n    } else {\n      selectList.splice(pos, 1);\n    }\n\n    setSelectList([].concat(selectList));\n  };\n\n  const handleSendOrder = async () => {\n    console.log(selectList);\n    const res = await request(\"/order/send\", {\n      list: selectList.map(s => s.id)\n    }, \"post\");\n\n    if (res) {\n      props.nextStep();\n    }\n  };\n\n  return __jsx(Flex, {\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    sx: {\n      cursor: \"pointer\",\n      height: \"100%\",\n      background: \"#FFF0E5\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(Flex, {\n    sx: {\n      padding: \"0 18px 18px 18px\"\n    },\n    alignItems: \"stretch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(Table, {\n    sx: {\n      margin: \"0\",\n      marginRight: \"1px\",\n      width: \"100%\"\n    },\n    titles: [{\n      name: \"00\",\n      width: \"2/22\",\n      isHide: true\n    }, {\n      name: \"ORDER NUMBER\",\n      width: \"2/22\"\n    }, {\n      name: \"ORDER DATE\",\n      width: \"4/22\"\n    }, {\n      name: \"CLIENT'S NAME\",\n      width: \"1/22\"\n    }, {\n      name: \"ACTION\",\n      width: \"2/22\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, orderList.map((order, index) => __jsx(TableLine, {\n    haveDel: true,\n    onDel: () => {\n      handleDel(index, {});\n    },\n    Bigger: true // onEdit={() => {\n    // \t// setEditIndex(index)\n    // \t// setShowEditBox(true)\n    // }}\n    ,\n    key: `${index}-my-order`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(Text, {\n    lineHeight: \"0.6rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, index), __jsx(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, order.id), __jsx(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, order.date), __jsx(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"?\"))))));\n});","map":{"version":3,"sources":["/Users/paige/Desktop/workspace/mm-next/components/tables/self-order-table.js"],"names":["React","useState","useEffect","Flex","Text","Box","Button","Row","Column","Table","TableLine","ProductInfo","ShowStyle","InputNumber","request","props","orderList","setOrderList","orderDetailList","setOrderDetailList","selectList","setSelectList","getOrderList","res","isSend","data","map","order","orderData","threeViewsList","quantity","price","item","threeViews","favorite","styleAndColor","x","POSITIVE","front","total","totalPrice","push","date","updateTime","id","_id","handleSelect","index","pos","findIndex","splice","concat","handleSendOrder","console","log","list","s","nextStep","cursor","height","background","padding","margin","marginRight","width","name","isHide","handleDel"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Flex, Text, Box, Button, Row, Column } from \"rebass\"\nimport Table, { TableLine, ProductInfo } from \"./base-table\"\nimport ShowStyle from \"../show-style\"\nimport InputNumber from \"../number-input\"\nimport request from \"../../utils/request\"\n\nexport default props => {\n\tconst [orderList, setOrderList] = useState([])\n\tconst [orderDetailList, setOrderDetailList] = useState([])\n\tconst [selectList, setSelectList] = useState([])\n\tconst getOrderList = async () => {\n\t\tconst res = await request(\"/order/getMyList\", { isSend: 1 })\n\t\t// console.log(\"----res----\", res)\n\t\tif (!res) return\n\t\tsetOrderDetailList(res)\n\t\tconst data = res.map(order => {\n\t\t\tlet orderData = order.orderData\n\t\t\tlet threeViewsList = []\n\t\t\tlet quantity = 0\n\t\t\tlet price = 0\n\t\t\torderData.map(item => {\n\t\t\t\tlet threeViews = item.favorite.styleAndColor.map(x => {\n\t\t\t\t\treturn { POSITIVE: x.front }\n\t\t\t\t})\n\t\t\t\tquantity += item.total\n\t\t\t\tprice += item.totalPrice\n\t\t\t\tthreeViewsList.push(threeViews)\n\t\t\t})\n\n\t\t\treturn {\n\t\t\t\tdate: order.updateTime,\n\t\t\t\tid: order._id\n\t\t\t}\n\t\t})\n\t\tsetOrderList(data)\n\t}\n\tuseEffect(() => {\n\t\tgetOrderList()\n\t}, [])\n\tconst handleSelect = (index, item) => {\n\t\tconst pos = selectList.findIndex(x => x.index === index)\n\t\tif (pos < 0) {\n\t\t\tselectList.push({ index, ...item })\n\t\t} else {\n\t\t\tselectList.splice(pos, 1)\n\t\t}\n\t\tsetSelectList([].concat(selectList))\n\t}\n\tconst handleSendOrder = async () => {\n\t\tconsole.log(selectList)\n\n\t\tconst res = await request(\n\t\t\t\"/order/send\",\n\t\t\t{ list: selectList.map(s => s.id) },\n\t\t\t\"post\"\n\t\t)\n\t\tif (res) {\n\t\t\tprops.nextStep()\n\t\t}\n\t}\n\treturn (\n\t\t<Flex\n\t\t\tflexDirection=\"column\"\n\t\t\tjustifyContent=\"space-between\"\n\t\t\tsx={{\n\t\t\t\tcursor: \"pointer\",\n\t\t\t\theight: \"100%\",\n\t\t\t\tbackground: \"#FFF0E5\"\n\t\t\t}}\n\t\t>\n\t\t\t<Flex sx={{ padding: \"0 18px 18px 18px\" }} alignItems=\"stretch\">\n\t\t\t\t<Table\n\t\t\t\t\tsx={{ margin: \"0\", marginRight: \"1px\", width: \"100%\" }}\n\t\t\t\t\ttitles={[\n\t\t\t\t\t\t{ name: \"00\", width: \"2/22\", isHide: true },\n\t\t\t\t\t\t{ name: \"ORDER NUMBER\", width: \"2/22\" },\n\t\t\t\t\t\t{ name: \"ORDER DATE\", width: \"4/22\" },\n\t\t\t\t\t\t{ name: \"CLIENT'S NAME\", width: \"1/22\" },\n\t\t\t\t\t\t{ name: \"ACTION\", width: \"2/22\" }\n\t\t\t\t\t]}\n\t\t\t\t>\n\t\t\t\t\t{orderList.map((order, index) => (\n\t\t\t\t\t\t<TableLine\n\t\t\t\t\t\t\thaveDel\n\t\t\t\t\t\t\tonDel={() => {\n\t\t\t\t\t\t\t\thandleDel(index, {})\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tBigger\n\t\t\t\t\t\t\t// onEdit={() => {\n\t\t\t\t\t\t\t// \t// setEditIndex(index)\n\t\t\t\t\t\t\t// \t// setShowEditBox(true)\n\t\t\t\t\t\t\t// }}\n\t\t\t\t\t\t\tkey={`${index}-my-order`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text lineHeight=\"0.6rem\">{index}</Text>\n\t\t\t\t\t\t\t{/* <Text>MRMISS 20191118</Text> */}\n\t\t\t\t\t\t\t<Text>{order.id}</Text>\n\t\t\t\t\t\t\t<Text>{order.date}</Text>\n\t\t\t\t\t\t\t<Text>?</Text>\n\t\t\t\t\t\t</TableLine>\n\t\t\t\t\t))}\n\t\t\t\t</Table>\n\t\t\t</Flex>\n\t\t</Flex>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}