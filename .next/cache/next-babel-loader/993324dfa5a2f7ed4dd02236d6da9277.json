{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport axios from \"axios\";\nconst instance = axios.create({\n  baseURL: \"http://192.168.1.3:3000/api/\",\n  // withCredentials: true,\n  timeout: 10000,\n  headers: {\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n});\ninstance.interceptors.request.use(config => {\n  /**\n   * 请求时从本地读取token，并设置headers\n   */\n  const token = localStorage.token;\n  config.headers.Authorization = `Bearer ${token}`;\n  return config;\n}, error => _Promise.reject(error));\ninstance.interceptors.response.use(response => {\n  console.log(\"response\", response);\n\n  if (response.config.url.includes(\"user/login\")) {\n    if (response.data && response.data.data) {\n      localStorage.token = response.data.data.token;\n    }\n  }\n\n  if (!response.data.success) {//请求出错\n  }\n\n  return response.data;\n}, error => {\n  const response = error.response || {};\n  console.log(\"错误： \", response);\n  handleErrorStatus(response.status, response.message);\n  return _Promise.reject(response);\n}); // 错误提示\n\nconst handleErrorStatus = (status, message) => {\n  console.log(status, message);\n};\n\nexport default ((url = \"\", data = {}, method = \"get\", origin = false, api) => {\n  var postData = new FormData();\n\n  for (var prop in data) {\n    postData.append(prop, data[prop]);\n  }\n\n  const options = method.toLowerCase() === \"get\" ? {\n    params: data\n  } : postData;\n  return instance[method](url, options).then(res => {\n    return res.data;\n  }).catch(err => {\n    // handleErrorStatus(code, err.message)\n    console.log(\"err: \", err);\n    return false;\n  });\n});","map":{"version":3,"sources":["/Users/paige/Desktop/workspace/mm-next/utils/request.js"],"names":["axios","instance","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","Authorization","error","reject","response","console","log","url","includes","data","success","handleErrorStatus","status","message","method","origin","api","postData","FormData","prop","append","options","toLowerCase","params","then","res","catch","err"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAE,8BADoB;AAE7B;AACAC,EAAAA,OAAO,EAAE,KAHoB;AAI7BC,EAAAA,OAAO,EAAE;AACR,oBAAgB;AADR;AAJoB,CAAb,CAAjB;AASAJ,QAAQ,CAACK,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACCC,MAAM,IAAI;AACT;;;AAGA,QAAMC,KAAK,GAAGC,YAAY,CAACD,KAA3B;AACAD,EAAAA,MAAM,CAACJ,OAAP,CAAeO,aAAf,GAAgC,UAASF,KAAM,EAA/C;AACA,SAAOD,MAAP;AACA,CARF,EASCI,KAAK,IAAI,SAAQC,MAAR,CAAeD,KAAf,CATV;AAYAZ,QAAQ,CAACK,YAAT,CAAsBS,QAAtB,CAA+BP,GAA/B,CACCO,QAAQ,IAAI;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;;AACA,MAAIA,QAAQ,CAACN,MAAT,CAAgBS,GAAhB,CAAoBC,QAApB,CAA6B,YAA7B,CAAJ,EAAgD;AAC/C,QAAIJ,QAAQ,CAACK,IAAT,IAAiBL,QAAQ,CAACK,IAAT,CAAcA,IAAnC,EAAyC;AACxCT,MAAAA,YAAY,CAACD,KAAb,GAAqBK,QAAQ,CAACK,IAAT,CAAcA,IAAd,CAAmBV,KAAxC;AACA;AACD;;AACD,MAAI,CAACK,QAAQ,CAACK,IAAT,CAAcC,OAAnB,EAA4B,CAC3B;AACA;;AACD,SAAON,QAAQ,CAACK,IAAhB;AACA,CAZF,EAaCP,KAAK,IAAI;AACR,QAAME,QAAQ,GAAGF,KAAK,CAACE,QAAN,IAAkB,EAAnC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,QAApB;AACAO,EAAAA,iBAAiB,CAACP,QAAQ,CAACQ,MAAV,EAAkBR,QAAQ,CAACS,OAA3B,CAAjB;AACA,SAAO,SAAQV,MAAR,CAAeC,QAAf,CAAP;AACA,CAlBF,E,CAqBA;;AACA,MAAMO,iBAAiB,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB;AAC9CR,EAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ,EAAoBC,OAApB;AACA,CAFD;;AAIA,gBAAe,CAACN,GAAG,GAAG,EAAP,EAAWE,IAAI,GAAG,EAAlB,EAAsBK,MAAM,GAAG,KAA/B,EAAsCC,MAAM,GAAG,KAA/C,EAAsDC,GAAtD,KAA8D;AAC5E,MAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;;AACA,OAAK,IAAIC,IAAT,IAAiBV,IAAjB,EAAuB;AACtBQ,IAAAA,QAAQ,CAACG,MAAT,CAAgBD,IAAhB,EAAsBV,IAAI,CAACU,IAAD,CAA1B;AACA;;AACD,QAAME,OAAO,GAAGP,MAAM,CAACQ,WAAP,OAAyB,KAAzB,GAAiC;AAAEC,IAAAA,MAAM,EAAEd;AAAV,GAAjC,GAAoDQ,QAApE;AAEA,SAAO3B,QAAQ,CAACwB,MAAD,CAAR,CAAiBP,GAAjB,EAAsBc,OAAtB,EACLG,IADK,CACAC,GAAG,IAAI;AACZ,WAAOA,GAAG,CAAChB,IAAX;AACA,GAHK,EAILiB,KAJK,CAICC,GAAG,IAAI;AACb;AACAtB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBqB,GAArB;AACA,WAAO,KAAP;AACA,GARK,CAAP;AASA,CAhBD","sourcesContent":["import axios from \"axios\"\n\nconst instance = axios.create({\n\tbaseURL: \"http://192.168.1.3:3000/api/\",\n\t// withCredentials: true,\n\ttimeout: 10000,\n\theaders: {\n\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t}\n})\n\ninstance.interceptors.request.use(\n\tconfig => {\n\t\t/**\n\t\t * 请求时从本地读取token，并设置headers\n\t\t */\n\t\tconst token = localStorage.token\n\t\tconfig.headers.Authorization = `Bearer ${token}`\n\t\treturn config\n\t},\n\terror => Promise.reject(error)\n)\n\ninstance.interceptors.response.use(\n\tresponse => {\n\t\tconsole.log(\"response\", response)\n\t\tif (response.config.url.includes(\"user/login\")) {\n\t\t\tif (response.data && response.data.data) {\n\t\t\t\tlocalStorage.token = response.data.data.token\n\t\t\t}\n\t\t}\n\t\tif (!response.data.success) {\n\t\t\t//请求出错\n\t\t}\n\t\treturn response.data\n\t},\n\terror => {\n\t\tconst response = error.response || {}\n\t\tconsole.log(\"错误： \", response)\n\t\thandleErrorStatus(response.status, response.message)\n\t\treturn Promise.reject(response)\n\t}\n)\n\n// 错误提示\nconst handleErrorStatus = (status, message) => {\n\tconsole.log(status, message)\n}\n\nexport default (url = \"\", data = {}, method = \"get\", origin = false, api) => {\n\tvar postData = new FormData()\n\tfor (var prop in data) {\n\t\tpostData.append(prop, data[prop])\n\t}\n\tconst options = method.toLowerCase() === \"get\" ? { params: data } : postData\n\n\treturn instance[method](url, options)\n\t\t.then(res => {\n\t\t\treturn res.data\n\t\t})\n\t\t.catch(err => {\n\t\t\t// handleErrorStatus(code, err.message)\n\t\t\tconsole.log(\"err: \", err)\n\t\t\treturn false\n\t\t})\n}\n"]},"metadata":{},"sourceType":"module"}