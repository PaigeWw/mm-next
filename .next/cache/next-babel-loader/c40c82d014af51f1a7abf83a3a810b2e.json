{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/paige/Desktop/workspace/mm-next/pages/assign.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { Flex, Text, Box, Button, Image, Select } from \"rebass\";\nimport useUserInfo from \"../hooks/getUserInfo\";\nimport Head from \"../components/nav\";\nimport AssginItem from \"../components/assign-item\";\nimport request from \"../utils/request.js\"; // 'channel/assignGoods'  channelId goodsId\n// 'channel/getAssignGoods'  channelId goodsId\n\nexport default (function () {\n  var info = useUserInfo();\n\n  var _useState = useState([]),\n      goodsList = _useState[0],\n      setGoodsList = _useState[1];\n\n  var _useState2 = useState([]),\n      channelList = _useState2[0],\n      setChannelList = _useState2[1];\n\n  var _useState3 = useState([]),\n      assignCategoryList = _useState3[0],\n      setAssignCategoryList = _useState3[1];\n\n  var _useState4 = useState({}),\n      currentChannel = _useState4[0],\n      setCurrentChannel = _useState4[1];\n\n  var _useState5 = useState(false),\n      showChannels = _useState5[0],\n      setShowChannels = _useState5[1];\n\n  useEffect(function () {\n    var getGoodsList =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var req;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return request(\"goods/getList\");\n\n              case 2:\n                req = _context.sent;\n                setGoodsList(req);\n                console.log(req);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getGoodsList() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getGoodsList();\n\n    var getChannels =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var req;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return request(\"user/getUserChannels\");\n\n              case 2:\n                req = _context2.sent;\n                setChannelList(req.channels);\n\n                if (req.channels.length > 0) {\n                  setCurrentChannel(req.channels[0]);\n                }\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function getChannels() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    getChannels();\n  }, []);\n  useEffect(function () {\n    if (!currentChannel._id) return;\n\n    var getAssignCategoryList =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var req;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return request(\"channel/getAssignCategory\", {\n                  channelId: currentChannel._id\n                });\n\n              case 2:\n                req = _context3.sent;\n\n                if (req) {\n                  setAssignCategoryList(req.categories);\n                }\n\n                console.log(req);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function getAssignCategoryList() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    getAssignCategoryList();\n  }, [currentChannel]);\n\n  var handleAssignCategory =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4(categoryId, toggle) {\n      var res, index;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return request(\"channel/assignCategory\", {\n                channelId: currentChannel._id,\n                categoryId: categoryId\n              }, \"post\");\n\n            case 2:\n              res = _context4.sent;\n\n              if (res) {\n                if (toggle) {\n                  index = assignCategoryList.indexOf(categoryId);\n\n                  if (index >= 0) {\n                    assignCategoryList.splice(index, 1);\n                    setAssignCategoryList(_toConsumableArray(assignCategoryList));\n                  }\n                } else {\n                  setAssignCategoryList([].concat(_toConsumableArray(assignCategoryList), [categoryId]));\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleAssignCategory(_x, _x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(Flex, {\n    height: \"100vh\" // justifyContent=\"space-between\"\n    ,\n    flexDirection: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), __jsx(Box, {\n    width: [1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, channelList.length > 0 ? __jsx(Flex, {\n    bg: \"#000000\",\n    width: [1],\n    pl: \"1.1rem\",\n    lineHeight: \"1.14rem\",\n    sx: {\n      height: \"1.14rem\",\n      position: \"relative\",\n      cursor: \"pointer\"\n    },\n    color: \"#fff\",\n    onClick: function onClick() {\n      setShowChannels(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"\".concat(currentChannel.code, \"(\").concat(currentChannel.name, \")\"), showChannels ? __jsx(Box, {\n    sx: {\n      position: \"absolute\",\n      border: \"1px solid #000\",\n      top: \"calc(0.507rem + 20px)\"\n    },\n    color: \"#000\",\n    bg: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, channelList.map(function (channel) {\n    return __jsx(Text, {\n      width: \"160px\",\n      lineHeight: \"32px\",\n      pl: \"12px\",\n      sx: {\n        \"&:hover\": {\n          background: \"#cccccc\",\n          color: \"#fff\"\n        }\n      },\n      onClick: function onClick(e) {\n        e.nativeEvent.preventDefault();\n        e.nativeEvent.stopPropagation();\n        setCurrentChannel(channel);\n        setShowChannels(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"\".concat(channel.code, \"(\").concat(channel.name, \")\"));\n  })) : null) : null, __jsx(AssginItem, {\n    goodsList: goodsList,\n    assignCategoryList: assignCategoryList || [],\n    onAssignCategory: handleAssignCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }))));\n});","map":{"version":3,"sources":["/Users/paige/Desktop/workspace/mm-next/pages/assign.js"],"names":["React","useEffect","useState","Flex","Text","Box","Button","Image","Select","useUserInfo","Head","AssginItem","request","info","goodsList","setGoodsList","channelList","setChannelList","assignCategoryList","setAssignCategoryList","currentChannel","setCurrentChannel","showChannels","setShowChannels","getGoodsList","req","console","log","getChannels","channels","length","_id","getAssignCategoryList","channelId","categories","handleAssignCategory","categoryId","toggle","res","index","indexOf","splice","height","position","cursor","code","name","border","top","map","channel","background","color","e","nativeEvent","preventDefault","stopPropagation"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Flex, Text, Box, Button, Image, Select } from \"rebass\"\nimport useUserInfo from \"../hooks/getUserInfo\"\nimport Head from \"../components/nav\"\nimport AssginItem from \"../components/assign-item\"\n\nimport request from \"../utils/request.js\"\n\n// 'channel/assignGoods'  channelId goodsId\n// 'channel/getAssignGoods'  channelId goodsId\nexport default () => {\n\tconst info = useUserInfo()\n\tconst [goodsList, setGoodsList] = useState([])\n\tconst [channelList, setChannelList] = useState([])\n\tconst [assignCategoryList, setAssignCategoryList] = useState([])\n\tconst [currentChannel, setCurrentChannel] = useState({})\n\tconst [showChannels, setShowChannels] = useState(false)\n\tuseEffect(() => {\n\t\tconst getGoodsList = async () => {\n\t\t\tconst req = await request(\"goods/getList\")\n\t\t\tsetGoodsList(req)\n\t\t\tconsole.log(req)\n\t\t}\n\t\tgetGoodsList()\n\t\tconst getChannels = async () => {\n\t\t\tconst req = await request(\"user/getUserChannels\")\n\t\t\tsetChannelList(req.channels)\n\t\t\tif (req.channels.length > 0) {\n\t\t\t\tsetCurrentChannel(req.channels[0])\n\t\t\t}\n\t\t}\n\t\tgetChannels()\n\t}, [])\n\tuseEffect(() => {\n\t\tif (!currentChannel._id) return\n\t\tconst getAssignCategoryList = async () => {\n\t\t\tconst req = await request(\"channel/getAssignCategory\", {\n\t\t\t\tchannelId: currentChannel._id\n\t\t\t})\n\t\t\tif (req) {\n\t\t\t\tsetAssignCategoryList(req.categories)\n\t\t\t}\n\n\t\t\tconsole.log(req)\n\t\t}\n\t\tgetAssignCategoryList()\n\t}, [currentChannel])\n\n\tconst handleAssignCategory = async (categoryId, toggle) => {\n\t\tconst res = await request(\n\t\t\t\"channel/assignCategory\",\n\t\t\t{\n\t\t\t\tchannelId: currentChannel._id,\n\t\t\t\tcategoryId\n\t\t\t},\n\t\t\t\"post\"\n\t\t)\n\t\tif (res) {\n\t\t\tif (toggle) {\n\t\t\t\tlet index = assignCategoryList.indexOf(categoryId)\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tassignCategoryList.splice(index, 1)\n\t\t\t\t\tsetAssignCategoryList([...assignCategoryList])\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetAssignCategoryList([...assignCategoryList, categoryId])\n\t\t\t}\n\t\t}\n\t}\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Flex\n\t\t\t\theight=\"100vh\"\n\t\t\t\t// justifyContent=\"space-between\"\n\t\t\t\tflexDirection=\"column\"\n\t\t\t>\n\t\t\t\t<Head></Head>\n\t\t\t\t<Box width={[1]}>\n\t\t\t\t\t{channelList.length > 0 ? (\n\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\tbg=\"#000000\"\n\t\t\t\t\t\t\twidth={[1]}\n\t\t\t\t\t\t\tpl=\"1.1rem\"\n\t\t\t\t\t\t\tlineHeight=\"1.14rem\"\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\theight: \"1.14rem\",\n\t\t\t\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\t\t\t\tcursor: \"pointer\"\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tcolor=\"#fff\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetShowChannels(true)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{/* {console.log(channelList)} */}\n\t\t\t\t\t\t\t{`${currentChannel.code}(${currentChannel.name})`}\n\t\t\t\t\t\t\t{showChannels ? (\n\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\t\t\tborder: \"1px solid #000\",\n\t\t\t\t\t\t\t\t\t\ttop: \"calc(0.507rem + 20px)\"\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tcolor=\"#000\"\n\t\t\t\t\t\t\t\t\tbg=\"#fff\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{channelList.map(channel => (\n\t\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\t\twidth=\"160px\"\n\t\t\t\t\t\t\t\t\t\t\tlineHeight=\"32px\"\n\t\t\t\t\t\t\t\t\t\t\tpl=\"12px\"\n\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\tbackground: \"#cccccc\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#fff\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\t\t\t\t\t\te.nativeEvent.preventDefault()\n\t\t\t\t\t\t\t\t\t\t\t\te.nativeEvent.stopPropagation()\n\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentChannel(channel)\n\t\t\t\t\t\t\t\t\t\t\t\tsetShowChannels(false)\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>{`${channel.code}(${channel.name})`}</Text>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t) : null}\n\n\t\t\t\t\t<AssginItem\n\t\t\t\t\t\tgoodsList={goodsList}\n\t\t\t\t\t\tassignCategoryList={assignCategoryList || []}\n\t\t\t\t\t\tonAssignCategory={handleAssignCategory}\n\t\t\t\t\t></AssginItem>\n\t\t\t\t</Box>\n\t\t\t</Flex>\n\t\t</React.Fragment>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}