{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Flex, Text, Box, Button, Row, Column } from \"rebass\";\nimport Table, { TableLine, ProductInfo } from \"./base-table\";\nimport ShowStyle from \"../show-style\";\nimport InputNumber from \"../number-input\";\nimport request from \"../../utils/request\";\nexport default (function (props) {\n  var selectStyles = props.selectStyles;\n  var line = props.selectStyles.length;\n  console.log(selectStyles);\n  var initData = selectStyles.map(function (x) {\n    var sizeInfo = x.details[0].size.values.map(function (item) {\n      return _objectSpread({}, item, {\n        num: 0\n      });\n    });\n    console.log();\n    return {\n      favoriteId: x.id,\n      sizeInfo: sizeInfo,\n      total: 0,\n      totalPrice: 0,\n      signalPrice: x.details[0].price + (x.details.length > 1 ? x.details[1].price : 0)\n    };\n  });\n\n  var _useState = useState(initData),\n      orderData = _useState[0],\n      setOrderData = _useState[1];\n\n  var _useState2 = useState(1),\n      packageCount = _useState2[0],\n      setPackageCount = _useState2[1];\n\n  var handleChangePackageCount = function handleChangePackageCount(num) {\n    if (num < 1) return;\n    setPackageCount(num);\n    orderData.map(function (order, index) {\n      order.total = getItemsTotal(index) * num;\n    });\n    setOrderData([].concat(orderData));\n  };\n\n  var handleChangeOrder = function handleChangeOrder(styleIndex, sizeIndex, num) {\n    console.log(num);\n    if (num < 0) return;\n    orderData[styleIndex].sizeInfo[sizeIndex].num = _parseInt(num, 10);\n    var allNumSum = getItemsTotal(styleIndex);\n    orderData[styleIndex].total = allNumSum * packageCount;\n    var temp = new Number(allNumSum * packageCount * orderData[styleIndex].signalPrice);\n    orderData[styleIndex].totalPrice = temp.toFixed(2);\n    setOrderData([].concat(orderData)); // console.log(\"orderData\", orderData)\n  };\n\n  var getItemsTotal = function getItemsTotal(index) {\n    if (index < orderData.length) {\n      var count = 0;\n      orderData[index].sizeInfo.map(function (size) {\n        count += size.num;\n      });\n      return count;\n    }\n  };\n\n  var handleSubmitOrder =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return request(\"/order/add\", {\n                packageCount: packageCount,\n                orderData: orderData\n              }, \"post\");\n\n            case 2:\n              res = _context.sent;\n\n              if (res) {\n                props.nextStep();\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmitOrder() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Flex, {\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    sx: {\n      cursor: \"pointer\",\n      height: \"100%\",\n      background: \"#FFF0E5\"\n    }\n  }, __jsx(Box, {\n    sx: {\n      padding: \"0 18px 18px 18px\",\n      height: \"max-content\",\n      display: \"table\"\n    }\n  }, __jsx(Table, {\n    sx: {\n      margin: \"0\",\n      marginRight: \"1px\",\n      width: \"100%\"\n    },\n    titles: [{\n      name: \"00\",\n      width: \"2/22\",\n      isHide: true\n    }, {\n      name: \"SECTION NUMBER\",\n      width: \"2/22\"\n    }, {\n      name: \"COLOUR\",\n      width: \"4/22\"\n    }, {\n      name: \"IMAGE\",\n      width: \"1/22\"\n    }, {\n      name: \"SIZE\",\n      width: \"2/22\"\n    }, {\n      name: \"PACKAGES\",\n      width: \"2/22\"\n    }, {\n      name: \"QUANTITY\",\n      width: \"2/22\"\n    }, {\n      name: \"PRICE\",\n      width: \"4/22\"\n    }, {\n      name: \"TOTAL AMOUN\",\n      width: \"1/22\"\n    }, {\n      name: \"DELETE\",\n      width: \"2/22\"\n    }]\n  }, selectStyles.map(function (collect, index) {\n    return __jsx(TableLine, {\n      haveDel: true,\n      key: \"selectline-\".concat(collect.id)\n    }, __jsx(Text, null, index), __jsx(ProductInfo, {\n      styleNum: \"XSJHFH00928\"\n    }), __jsx(Flex, {\n      flexDirection: \"column\"\n    }, __jsx(ProductInfo, {\n      made: \"2110 YE GREEN\"\n    }), __jsx(ProductInfo, {\n      made: \"2110 YE GREEN\"\n    })), __jsx(ShowStyle, {\n      key: collect.id,\n      imgWidth: \"0.95rem\",\n      mode: \"POSITIVE\",\n      threeViews: collect.threeViews,\n      border: \"none\",\n      hideInfo: true\n    }), __jsx(Flex, {\n      justifyContent: \"space-between\"\n    }, collect.details[0].size.values.map(function (size, sizeIndex) {\n      return __jsx(Flex, {\n        flexDirection: \"column\"\n      }, __jsx(Text, {\n        mr: \"10px\"\n      }, size.name), __jsx(InputNumber, {\n        value: orderData[index].sizeInfo[sizeIndex].num,\n        onChange: function onChange(num) {\n          handleChangeOrder(index, sizeIndex, num);\n          console.log(collect.id, size.name, num);\n        },\n        upValue: function upValue() {\n          handleChangeOrder(index, sizeIndex, orderData[index].sizeInfo[sizeIndex].num + 1);\n        },\n        downValue: function downValue() {\n          handleChangeOrder(index, sizeIndex, orderData[index].sizeInfo[sizeIndex].num - 1);\n        }\n      }));\n    })), index > 0 ? null : __jsx(Flex, {\n      rowspan: line,\n      hasBorder: \"1px solid\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      sx: {\n        width: \"100%\",\n        height: \"100%\"\n      }\n    }, __jsx(InputNumber, {\n      value: packageCount,\n      onChange: function onChange(num) {\n        handleChangePackageCount(num == \"\" || !num ? 0 : _parseInt(num));\n      },\n      upValue: function upValue() {\n        handleChangePackageCount(packageCount + 1);\n      },\n      downValue: function downValue() {\n        handleChangePackageCount(packageCount - 1);\n      }\n    })), __jsx(Text, null, orderData[index].total), __jsx(Flex, {\n      flexDirection: \"column\"\n    }, orderData[index].signalPrice), __jsx(Text, null, orderData[index].totalPrice));\n  }))), __jsx(Button, {\n    variant: \"primary\",\n    height: \"1.13rem\",\n    width: \"19.2rem\",\n    bg: \"#000\",\n    color: \"#fff\",\n    padding: \"0\",\n    sx: {\n      borderRadius: 0,\n      fontSize: \"0.27rem\",\n      cursor: \"pointer\"\n    },\n    onClick: handleSubmitOrder\n  }, \"COMPLETE\"));\n});","map":null,"metadata":{},"sourceType":"module"}