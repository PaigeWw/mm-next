{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/paige/Desktop/workspace/mm-next/pages/assign.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { Flex, Text, Box, Button, Image, Select } from \"rebass\";\nimport useUserInfo from \"../hooks/getUserInfo\";\nimport Head from \"../components/nav\";\nimport AssginItem from \"../components/assign-item\";\nimport request from \"../utils/request.js\"; // 'channel/assignGoods'  channelId goodsId\n\nexport default (function () {\n  var info = useUserInfo();\n\n  var _useState = useState([]),\n      goodsList = _useState[0],\n      setGoodsList = _useState[1];\n\n  var _useState2 = useState([]),\n      channelList = _useState2[0],\n      setChannelList = _useState2[1];\n\n  var _useState3 = useState({}),\n      currentChannel = _useState3[0],\n      setCurrentChannel = _useState3[1];\n\n  var _useState4 = useState(false),\n      showChannels = _useState4[0],\n      setShowChannels = _useState4[1];\n\n  useEffect(function () {\n    var getGoodsList =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var req;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return request(\"goods/getList\");\n\n              case 2:\n                req = _context.sent;\n                setGoodsList(req);\n                console.log(req);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getGoodsList() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getGoodsList();\n\n    var getChannels =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var req;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return request(\"user/getUserChannels\");\n\n              case 2:\n                req = _context2.sent;\n                setChannelList(req.channels);\n\n                if (req.channels.length > 0) {\n                  setCurrentChannel(req.channels[0]);\n                }\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function getChannels() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    getChannels();\n  }, []);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(Flex, {\n    height: \"100vh\" // justifyContent=\"space-between\"\n    ,\n    flexDirection: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), __jsx(Box, {\n    width: [1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, channelList.length > 0 ? __jsx(Flex, {\n    bg: \"#000000\",\n    width: [1],\n    pl: \"1.1rem\",\n    lineHeight: \"1.14rem\",\n    sx: {\n      height: \"1.14rem\",\n      position: \"relative\",\n      cursor: \"pointer\"\n    },\n    color: \"#fff\",\n    onClick: function onClick() {\n      setShowChannels(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"\".concat(currentChannel.code, \"(\").concat(currentChannel.name, \")\"), showChannels ? __jsx(Box, {\n    sx: {\n      position: \"absolute\",\n      border: \"1px solid #000\",\n      top: \"calc(0.507rem + 20px)\"\n    },\n    color: \"#000\",\n    bg: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, channelList.map(function (channel) {\n    return __jsx(Text, {\n      width: \"160px\",\n      lineHeight: \"32px\",\n      sx: {\n        \"&:hover\": {\n          background: \"#3c3c3c\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"\".concat(channel.code, \"(\").concat(channel.name, \")\"));\n  })) : null) : null, __jsx(AssginItem, {\n    goodsList: goodsList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }))));\n});","map":{"version":3,"sources":["/Users/paige/Desktop/workspace/mm-next/pages/assign.js"],"names":["React","useEffect","useState","Flex","Text","Box","Button","Image","Select","useUserInfo","Head","AssginItem","request","info","goodsList","setGoodsList","channelList","setChannelList","currentChannel","setCurrentChannel","showChannels","setShowChannels","getGoodsList","req","console","log","getChannels","channels","length","height","position","cursor","code","name","border","top","map","channel","background"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Flex, Text, Box, Button, Image, Select } from \"rebass\"\nimport useUserInfo from \"../hooks/getUserInfo\"\nimport Head from \"../components/nav\"\nimport AssginItem from \"../components/assign-item\"\n\nimport request from \"../utils/request.js\"\n\n// 'channel/assignGoods'  channelId goodsId\nexport default () => {\n\tconst info = useUserInfo()\n\tconst [goodsList, setGoodsList] = useState([])\n\tconst [channelList, setChannelList] = useState([])\n\tconst [currentChannel, setCurrentChannel] = useState({})\n\tconst [showChannels, setShowChannels] = useState(false)\n\tuseEffect(() => {\n\t\tconst getGoodsList = async () => {\n\t\t\tconst req = await request(\"goods/getList\")\n\t\t\tsetGoodsList(req)\n\t\t\tconsole.log(req)\n\t\t}\n\t\tgetGoodsList()\n\t\tconst getChannels = async () => {\n\t\t\tconst req = await request(\"user/getUserChannels\")\n\t\t\tsetChannelList(req.channels)\n\t\t\tif (req.channels.length > 0) {\n\t\t\t\tsetCurrentChannel(req.channels[0])\n\t\t\t}\n\t\t}\n\t\tgetChannels()\n\t}, [])\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Flex\n\t\t\t\theight=\"100vh\"\n\t\t\t\t// justifyContent=\"space-between\"\n\t\t\t\tflexDirection=\"column\"\n\t\t\t>\n\t\t\t\t<Head></Head>\n\t\t\t\t<Box width={[1]}>\n\t\t\t\t\t{channelList.length > 0 ? (\n\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\tbg=\"#000000\"\n\t\t\t\t\t\t\twidth={[1]}\n\t\t\t\t\t\t\tpl=\"1.1rem\"\n\t\t\t\t\t\t\tlineHeight=\"1.14rem\"\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\theight: \"1.14rem\",\n\t\t\t\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\t\t\t\tcursor: \"pointer\"\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tcolor=\"#fff\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetShowChannels(true)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{/* {console.log(channelList)} */}\n\t\t\t\t\t\t\t{`${currentChannel.code}(${currentChannel.name})`}\n\t\t\t\t\t\t\t{showChannels ? (\n\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\t\t\tborder: \"1px solid #000\",\n\t\t\t\t\t\t\t\t\t\ttop: \"calc(0.507rem + 20px)\"\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tcolor=\"#000\"\n\t\t\t\t\t\t\t\t\tbg=\"#fff\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{channelList.map(channel => (\n\t\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\t\twidth=\"160px\"\n\t\t\t\t\t\t\t\t\t\t\tlineHeight=\"32px\"\n\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\tbackground: \"#3c3c3c\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>{`${channel.code}(${channel.name})`}</Text>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t) : null}\n\n\t\t\t\t\t<AssginItem goodsList={goodsList}></AssginItem>\n\t\t\t\t</Box>\n\t\t\t</Flex>\n\t\t</React.Fragment>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}